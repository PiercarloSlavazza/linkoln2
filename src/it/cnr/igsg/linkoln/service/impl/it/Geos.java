/*******************************************************************************
 * Copyright (c) 2016-2021 Institute of Legal Information and Judicial Systems IGSG-CNR (formerly ITTIG-CNR)
 * 
 * This program and the accompanying materials  are made available under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either version 3 of the License, or (at your option)
 * any later version. 
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at: https://www.gnu.org/licenses/gpl-3.0.txt
 * Unless required by applicable law or agreed to in writing, software distributed under the Licence is 
 * distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and limitations under the Licence.
 *  
 * Authors: Lorenzo Bacci (IGSG-CNR)
 ******************************************************************************/
/* The following code was generated by JFlex 1.7.0 */

package it.cnr.igsg.linkoln.service.impl.it;

import java.io.IOException;
import java.io.StringReader;

import it.cnr.igsg.linkoln.entity.*;
import it.cnr.igsg.linkoln.service.*;



/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>jflex/Geos.jflex</tt>
 */
public class Geos extends LinkolnAnnotationService {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int lkn = 2;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1, 1
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\13\1\2\1\101\1\102\1\1\22\0\1\15\5\0\1\5"+
    "\1\0\1\0\1\0\2\0\1\0\1\3\1\54\1\55\1\53\1\53"+
    "\1\53\1\53\1\53\1\53\1\53\1\53\1\53\1\53\1\14\1\12"+
    "\5\0\1\27\1\7\1\41\1\66\1\37\1\77\1\31\1\75\1\50"+
    "\1\64\1\71\1\61\1\57\1\6\1\52\1\11\1\63\1\33\1\24"+
    "\1\45\1\43\1\35\1\64\1\64\1\64\1\23\1\72\1\0\1\73"+
    "\1\0\1\4\1\0\1\26\1\20\1\40\1\65\1\36\1\76\1\30"+
    "\1\74\1\47\1\100\1\70\1\60\1\56\1\17\1\51\1\22\1\62"+
    "\1\32\1\21\1\44\1\42\1\34\1\25\1\25\1\25\1\16\12\0"+
    "\1\101\44\0\1\0\5\0\1\0\3\0\1\0\5\0\1\0\5\0"+
    "\1\25\1\25\4\25\1\0\1\25\1\25\1\25\2\25\1\25\1\25"+
    "\2\25\1\0\1\25\1\25\1\25\3\25\2\0\1\25\1\25\2\25"+
    "\3\0\1\25\1\25\4\25\1\0\1\25\1\25\1\25\2\25\1\25"+
    "\1\25\2\25\1\0\1\25\1\25\1\25\3\25\2\0\1\25\1\25"+
    "\2\25\53\0\1\25\1\25\6\0\2\46\66\0\1\25\1\25\4\0"+
    "\1\25\1\25\17\0\1\10\u1c88\0\1\25\1\25\216\0\2\25\42\0"+
    "\1\25\1\25\u0144\0\1\15\20\0\1\3\1\3\4\0\1\0\16\0"+
    "\1\101\1\101\u0100\0\1\67\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udee5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\2\0\5\1\2\2\u01f5\0\1\3\5\0\2\4\47\0"+
    "\2\5\14\0\2\6\40\0\2\7\15\0\2\10\23\0"+
    "\2\11\67\0\2\12\20\0\2\13\32\0\2\14\5\0"+
    "\2\15\2\16\4\0\2\17\26\0\2\20\2\0\1\21"+
    "\26\0\2\22\37\0\2\23\2\24\50\0\2\25\16\0"+
    "\2\26\6\0\2\27\2\0\2\30\5\0\2\31\2\32"+
    "\1\0\2\33\2\0\2\34\6\0\2\35\13\0\2\36"+
    "\2\37\2\0\4\40\2\0\2\41\6\0\2\42\3\0"+
    "\2\43\4\44\4\0\2\45\2\0\2\46\1\0\2\47"+
    "\1\0\4\50\13\0\2\51\2\52\2\0\2\53\7\0"+
    "\2\54\2\55\2\0\4\56\3\0\2\57\5\0\2\60"+
    "\1\0\2\61\3\0\2\62\21\0\2\63\2\64\2\65"+
    "\1\0\2\66\1\0\2\67\12\0\4\70\16\0\2\71"+
    "\55\0\2\72\1\0\2\73\1\0\2\74\1\75\2\0"+
    "\2\76\2\0\2\77\4\0\2\100\5\0\2\101\3\0"+
    "\2\102\1\0\2\103\2\0\2\104\1\0\2\105\2\106"+
    "\1\0\2\107\1\0\2\110\2\111\12\0\4\112\7\0"+
    "\2\113\11\0\2\114\2\0\2\115\2\116\10\0\2\117"+
    "\2\120\2\121\1\0\2\122\7\0\2\123\2\124\2\125"+
    "\4\0\2\126\2\127\2\130\2\131\4\0\2\132\2\133"+
    "\2\134\2\135\6\0\2\136\1\0\2\137\2\140\3\0"+
    "\2\141\2\142\2\143\2\0\2\144\31\0\2\145\2\146"+
    "\4\0\2\147\2\150\2\151\1\0\2\152\4\0\2\153"+
    "\2\0\2\154\1\0\2\155\4\0\2\156\2\157\2\160"+
    "\16\0\2\161\1\0\2\162\2\163\1\0\2\164\2\165"+
    "\2\0\2\166\2\167\2\170\2\171\2\172\1\0\2\173"+
    "\2\174\2\0\2\175\2\0\2\176\4\0\2\177\2\200"+
    "\4\0\2\201\5\0\2\202\3\0\2\203\1\21\3\0"+
    "\2\204\1\0\2\205\2\206\1\0\2\207\4\0\2\210"+
    "\2\211\3\0\2\212\1\0\2\213\2\0\2\214\2\215"+
    "\6\0\2\216\1\0\2\217\2\220\32\0\2\221\2\222"+
    "\5\0\2\223\2\224\1\0\2\225\1\0\2\226\11\0"+
    "\2\227\4\230\3\0\2\231\1\0\2\232\2\233\2\0"+
    "\2\234\2\235\2\0\2\236\7\0\1\237\3\0\2\240"+
    "\12\0\2\241\3\0\2\242\22\0\2\243\13\0\2\244"+
    "\2\245\3\0\2\246\2\247\2\0\2\250\1\0\2\251"+
    "\1\0\2\252\2\253\7\0\2\254\2\255\4\0\2\256"+
    "\12\0\2\257\6\0\2\260\4\0\2\261\5\0\2\262"+
    "\2\263\13\0\2\264\4\0\1\56\2\265\1\0\2\266"+
    "\13\0\1\70\2\267\3\0\2\270\4\0\2\271\2\0"+
    "\2\272\10\0\1\44\1\50\4\0\1\230\3\0\1\112";

  private static int [] zzUnpackAction() {
    int [] result = new int[1814];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\103\0\206\0\311\0\u010c\0\u014f\0\u0192\0\u010c"+
    "\0\u01d5\0\u0218\0\u025b\0\u029e\0\u02e1\0\u0324\0\u0367\0\u03aa"+
    "\0\u03ed\0\u0430\0\u0473\0\u04b6\0\u04f9\0\u053c\0\u057f\0\u05c2"+
    "\0\u0605\0\u0648\0\u068b\0\u06ce\0\u0711\0\u0754\0\u0797\0\u07da"+
    "\0\u081d\0\u0860\0\u08a3\0\206\0\u08e6\0\u0929\0\u096c\0\u09af"+
    "\0\u09f2\0\u0a35\0\u0a78\0\u0abb\0\u0afe\0\u0b41\0\u0b84\0\u0bc7"+
    "\0\u0c0a\0\u0c4d\0\u0c90\0\u0cd3\0\u0d16\0\u0d59\0\u0d9c\0\u0ddf"+
    "\0\u0e22\0\u0e65\0\u0ea8\0\u0eeb\0\u0f2e\0\u0f71\0\u0fb4\0\u0ff7"+
    "\0\u103a\0\u107d\0\u10c0\0\u1103\0\u1146\0\u1189\0\u11cc\0\u120f"+
    "\0\u1252\0\u1295\0\u12d8\0\u131b\0\u135e\0\u13a1\0\u13e4\0\u1427"+
    "\0\u146a\0\u14ad\0\u14f0\0\u1533\0\u1576\0\u15b9\0\u15fc\0\u163f"+
    "\0\u1682\0\u16c5\0\u1708\0\u174b\0\u178e\0\u17d1\0\u1814\0\u1857"+
    "\0\u189a\0\u18dd\0\u1920\0\u1963\0\u19a6\0\u19e9\0\u1a2c\0\u1a6f"+
    "\0\u1ab2\0\u1af5\0\u1b38\0\u1b7b\0\u1bbe\0\u1c01\0\u1c44\0\u1c87"+
    "\0\u1cca\0\u1d0d\0\u1d50\0\u1d93\0\u1dd6\0\u1e19\0\u1e5c\0\u1e9f"+
    "\0\u1ee2\0\u1f25\0\u1f68\0\u1fab\0\u1fee\0\u2031\0\u2074\0\u20b7"+
    "\0\u20fa\0\u213d\0\u2180\0\u21c3\0\u2206\0\u2249\0\u228c\0\u22cf"+
    "\0\u2312\0\u2355\0\u2398\0\u23db\0\u241e\0\u2461\0\u24a4\0\u24e7"+
    "\0\u252a\0\u256d\0\u25b0\0\u25f3\0\u2636\0\u2679\0\u26bc\0\u26ff"+
    "\0\u2742\0\u2785\0\u27c8\0\u280b\0\u284e\0\u2891\0\u28d4\0\u2917"+
    "\0\u295a\0\u299d\0\u29e0\0\u2a23\0\u2a66\0\u2aa9\0\u2aec\0\u2b2f"+
    "\0\u2b72\0\u2bb5\0\u2bf8\0\u2c3b\0\u2c7e\0\u2cc1\0\u2d04\0\u2d47"+
    "\0\u2d8a\0\u2dcd\0\u2e10\0\u2e53\0\u2e96\0\u2ed9\0\u2f1c\0\u2f5f"+
    "\0\u2fa2\0\u2fe5\0\u3028\0\u306b\0\u30ae\0\u30f1\0\u3134\0\u3177"+
    "\0\u31ba\0\u31fd\0\u3240\0\u3283\0\u32c6\0\u3309\0\u334c\0\u338f"+
    "\0\u33d2\0\u3415\0\u3458\0\u349b\0\u34de\0\u3521\0\u3564\0\u35a7"+
    "\0\u35ea\0\u362d\0\u3670\0\u36b3\0\u36f6\0\u3739\0\u377c\0\u37bf"+
    "\0\u3802\0\u3845\0\u3888\0\u38cb\0\u390e\0\u3951\0\u3994\0\u39d7"+
    "\0\u3a1a\0\u3a5d\0\u3aa0\0\u3ae3\0\u3b26\0\u3b69\0\u3bac\0\u3bef"+
    "\0\u3c32\0\u3c75\0\u3cb8\0\u3cfb\0\u3d3e\0\u3d81\0\u3dc4\0\u3e07"+
    "\0\u3e4a\0\u3e8d\0\u3ed0\0\u3f13\0\u3f56\0\u3f99\0\u3fdc\0\u401f"+
    "\0\u4062\0\u40a5\0\u40e8\0\u412b\0\u416e\0\u41b1\0\u41f4\0\u4237"+
    "\0\u427a\0\u42bd\0\u4300\0\u4343\0\u4386\0\u43c9\0\u440c\0\u444f"+
    "\0\u4492\0\u44d5\0\u4518\0\u455b\0\u459e\0\u45e1\0\u4624\0\u4667"+
    "\0\u46aa\0\u46ed\0\u4730\0\u4773\0\u47b6\0\u47f9\0\u483c\0\u487f"+
    "\0\u48c2\0\u4905\0\u4948\0\u498b\0\u49ce\0\u4a11\0\u4a54\0\u4a97"+
    "\0\u4ada\0\u4b1d\0\u4b60\0\u4ba3\0\u4be6\0\u4c29\0\u4c6c\0\u4caf"+
    "\0\u4cf2\0\u4d35\0\u4d78\0\u4dbb\0\u4dfe\0\u4e41\0\u4e84\0\u4ec7"+
    "\0\u4f0a\0\u4f4d\0\u4f90\0\u4fd3\0\u5016\0\u5059\0\u509c\0\u50df"+
    "\0\u5122\0\u5165\0\u51a8\0\u51eb\0\u522e\0\u5271\0\u52b4\0\u52f7"+
    "\0\u533a\0\u537d\0\u53c0\0\u5403\0\u5446\0\u5489\0\u54cc\0\u550f"+
    "\0\u5552\0\u5595\0\u55d8\0\u561b\0\u565e\0\u56a1\0\u56e4\0\u5727"+
    "\0\u576a\0\u57ad\0\u57f0\0\u5833\0\u5876\0\u58b9\0\u58fc\0\u593f"+
    "\0\u5982\0\u59c5\0\u5a08\0\u5a4b\0\u5a8e\0\u5ad1\0\u5b14\0\u5b57"+
    "\0\u5b9a\0\u5bdd\0\u5c20\0\u5c63\0\u5ca6\0\u5ce9\0\u5d2c\0\u5d6f"+
    "\0\u5db2\0\u5df5\0\u5e38\0\u5e7b\0\u5ebe\0\u5f01\0\u5f44\0\u5f87"+
    "\0\u5fca\0\u600d\0\u6050\0\u6093\0\u60d6\0\u6119\0\u615c\0\u619f"+
    "\0\u61e2\0\u6225\0\u6268\0\u62ab\0\u62ee\0\u6331\0\u6374\0\u63b7"+
    "\0\u63fa\0\u643d\0\u6480\0\u64c3\0\u6506\0\u6549\0\u658c\0\u65cf"+
    "\0\u6612\0\u6655\0\u6698\0\u66db\0\u671e\0\u6761\0\u67a4\0\u67e7"+
    "\0\u682a\0\u686d\0\u68b0\0\u68f3\0\u6936\0\u6979\0\u69bc\0\u69ff"+
    "\0\u6a42\0\u6a85\0\u6ac8\0\u6b0b\0\u6b4e\0\u6b91\0\u6bd4\0\u6c17"+
    "\0\u6c5a\0\u6c9d\0\u6ce0\0\u6d23\0\u6d66\0\u6da9\0\u6dec\0\u6e2f"+
    "\0\u6e72\0\u6eb5\0\u6ef8\0\u6f3b\0\u6f7e\0\u6fc1\0\u7004\0\u7047"+
    "\0\u708a\0\u70cd\0\u7110\0\u7153\0\u7196\0\u71d9\0\u721c\0\u725f"+
    "\0\u72a2\0\u72e5\0\u7328\0\u736b\0\u73ae\0\u73f1\0\u7434\0\u7477"+
    "\0\u74ba\0\u74fd\0\u7540\0\u7583\0\u75c6\0\u7609\0\u764c\0\u768f"+
    "\0\u76d2\0\u7715\0\u7758\0\u779b\0\u77de\0\u7821\0\u7864\0\u78a7"+
    "\0\u78ea\0\u792d\0\u7970\0\u79b3\0\u79f6\0\u7a39\0\u7a7c\0\u7abf"+
    "\0\u7b02\0\u7b45\0\u7b88\0\u7bcb\0\u7c0e\0\u7c51\0\u7c94\0\u7cd7"+
    "\0\u7d1a\0\u7d5d\0\u7da0\0\u7de3\0\u7e26\0\u7e69\0\u7eac\0\u7eef"+
    "\0\u7f32\0\u7f75\0\u7fb8\0\u7ffb\0\u803e\0\u8081\0\u80c4\0\u8107"+
    "\0\u814a\0\u818d\0\u81d0\0\u8213\0\u8256\0\u8299\0\u82dc\0\u831f"+
    "\0\u8362\0\u83a5\0\u83e8\0\u842b\0\u846e\0\u84b1\0\u010c\0\u84f4"+
    "\0\u8537\0\u857a\0\u85bd\0\u8600\0\u010c\0\u8643\0\u8686\0\u86c9"+
    "\0\u870c\0\u874f\0\u8792\0\u87d5\0\u8818\0\u885b\0\u889e\0\u88e1"+
    "\0\u8924\0\u8967\0\u89aa\0\u89ed\0\u8a30\0\u8a73\0\u8ab6\0\u8af9"+
    "\0\u8b3c\0\u8b7f\0\u8bc2\0\u8c05\0\u8c48\0\u8c8b\0\u8cce\0\u8d11"+
    "\0\u8d54\0\u8d97\0\u8dda\0\u8e1d\0\u8e60\0\u8ea3\0\u8ee6\0\u8f29"+
    "\0\u8f6c\0\u8faf\0\u8ff2\0\u9035\0\u9078\0\u010c\0\u90bb\0\u90fe"+
    "\0\u9141\0\u9184\0\u91c7\0\u920a\0\u924d\0\u9290\0\u92d3\0\u9316"+
    "\0\u9359\0\u939c\0\u93df\0\u010c\0\u9422\0\u9465\0\u94a8\0\u94eb"+
    "\0\u952e\0\u9571\0\u95b4\0\u95f7\0\u963a\0\u967d\0\u96c0\0\u9703"+
    "\0\u9746\0\u9789\0\u97cc\0\u980f\0\u9852\0\u9895\0\u98d8\0\u991b"+
    "\0\u995e\0\u99a1\0\u99e4\0\u9a27\0\u9a6a\0\u9aad\0\u9af0\0\u9b33"+
    "\0\u9b76\0\u9bb9\0\u9bfc\0\u9c3f\0\u9c82\0\u010c\0\u9cc5\0\u9d08"+
    "\0\u9d4b\0\u9d8e\0\u9dd1\0\u9e14\0\u9e57\0\u9e9a\0\u9edd\0\u9f20"+
    "\0\u9f63\0\u9fa6\0\u9fe9\0\ua02c\0\u010c\0\ua06f\0\ua0b2\0\ua0f5"+
    "\0\ua138\0\ua17b\0\ua1be\0\ua201\0\ua244\0\ua287\0\ua2ca\0\ua30d"+
    "\0\ua350\0\ua393\0\ua3d6\0\ua419\0\ua45c\0\ua49f\0\ua4e2\0\ua525"+
    "\0\ua568\0\u010c\0\ua5ab\0\ua5ee\0\ua631\0\ua674\0\ua6b7\0\ua6fa"+
    "\0\ua73d\0\ua780\0\ua7c3\0\ua806\0\ua849\0\ua88c\0\ua8cf\0\ua912"+
    "\0\ua955\0\ua998\0\ua9db\0\uaa1e\0\uaa61\0\uaaa4\0\uaae7\0\uab2a"+
    "\0\uab6d\0\uabb0\0\uabf3\0\uac36\0\uac79\0\uacbc\0\uacff\0\uad42"+
    "\0\uad85\0\uadc8\0\uae0b\0\uae4e\0\uae91\0\uaed4\0\uaf17\0\uaf5a"+
    "\0\uaf9d\0\uafe0\0\ub023\0\ub066\0\ub0a9\0\ub0ec\0\ub12f\0\ub172"+
    "\0\ub1b5\0\ub1f8\0\ub23b\0\ub27e\0\ub2c1\0\ub304\0\ub347\0\ub38a"+
    "\0\ub3cd\0\ub410\0\u010c\0\ub453\0\ub496\0\ub4d9\0\ub51c\0\ub55f"+
    "\0\ub5a2\0\ub5e5\0\ub628\0\ub66b\0\ub6ae\0\ub6f1\0\ub734\0\ub777"+
    "\0\ub7ba\0\ub7fd\0\ub840\0\ub883\0\u010c\0\ub8c6\0\ub909\0\ub94c"+
    "\0\ub98f\0\ub9d2\0\uba15\0\uba58\0\uba9b\0\ubade\0\ubb21\0\ubb64"+
    "\0\ubba7\0\ubbea\0\ubc2d\0\ubc70\0\ubcb3\0\ubcf6\0\ubd39\0\ubd7c"+
    "\0\ubdbf\0\ube02\0\ube45\0\ube88\0\ubecb\0\ubf0e\0\ubf51\0\ubf94"+
    "\0\u010c\0\ubfd7\0\uc01a\0\uc05d\0\uc0a0\0\uc0e3\0\uc126\0\u010c"+
    "\0\uc169\0\u010c\0\uc1ac\0\uc1ef\0\uc232\0\uc275\0\uc2b8\0\u010c"+
    "\0\uc2fb\0\uc33e\0\uc381\0\uc3c4\0\uc407\0\uc44a\0\uc48d\0\uc4d0"+
    "\0\uc513\0\uc556\0\uc599\0\uc5dc\0\uc61f\0\uc662\0\uc6a5\0\uc6e8"+
    "\0\uc72b\0\uc76e\0\uc7b1\0\uc7f4\0\uc837\0\uc87a\0\uc8bd\0\u010c"+
    "\0\uc900\0\uc943\0\uc986\0\u010c\0\uc9c9\0\uca0c\0\uca4f\0\uca92"+
    "\0\ucad5\0\ucb18\0\ucb5b\0\ucb9e\0\ucbe1\0\ucc24\0\ucc67\0\uccaa"+
    "\0\ucced\0\ucd30\0\ucd73\0\ucdb6\0\ucdf9\0\uce3c\0\uce7f\0\ucec2"+
    "\0\ucf05\0\ucf48\0\u010c\0\ucf8b\0\ucfce\0\ud011\0\ud054\0\ud097"+
    "\0\ud0da\0\ud11d\0\ud160\0\ud1a3\0\ud1e6\0\ud229\0\ud26c\0\ud2af"+
    "\0\ud2f2\0\ud335\0\ud378\0\ud3bb\0\ud3fe\0\ud441\0\ud484\0\ud4c7"+
    "\0\ud50a\0\ud54d\0\ud590\0\ud5d3\0\ud616\0\ud659\0\ud69c\0\ud6df"+
    "\0\ud722\0\ud765\0\ud7a8\0\u010c\0\ud7eb\0\u010c\0\ud82e\0\ud871"+
    "\0\ud8b4\0\ud8f7\0\ud93a\0\ud97d\0\ud9c0\0\uda03\0\uda46\0\uda89"+
    "\0\udacc\0\udb0f\0\udb52\0\udb95\0\udbd8\0\udc1b\0\udc5e\0\udca1"+
    "\0\udce4\0\udd27\0\udd6a\0\uddad\0\uddf0\0\ude33\0\ude76\0\udeb9"+
    "\0\udefc\0\udf3f\0\udf82\0\udfc5\0\ue008\0\ue04b\0\ue08e\0\ue0d1"+
    "\0\ue114\0\ue157\0\ue19a\0\ue1dd\0\ue220\0\ue263\0\ue2a6\0\u010c"+
    "\0\ue2e9\0\ue32c\0\ue36f\0\ue3b2\0\ue3f5\0\ue438\0\ue47b\0\ue4be"+
    "\0\ue501\0\ue544\0\ue587\0\ue5ca\0\ue60d\0\ue650\0\ue693\0\u010c"+
    "\0\ue6d6\0\ue719\0\ue75c\0\ue79f\0\ue7e2\0\ue825\0\ue868\0\u010c"+
    "\0\ue8ab\0\ue8ee\0\ue931\0\u010c\0\ue974\0\ue9b7\0\ue9fa\0\uea3d"+
    "\0\uea80\0\ueac3\0\u010c\0\ueb06\0\u010c\0\ueb49\0\ueb8c\0\u010c"+
    "\0\uebcf\0\uec12\0\uec55\0\u010c\0\uec98\0\uecdb\0\ued1e\0\ued61"+
    "\0\ueda4\0\uede7\0\uee2a\0\u010c\0\uee6d\0\ueeb0\0\ueef3\0\uef36"+
    "\0\uef79\0\uefbc\0\uefff\0\uf042\0\uf085\0\uf0c8\0\uf10b\0\uf14e"+
    "\0\u010c\0\uf191\0\u010c\0\uf1d4\0\uf217\0\uf25a\0\u010c\0\uf29d"+
    "\0\uf2e0\0\uf323\0\uf366\0\uf3a9\0\u010c\0\uf3ec\0\uf42f\0\uf472"+
    "\0\uf4b5\0\uf4f8\0\uf53b\0\uf57e\0\u010c\0\uf5c1\0\uf604\0\uf647"+
    "\0\uf68a\0\u010c\0\uf6cd\0\u010c\0\uf710\0\uf753\0\uf796\0\uf7d9"+
    "\0\uf81c\0\uf85f\0\uf8a2\0\u010c\0\uf8e5\0\uf928\0\uf96b\0\u010c"+
    "\0\uf9ae\0\uf9f1\0\u010c\0\ufa34\0\ufa77\0\u010c\0\ufaba\0\ufafd"+
    "\0\ufb40\0\ufb83\0\ufbc6\0\ufc09\0\ufc4c\0\ufc8f\0\ufcd2\0\ufd15"+
    "\0\ufd58\0\ufd9b\0\ufdde\0\ufe21\0\u010c\0\ufe64\0\u010c\0\ufea7"+
    "\0\ufeea\0\uff2d\0\u010c\0\uff70\0\uffb3\0\ufff6\1\71\1\174"+
    "\1\277\1\u0102\1\u0145\0\u010c\1\u0188\0\u010c\1\u01cb\1\u020e"+
    "\1\u0251\0\u010c\1\u0294\1\u02d7\1\u031a\1\u035d\1\u03a0\1\u03e3"+
    "\0\u010c\1\u0426\1\u0469\1\u04ac\1\u04ef\1\u0532\1\u0575\0\u010c"+
    "\1\u05b8\1\u05fb\0\u010c\1\u063e\1\u0681\1\u06c4\1\u0707\0\u010c"+
    "\1\u074a\1\u078d\1\u07d0\1\u0813\1\u0856\1\u0899\1\u08dc\1\u091f"+
    "\1\u0962\1\u09a5\1\u09e8\1\u0a2b\1\u0a6e\1\u0ab1\1\u0af4\1\u0b37"+
    "\1\u0b7a\1\u0bbd\0\u010c\1\u0c00\0\u010c\1\u0c43\0\u010c\1\u0c86"+
    "\1\u0cc9\0\u010c\1\u0d0c\1\u0d4f\0\u010c\1\u0d92\1\u0dd5\1\u0e18"+
    "\1\u0e5b\1\u0e9e\1\u0ee1\1\u0f24\1\u0f67\1\u0faa\1\u0fed\1\u1030"+
    "\0\u010c\1\u1073\1\u10b6\1\u10f9\1\u113c\1\u117f\1\u11c2\1\u1205"+
    "\1\u1248\1\u128b\1\u12ce\1\u1311\1\u1354\1\u1397\1\u13da\1\u141d"+
    "\1\u1460\1\u14a3\0\u010c\1\u14e6\1\u1529\1\u156c\1\u15af\1\u15f2"+
    "\1\u1635\1\u1678\1\u16bb\1\u16fe\1\u1741\1\u1784\1\u17c7\1\u180a"+
    "\1\u184d\1\u1890\1\u18d3\1\u1916\1\u1959\1\u199c\1\u19df\1\u1a22"+
    "\1\u1a65\1\u1aa8\1\u1aeb\1\u1b2e\1\u1b71\1\u1bb4\1\u1bf7\1\u1c3a"+
    "\1\u1c7d\1\u1cc0\1\u1d03\1\u1d46\1\u1d89\1\u1dcc\1\u1e0f\1\u1e52"+
    "\1\u1e95\1\u1ed8\1\u1f1b\1\u1f5e\1\u1fa1\1\u1fe4\1\u2027\1\u206a"+
    "\1\u20ad\0\u010c\1\u20f0\1\u2133\0\u010c\1\u2176\1\u21b9\0\u010c"+
    "\1\u21fc\0\u010c\1\u223f\1\u2282\0\u010c\1\u22c5\1\u2308\1\u234b"+
    "\0\u010c\1\u238e\1\u23d1\1\u2414\1\u2457\1\u249a\0\u010c\1\u24dd"+
    "\1\u2520\1\u2563\1\u25a6\1\u25e9\1\u262c\0\u010c\1\u266f\1\u26b2"+
    "\1\u26f5\1\u2738\0\u010c\1\u277b\1\u27be\0\u010c\1\u2801\1\u2844"+
    "\1\u2887\0\u010c\1\u28ca\1\u290d\0\u010c\1\u2950\0\u010c\1\u2993"+
    "\1\u29d6\0\u010c\1\u2a19\1\u2a5c\0\u010c\1\u2a9f\0\u010c\1\u2ae2"+
    "\1\u2b25\1\u2b68\1\u2bab\1\u2bee\1\u2c31\1\u2c74\1\u2cb7\1\u2cfa"+
    "\1\u2d3d\1\u2d80\0\u010c\1\u2dc3\1\u2e06\1\u2e49\1\u2e8c\1\u2ecf"+
    "\1\u2f12\1\u2f55\1\u2f98\1\u2fdb\1\u301e\0\u010c\1\u3061\1\u30a4"+
    "\1\u30e7\0\uf2e0\0\uf323\1\u312a\1\u316d\1\u31b0\1\u31f3\1\u3236"+
    "\0\u010c\1\u3279\1\u32bc\1\u32ff\0\u010c\1\u3342\0\u010c\1\u3385"+
    "\1\u33c8\1\u340b\0\uf753\0\uf796\1\u344e\1\u3491\1\u34d4\1\u3517"+
    "\0\u010c\1\u355a\0\u010c\1\u359d\0\u010c\1\u35e0\1\u3623\0\u010c"+
    "\1\u3666\1\u36a9\0\ufafd\0\ufb40\1\u36ec\1\u372f\1\u3772\1\u37b5"+
    "\0\u010c\1\u37f8\0\u010c\1\u383b\0\u010c\1\u387e\1\u38c1\1\u3904"+
    "\1\u3947\1\u398a\0\u010c\1\u39cd\0\u010c\1\u3a10\0\u010c\1\u3a53"+
    "\0\u010c\1\u3a96\1\u3ad9\1\u3b1c\1\u3b5f\1\u3ba2\0\u010c\1\u3be5"+
    "\0\u010c\1\u3c28\0\u010c\1\u3c6b\0\u010c\1\u3cae\1\u02d7\1\u031a"+
    "\1\u3cf1\1\u3d34\1\u3d77\1\u3dba\0\u010c\1\u3dfd\1\u3e40\0\u010c"+
    "\1\u3e83\0\u010c\1\u3ec6\1\u3f09\1\u3f4c\1\u3f8f\0\u010c\1\u3fd2"+
    "\0\u010c\1\u4015\0\u010c\1\u4058\1\u409b\1\u40de\0\u010c\1\u4121"+
    "\1\u4164\1\u41a7\1\u41ea\1\u422d\1\u4270\1\u42b3\1\u42f6\1\u4339"+
    "\1\u437c\1\u43bf\1\u4402\1\u4445\1\u4488\1\u44cb\1\u450e\1\u4551"+
    "\1\u4594\1\u45d7\1\u461a\1\u465d\1\u46a0\1\u46e3\1\u4726\1\u4769"+
    "\1\u47ac\0\u010c\1\u47ef\0\u010c\1\u4832\1\u4875\1\u48b8\1\u48fb"+
    "\1\u493e\0\u010c\1\u4981\0\u010c\1\u49c4\0\u010c\1\u4a07\1\u4a4a"+
    "\0\u010c\1\u4a8d\1\u10b6\1\u10f9\1\u4ad0\1\u4b13\0\u010c\1\u4b56"+
    "\1\u4b99\1\u4bdc\0\u010c\1\u4c1f\1\u4c62\0\u010c\1\u4ca5\1\u4ce8"+
    "\1\u4d2b\1\u4d6e\1\u4db1\0\u010c\1\u4df4\0\u010c\1\u4e37\0\u010c"+
    "\1\u4e7a\1\u4ebd\1\u4f00\1\u4f43\1\u4f86\1\u4fc9\1\u500c\1\u504f"+
    "\1\u5092\1\u50d5\1\u5118\1\u515b\1\u519e\1\u51e1\1\u5224\0\u010c"+
    "\1\u5267\1\u52aa\0\u010c\1\u52ed\0\u010c\1\u5330\1\u5373\0\u010c"+
    "\1\u53b6\0\u010c\1\u53f9\1\u543c\1\u547f\0\u010c\1\u54c2\0\u010c"+
    "\1\u5505\0\u010c\1\u5548\0\u010c\1\u558b\0\u010c\1\u55ce\1\u5611"+
    "\0\u010c\1\u5654\0\u010c\1\u5697\1\u56da\1\u571d\0\u010c\1\u5760"+
    "\1\u57a3\1\u57e6\0\u010c\1\u5829\1\u586c\1\u58af\1\u58f2\1\u5935"+
    "\0\u010c\1\u5978\0\u010c\1\u59bb\1\u59fe\1\u5a41\1\u5a84\1\u5ac7"+
    "\0\u010c\1\u5b0a\1\u2e06\1\u2e49\1\u5b4d\1\u5b90\1\u5bd3\0\u010c"+
    "\1\u5c16\1\u5c59\1\u5c9c\1\u5cdf\0\u010c\1\u5d22\1\u5d65\1\u5da8"+
    "\1\u5deb\1\u5e2e\0\u010c\1\u5e71\1\u5eb4\0\u010c\1\u5ef7\0\u010c"+
    "\1\u5f3a\1\u5f7d\0\u010c\1\u5fc0\1\u6003\1\u6046\1\u6089\1\u60cc"+
    "\0\u010c\1\u610f\0\u010c\1\u6152\1\u6195\1\u61d8\1\u621b\0\u010c"+
    "\1\u625e\1\u62a1\0\u010c\1\u62e4\1\u6327\1\u636a\0\u010c\1\u63ad"+
    "\0\u010c\1\u63f0\1\u6433\1\u6476\1\u64b9\1\u64fc\1\u653f\1\u6582"+
    "\0\u010c\1\u65c5\1\u6608\0\u010c\1\u664b\0\u010c\1\u668e\1\u66d1"+
    "\1\u6714\1\u6757\1\u679a\1\u67dd\1\u6820\1\u6863\1\u68a6\1\u68e9"+
    "\1\u692c\1\u696f\1\u69b2\1\u69f5\1\u6a38\1\u6a7b\1\u6abe\1\u6b01"+
    "\1\u6b44\1\u6b87\1\u6bca\1\u6c0d\1\u6c50\1\u6c93\1\u6cd6\1\u6d19"+
    "\1\u6d5c\0\u010c\1\u6d9f\0\u010c\1\u6de2\1\u6e25\1\u6e68\1\u6eab"+
    "\1\u6eee\1\u6f31\0\u010c\1\u6f74\0\u010c\1\u6fb7\1\u6ffa\0\u010c"+
    "\1\u703d\1\u7080\0\u010c\1\u70c3\1\u7106\1\u7149\1\u718c\1\u71cf"+
    "\1\u7212\1\u7255\1\u7298\1\u72db\1\u731e\0\u010c\1\u7361\0\u010c"+
    "\1\u73a4\1\u73e7\1\u742a\1\u746d\1\u74b0\1\u74f3\0\u010c\1\u7536"+
    "\1\u7579\0\u010c\1\u75bc\0\u010c\1\u75ff\1\u7642\1\u7685\0\u010c"+
    "\1\u76c8\0\u010c\1\u770b\1\u774e\1\u7791\0\u010c\1\u77d4\1\u7817"+
    "\1\u785a\1\u789d\1\u78e0\1\u7923\1\u7966\1\u79a9\0\u010c\1\u79ec"+
    "\1\u7a2f\1\u7a72\0\u010c\1\u7ab5\1\u7af8\1\u7b3b\1\u7b7e\1\u7bc1"+
    "\1\u7c04\1\u7c47\1\u7c8a\1\u7ccd\1\u7d10\1\u7d53\0\u010c\1\u7d96"+
    "\1\u7dd9\1\u7e1c\1\u7e5f\0\u010c\1\u7ea2\1\u7ee5\1\u7f28\1\u7f6b"+
    "\1\u7fae\1\u7ff1\1\u8034\1\u8077\1\u80ba\1\u80fd\1\u8140\1\u8183"+
    "\1\u81c6\1\u8209\1\u824c\1\u828f\1\u82d2\1\u8315\1\u8358\0\u010c"+
    "\1\u839b\1\u83de\1\u8421\1\u8464\1\u84a7\1\u84ea\1\u73e7\1\u742a"+
    "\1\u852d\1\u8570\1\u85b3\1\u85f6\0\u010c\1\u8639\0\u010c\1\u867c"+
    "\1\u86bf\1\u8702\1\u8745\0\u010c\1\u8788\0\u010c\1\u87cb\1\u880e"+
    "\1\u8851\0\u010c\1\u8894\1\u88d7\0\u010c\1\u891a\1\u895d\0\u010c"+
    "\1\u89a0\0\u010c\1\u89e3\1\u8a26\1\u8a69\1\u8aac\1\u8aef\1\u8b32"+
    "\1\u8b75\1\u8bb8\0\u010c\1\u8bfb\0\u010c\1\u8c3e\1\u8c81\1\u8cc4"+
    "\1\u8d07\1\u8d4a\0\u010c\1\u8d8d\1\u8dd0\1\u8e13\1\u8e56\1\u8e99"+
    "\1\u8edc\1\u8f1f\1\u8f62\1\u8fa5\1\u8fe8\1\u902b\0\u010c\1\u906e"+
    "\1\u90b1\1\u90f4\1\u9137\1\u917a\1\u91bd\1\u9200\0\u010c\1\u9243"+
    "\1\u9286\1\u92c9\1\u930c\1\u934f\0\u010c\1\u9392\1\u93d5\1\u9418"+
    "\1\u945b\1\u949e\1\u94e1\0\u010c\1\u9524\0\u010c\1\u9567\1\u95aa"+
    "\1\u95ed\1\u9630\1\u9673\1\u96b6\1\u96f9\1\u973c\1\u977f\1\u97c2"+
    "\1\u9805\1\u9848\0\u010c\1\u988b\1\u98ce\1\u9911\1\u9954\1\u9997"+
    "\1\u99da\0\u010c\1\u9a1d\1\u9a60\0\u010c\1\u9aa3\1\u9ae6\1\u9b29"+
    "\1\u9b6c\1\u9baf\1\u9bf2\1\u9c35\1\u9c78\1\u9cbb\1\u9cfe\1\u9d41"+
    "\1\u9d84\1\u9dc7\0\u010c\1\u9e0a\1\u9e4d\1\u9e90\1\u9ed3\0\u010c"+
    "\1\u9f16\1\u9f59\1\u9f9c\1\u9fdf\1\ua022\0\u010c\1\ua065\1\ua0a8"+
    "\1\ua0eb\0\u010c\1\ua12e\1\ua171\1\ua1b4\1\ua1f7\1\ua23a\1\ua27d"+
    "\1\ua2c0\1\ua303\1\ua346\1\ua389\1\ua3cc\1\ua40f\1\ua452\1\ua495"+
    "\1\ua4d8\1\ua51b\1\ua55e\1\ua5a1\1\ua5e4\1\ua627";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1814];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\3\1\4\4\3\2\5\1\3\1\5\4\3\30\5"+
    "\1\3\5\5\2\3\2\5\2\6\5\5\1\3\2\5"+
    "\1\7\1\3\5\5\2\3\72\10\1\11\10\10\6\0"+
    "\1\12\1\13\1\14\1\15\5\0\1\12\1\16\1\14"+
    "\1\17\1\0\1\20\1\0\1\21\1\22\2\23\2\24"+
    "\2\25\2\26\2\27\2\30\1\31\1\32\3\33\2\34"+
    "\3\0\1\35\1\36\1\37\1\40\3\0\2\41\7\0"+
    "\1\42\1\43\5\0\1\44\3\0\1\12\1\13\1\14"+
    "\1\15\5\0\1\12\1\16\1\14\1\17\1\0\1\20"+
    "\1\0\1\21\1\22\2\23\2\24\2\25\2\26\2\27"+
    "\2\30\1\31\1\32\3\33\2\34\3\0\1\35\1\36"+
    "\1\37\1\40\3\0\2\41\7\0\1\42\1\43\106\0"+
    "\1\45\1\46\4\45\2\0\1\45\1\0\4\45\30\0"+
    "\1\45\4\0\3\45\11\0\1\45\2\0\2\45\5\0"+
    "\2\45\6\0\1\12\1\13\1\14\1\15\5\0\1\12"+
    "\1\16\1\14\1\17\1\0\1\20\1\0\1\21\1\22"+
    "\2\23\2\24\2\25\2\26\2\27\2\30\1\31\1\32"+
    "\3\33\2\34\3\0\1\35\1\36\1\47\1\50\3\0"+
    "\2\41\7\0\1\42\1\43\60\0\1\51\53\0\2\52"+
    "\12\0\2\53\5\0\2\54\56\0\2\55\2\0\2\56"+
    "\2\0\2\57\2\0\2\60\2\0\3\61\2\62\31\0"+
    "\2\63\2\0\1\64\1\63\2\0\1\65\1\0\1\63"+
    "\1\0\1\63\1\0\1\63\2\0\1\65\3\0\2\66"+
    "\4\0\2\67\2\70\6\0\3\71\2\72\1\0\1\73"+
    "\1\0\2\74\2\75\20\0\1\63\26\0\2\76\2\0"+
    "\2\77\2\0\2\100\2\0\2\101\2\0\3\102\2\103"+
    "\56\0\2\55\2\0\2\56\2\0\2\57\2\0\2\60"+
    "\2\0\3\61\2\104\56\0\2\76\6\0\2\100\2\0"+
    "\2\101\2\0\3\102\2\105\31\0\2\63\2\0\1\64"+
    "\1\63\2\0\1\106\1\0\1\63\1\0\1\63\1\0"+
    "\1\63\2\0\1\106\3\0\2\66\4\0\2\67\2\70"+
    "\6\0\3\71\2\72\1\0\1\73\1\0\2\74\2\75"+
    "\20\0\1\63\6\0\1\107\1\110\1\111\5\0\1\112"+
    "\1\107\1\110\1\111\1\0\1\112\1\111\3\0\2\113"+
    "\2\114\2\115\4\0\2\116\5\0\2\117\5\0\2\120"+
    "\27\0\1\107\1\110\1\111\5\0\1\112\1\107\1\110"+
    "\1\111\1\0\1\112\1\111\3\0\2\113\2\114\2\115"+
    "\4\0\2\116\5\0\2\117\5\0\2\120\2\121\51\0"+
    "\2\122\2\0\2\123\11\0\2\124\56\0\2\125\6\0"+
    "\2\126\2\0\2\127\2\0\3\130\2\131\56\0\2\132"+
    "\6\0\2\133\6\0\3\134\3\0\1\135\34\0\1\136"+
    "\1\0\1\137\6\0\1\136\1\0\1\137\2\0\1\137"+
    "\31\0\2\140\51\0\2\141\2\0\2\142\2\0\2\143"+
    "\2\0\2\144\2\0\3\145\2\146\21\0\2\147\13\0"+
    "\1\150\10\0\1\150\12\0\2\151\4\0\2\152\14\0"+
    "\2\153\5\0\2\154\42\0\2\155\2\0\2\156\2\0"+
    "\2\157\2\0\2\160\5\0\2\161\56\0\2\155\2\0"+
    "\2\162\2\0\2\157\2\0\2\160\5\0\2\161\40\0"+
    "\1\163\10\0\1\163\2\0\1\163\3\0\2\164\2\165"+
    "\10\0\2\166\10\0\2\167\53\0\2\170\2\171\24\0"+
    "\2\172\47\0\2\173\6\0\2\174\6\0\3\175\2\176"+
    "\56\0\2\177\6\0\2\174\6\0\3\175\2\176\56\0"+
    "\2\200\6\0\2\201\2\0\2\202\2\0\3\203\2\204"+
    "\56\0\2\205\6\0\2\206\2\0\2\202\2\0\3\203"+
    "\2\207\56\0\2\210\105\0\2\211\2\0\2\212\6\0"+
    "\3\213\2\214\62\0\2\211\2\0\2\215\6\0\3\213"+
    "\2\214\57\0\1\216\55\0\1\45\24\0\1\216\101\0"+
    "\2\200\6\0\2\201\2\0\2\202\2\0\3\203\2\204"+
    "\14\0\3\217\37\0\2\205\6\0\2\206\2\0\2\202"+
    "\2\0\3\203\2\207\14\0\3\217\71\0\2\220\32\0"+
    "\1\221\10\0\1\221\131\0\2\222\62\0\2\223\2\224"+
    "\55\0\1\225\10\0\1\225\2\0\1\225\5\0\2\226"+
    "\105\0\2\227\6\0\3\230\40\0\1\231\10\0\1\231"+
    "\12\0\2\232\24\0\2\233\101\0\2\234\57\0\2\235"+
    "\53\0\1\236\10\0\1\236\2\0\1\236\33\0\2\237"+
    "\22\0\2\63\2\0\1\64\5\0\1\63\1\0\1\63"+
    "\40\0\2\74\22\0\1\63\6\0\1\240\10\0\1\240"+
    "\111\0\2\241\54\0\2\63\2\0\1\64\1\63\1\0"+
    "\1\242\2\0\1\63\1\0\1\63\1\0\1\63\1\0"+
    "\1\242\2\0\1\242\5\0\2\243\2\244\20\0\2\74"+
    "\2\245\20\0\1\63\36\0\2\246\6\0\3\247\64\0"+
    "\2\250\101\0\2\251\2\0\2\252\2\253\47\0\1\254"+
    "\10\0\1\254\64\0\2\63\2\0\1\64\1\63\4\0"+
    "\1\63\1\0\1\63\1\0\1\63\6\0\2\255\26\0"+
    "\2\74\22\0\1\63\26\0\2\256\124\0\2\257\62\0"+
    "\2\260\2\261\2\262\20\0\2\263\3\0\2\264\42\0"+
    "\2\265\63\0\1\266\10\0\1\266\2\0\1\266\5\0"+
    "\2\267\77\0\2\270\61\0\1\271\10\0\1\271\2\0"+
    "\1\271\1\0\2\272\6\0\2\273\75\0\2\274\10\0"+
    "\2\275\12\0\2\276\31\0\1\236\10\0\1\236\2\0"+
    "\1\236\33\0\2\277\53\0\2\274\24\0\2\276\47\0"+
    "\2\241\6\0\2\300\103\0\2\301\23\0\2\302\46\0"+
    "\2\303\107\0\2\304\2\0\2\305\73\0\2\306\75\0"+
    "\2\307\105\0\2\310\16\0\2\311\61\0\2\312\53\0"+
    "\1\313\10\0\1\313\2\0\1\313\66\0\1\314\10\0"+
    "\1\314\2\0\1\314\65\0\1\315\10\0\1\315\15\0"+
    "\2\316\105\0\2\317\75\0\2\320\11\0\2\321\36\0"+
    "\1\322\10\0\1\322\12\0\2\323\15\0\2\324\62\0"+
    "\2\325\77\0\2\326\2\0\2\327\56\0\1\330\10\0"+
    "\1\330\5\0\2\331\61\0\1\332\10\0\1\332\2\0"+
    "\1\332\114\0\2\333\16\0\2\334\57\0\2\335\20\0"+
    "\2\336\55\0\2\337\24\0\2\340\27\0\1\341\10\0"+
    "\1\341\12\0\2\342\56\0\1\343\10\0\1\343\17\0"+
    "\2\344\2\0\2\345\36\0\2\135\2\0\1\346\5\0"+
    "\1\135\1\0\1\135\10\0\2\347\35\0\2\350\13\0"+
    "\1\135\6\0\1\351\10\0\1\351\127\0\2\352\103\0"+
    "\3\353\42\0\1\354\10\0\1\354\2\0\1\354\3\0"+
    "\2\355\2\356\10\0\2\357\10\0\2\360\2\361\57\0"+
    "\2\362\11\0\2\363\40\0\1\364\10\0\1\364\2\0"+
    "\1\364\64\0\1\365\10\0\1\365\74\0\1\366\10\0"+
    "\1\366\21\0\2\367\45\0\1\370\10\0\1\370\2\0"+
    "\1\370\31\0\2\371\71\0\3\372\62\0\2\373\60\0"+
    "\1\374\10\0\1\374\114\0\2\375\56\0\1\376\10\0"+
    "\1\376\130\0\3\377\64\0\2\u0100\105\0\2\u0101\6\0"+
    "\3\u0102\64\0\2\u0103\22\0\2\u0104\55\0\2\u0105\57\0"+
    "\1\u0106\10\0\1\u0106\2\0\1\u0106\5\0\2\u0107\75\0"+
    "\2\u0108\6\0\2\u0101\6\0\3\u0102\70\0\2\u0109\20\0"+
    "\2\u010a\101\0\2\u010b\101\0\2\u010c\47\0\2\u010d\64\0"+
    "\1\u010e\10\0\1\u010e\140\0\2\u010f\67\0\3\u0110\41\0"+
    "\1\u0111\10\0\1\u0111\5\0\2\u0112\61\0\1\u0113\10\0"+
    "\1\u0113\12\0\2\u0114\4\0\2\u0115\2\0\2\u0116\12\0"+
    "\2\u0117\31\0\1\u0118\10\0\1\u0118\2\0\1\u0118\136\0"+
    "\2\u0119\27\0\1\u011a\10\0\1\u011a\40\0\2\u011b\3\0"+
    "\2\u011c\22\0\1\u0113\1\0\1\u011d\6\0\1\u0113\1\0"+
    "\1\u011d\2\0\1\u011d\5\0\2\u0114\4\0\2\u0115\2\0"+
    "\2\u0116\12\0\2\u0117\37\0\1\u011e\4\0\1\u011e\20\0"+
    "\2\u011f\75\0\2\u0120\2\0\2\u0121\45\0\1\u0122\10\0"+
    "\1\u0122\2\0\1\u0122\13\0\2\u0123\71\0\2\u0124\2\0"+
    "\2\u0125\2\u0126\4\0\2\u0127\113\0\2\u0128\24\0\4\u0129"+
    "\1\u012a\5\0\1\u0129\1\0\1\u0129\1\u011e\4\0\1\u011e"+
    "\1\u012b\17\0\2\u011f\34\0\1\u0129\40\0\2\u012c\2\0"+
    "\2\u0121\113\0\2\u0128\5\0\2\u012d\22\0\1\u012e\10\0"+
    "\1\u012e\111\0\2\u012f\16\0\3\u0130\2\u0131\62\0\2\u0132"+
    "\31\0\2\u0133\22\0\1\u0134\10\0\1\u0134\12\0\2\u0135"+
    "\77\0\2\u0136\2\u0137\101\0\2\u0138\31\0\2\u0133\76\0"+
    "\2\u0139\25\0\1\u013a\10\0\1\u013a\152\0\3\u013b\62\0"+
    "\2\u013c\62\0\2\u013d\103\0\2\u013e\73\0\2\u013f\121\0"+
    "\3\u0140\100\0\3\u0141\7\0\2\u0142\31\0\1\u0143\10\0"+
    "\1\u0143\2\0\1\u0143\64\0\1\u0144\10\0\1\u0144\121\0"+
    "\2\u0145\73\0\2\u0146\101\0\2\u0147\26\0\2\u0148\51\0"+
    "\2\u0149\131\0\2\u014a\27\0\1\u014b\10\0\1\u014b\101\0"+
    "\1\u014c\4\0\1\u014c\25\0\2\u014d\37\0\1\u014e\10\0"+
    "\1\u014e\112\0\2\u014f\61\0\1\u0150\10\0\1\u0150\2\0"+
    "\1\u0150\143\0\2\u0151\65\0\2\u0152\66\0\2\u0153\61\0"+
    "\1\u0154\4\0\1\u0154\75\0\1\u0155\4\0\1\u0155\66\0"+
    "\1\u0156\10\0\1\u0156\110\0\2\u0157\61\0\1\u0158\10\0"+
    "\1\u0158\131\0\3\u0159\117\0\2\u015a\15\0\2\63\2\0"+
    "\1\64\1\63\4\0\1\63\1\0\1\63\1\0\1\63"+
    "\36\0\2\74\22\0\1\63\32\0\2\u015b\103\0\2\u015c"+
    "\123\0\2\u015d\71\0\3\u015e\42\0\1\u015f\10\0\1\u015f"+
    "\2\0\1\u015f\114\0\2\u0160\114\0\2\u0161\74\0\2\u0162"+
    "\63\0\2\u0163\10\0\2\u0164\103\0\2\u0165\117\0\2\u0166"+
    "\47\0\2\u0167\14\0\2\u0168\75\0\2\u0169\117\0\2\u016a"+
    "\67\0\2\u016b\17\0\2\u016c\52\0\2\u016d\114\0\2\u016e"+
    "\46\0\1\u014c\4\0\1\u014c\75\0\1\u016f\4\0\1\u016f"+
    "\130\0\2\u0170\101\0\2\u0171\72\0\2\u0172\110\0\2\u0173"+
    "\76\0\3\u0174\64\0\2\u0175\115\0\3\u0176\50\0\1\u0177"+
    "\4\0\1\u0177\115\0\2\u0178\123\0\2\u0179\65\0\2\u017a"+
    "\101\0\2\u017b\63\0\2\u017c\63\0\1\u017d\10\0\1\u017d"+
    "\2\0\1\u017d\124\0\3\u017e\72\0\2\u017f\51\0\1\u0180"+
    "\10\0\1\u0180\2\0\1\u0180\127\0\2\u0181\106\0\2\u0182"+
    "\55\0\2\u0183\115\0\3\u0184\74\0\2\u0185\75\0\2\u0186"+
    "\44\0\4\u0187\1\u0188\2\0\1\u0189\2\0\1\u0187\1\0"+
    "\1\u0187\3\0\1\u0189\2\0\1\u0189\13\0\2\u018a\2\u018b"+
    "\10\0\1\u018c\1\0\2\u018d\5\0\2\u018e\13\0\1\u0187"+
    "\6\0\1\u018f\10\0\1\u018f\10\0\2\u0190\14\0\3\u0191"+
    "\42\0\1\u0192\10\0\1\u0192\2\0\1\u0192\122\0\2\u0193"+
    "\103\0\3\u0194\100\0\3\u0195\60\0\2\u0196\111\0\2\u0197"+
    "\44\0\2\135\2\0\1\346\5\0\1\135\1\0\1\135"+
    "\10\0\2\347\30\0\2\u0198\3\0\2\350\13\0\1\135"+
    "\36\0\2\u0199\52\0\1\u019a\10\0\1\u019a\17\0\2\u019b"+
    "\112\0\2\u019c\66\0\2\u019d\101\0\2\u019e\51\0\1\u019f"+
    "\10\0\1\u019f\134\0\2\u01a0\30\0\1\u01a1\2\0\76\u01a1"+
    "\30\0\2\u01a2\124\0\2\u01a3\110\0\2\u01a4\57\0\2\u01a5"+
    "\123\0\2\u01a6\30\0\1\u01a7\10\0\1\u01a7\11\0\2\u01a8"+
    "\75\0\2\u01a9\64\0\1\u01aa\10\0\1\u01aa\106\0\2\u01ab"+
    "\14\0\2\u01ac\113\0\2\u01ad\51\0\2\u01ae\14\0\2\u01af"+
    "\73\0\2\u01b0\101\0\2\u01b1\75\0\2\u01b2\113\0\2\u01b3"+
    "\73\0\2\u01b4\114\0\2\u01b5\66\0\2\u01b6\137\0\2\u01b7"+
    "\53\0\3\u01b8\60\0\2\u01b9\105\0\2\u01ba\55\0\1\u01bb"+
    "\10\0\1\u01bb\111\0\2\u01bc\61\0\1\u01bd\10\0\1\u01bd"+
    "\14\0\2\u01be\103\0\2\u01bf\51\0\1\u01c0\10\0\1\u01c0"+
    "\6\0\2\u01c1\64\0\1\u01c2\10\0\1\u01c2\120\0\2\u01c3"+
    "\101\0\2\u01c4\107\0\3\u01c5\43\0\1\u01c6\10\0\1\u01c6"+
    "\112\0\2\u01c7\75\0\2\u01c8\111\0\2\u01c9\71\0\2\u01ca"+
    "\133\0\2\u01cb\57\0\2\u01cc\111\0\3\u01cd\42\0\1\u01ce"+
    "\10\0\1\u01ce\2\0\1\u01ce\124\0\3\u01cf\40\0\1\u01d0"+
    "\10\0\1\u01d0\127\0\2\u01d1\75\0\2\u01d2\77\0\2\u01d3"+
    "\101\0\2\u01d4\107\0\2\u01d5\45\0\1\u01d6\10\0\1\u01d6"+
    "\2\0\1\u01d6\104\0\2\u01d7\71\0\1\u01d8\4\0\1\u01d8"+
    "\2\0\2\u01d9\14\0\2\u01da\103\0\3\u01db\14\0\2\u01dc"+
    "\52\0\2\u01dd\53\0\1\u01de\10\0\1\u01de\2\0\1\u01de"+
    "\124\0\3\u01df\100\0\3\u01e0\72\0\2\u01e1\105\0\2\u01e2"+
    "\45\0\1\u01e3\10\0\1\u01e3\2\0\1\u01e3\116\0\2\u01e4"+
    "\103\0\2\u01e5\110\0\2\u01e6\70\0\2\u01e7\103\0\2\u01e8"+
    "\46\0\1\u01e9\10\0\1\u01e9\63\0\4\u0129\1\u012a\5\0"+
    "\1\u0129\1\0\1\u0129\6\0\1\u012b\55\0\1\u0129\6\0"+
    "\1\u01ea\10\0\1\u01ea\74\0\1\u01eb\10\0\1\u01eb\120\0"+
    "\2\u01ec\107\0\3\u01ed\100\0\3\u01ee\40\0\1\u01ef\10\0"+
    "\1\u01ef\125\0\2\u01f0\47\0\1\u01f1\10\0\1\u01f1\2\0"+
    "\1\u01f1\110\0\2\u01f2\50\0\4\u01f3\1\u01f4\5\0\1\u01f3"+
    "\1\0\1\u01f3\14\0\2\u01f5\2\0\2\u01f6\14\0\1\u01f7"+
    "\25\0\1\u01f3\60\0\2\u01f8\57\0\2\u01f9\73\0\2\u01fa"+
    "\131\0\2\u01fb\53\0\2\u01f2\22\0\2\u01fc\65\0\2\u01fd"+
    "\53\0\1\u01fe\74\0\1\u01ff\10\0\1\u01ff\143\0\2\u0200"+
    "\72\0\2\u0201\66\0\2\u0202\75\0\2\u0203\127\0\2\u0204"+
    "\21\0\1\u0205\1\u0206\4\u0205\2\0\1\u0205\1\0\4\u0205"+
    "\30\0\1\u0205\5\0\2\u0205\11\0\1\u0205\2\0\2\u0205"+
    "\5\0\2\u0205\36\0\2\u0207\103\0\2\u0208\126\0\2\u0209"+
    "\50\0\2\u020a\73\0\2\u020b\121\0\3\u020c\74\0\2\u020d"+
    "\65\0\2\u020e\124\0\2\u020f\5\0\2\u0210\67\0\3\u0211"+
    "\60\0\2\u0212\103\0\2\u0213\61\0\1\u0214\10\0\1\u0214"+
    "\2\0\1\u0214\64\0\1\u0215\10\0\1\u0215\111\0\2\u0216"+
    "\111\0\2\u0217\51\0\1\u0218\10\0\1\u0218\115\0\2\u0219"+
    "\115\0\3\u021a\50\0\1\u021b\4\0\1\u021b\125\0\3\u021c"+
    "\72\0\2\u021d\67\0\2\u021e\133\0\2\u021f\53\0\2\u0220"+
    "\115\0\3\u0221\60\0\2\u0222\6\0\2\u0223\71\0\2\u0224"+
    "\101\0\2\u0225\121\0\3\u0226\64\0\2\u0227\103\0\2\u0228"+
    "\116\0\2\u0229\62\0\2\u022a\75\0\2\u022b\103\0\2\u022c"+
    "\117\0\3\u022d\32\0\1\u022e\1\u022f\4\u022e\2\0\1\u022e"+
    "\1\0\4\u022e\30\0\1\u022e\5\0\2\u022e\11\0\1\u022e"+
    "\2\0\2\u022e\5\0\2\u022e\51\0\2\u0230\66\0\2\u0231"+
    "\114\0\2\u0232\101\0\2\u0233\66\0\2\u0234\51\0\1\u0235"+
    "\10\0\1\u0235\71\0\1\u0236\10\0\1\u0236\131\0\3\u0237"+
    "\40\0\1\u0238\10\0\1\u0238\115\0\2\u0239\65\0\1\u023a"+
    "\4\0\1\u023a\137\0\2\u023b\21\0\1\u023c\1\u023d\4\u023c"+
    "\2\0\1\u023c\1\0\4\u023c\30\0\1\u023c\5\0\2\u023c"+
    "\11\0\1\u023c\2\0\2\u023c\5\0\2\u023c\7\0\1\u023e"+
    "\10\0\1\u023e\112\0\2\u023f\67\0\1\u0240\4\0\1\u0240"+
    "\65\0\1\u0241\10\0\1\u0241\143\0\2\u0242\53\0\2\u0243"+
    "\75\0\2\u0244\61\0\1\u0245\10\0\1\u0245\73\0\1\u0246"+
    "\10\0\1\u0246\2\0\1\u0246\136\0\2\u0247\67\0\3\u0248"+
    "\42\0\1\u0249\10\0\1\u0249\2\0\1\u0249\112\0\2\u024a"+
    "\73\0\2\u024b\103\0\2\u024c\67\0\1\u024d\4\0\1\u024d"+
    "\67\0\1\u024e\10\0\1\u024e\2\0\1\u024e\64\0\1\u024f"+
    "\10\0\1\u024f\64\0\4\u0187\1\u0188\2\0\1\u0189\2\0"+
    "\1\u0187\1\0\1\u0187\3\0\1\u0189\2\0\1\u0189\13\0"+
    "\2\u018a\14\0\2\u018d\5\0\2\u018e\13\0\1\u0187\6\0"+
    "\1\u0250\10\0\1\u0250\143\0\2\u0251\57\0\2\u0252\52\0"+
    "\1\u0253\10\0\1\u0253\63\0\4\u0187\1\u0188\2\0\1\u0189"+
    "\2\0\1\u0187\1\0\1\u0187\3\0\1\u0189\2\0\1\u0189"+
    "\13\0\2\u018a\2\u018b\12\0\2\u018d\5\0\2\u018e\13\0"+
    "\1\u0187\26\0\2\u0254\21\0\2\u0255\76\0\3\u0256\103\0"+
    "\2\u0257\76\0\3\u0258\103\0\2\u0259\76\0\3\u025a\100\0"+
    "\3\u025b\40\0\1\u025c\10\0\1\u025c\113\0\2\u025d\51\0"+
    "\1\u025e\1\u025f\4\u025e\1\u0260\1\0\1\u025e\1\0\4\u025e"+
    "\1\0\1\u0260\26\0\1\u025e\5\0\2\u025e\11\0\1\u025e"+
    "\2\0\2\u025e\5\0\2\u025e\10\0\1\u0261\10\0\1\u0261"+
    "\2\0\1\u0261\114\0\2\135\61\0\1\u0262\4\0\1\u0262"+
    "\20\0\2\u0263\63\0\2\u0264\111\0\2\u0265\44\0\4\u019c"+
    "\1\u0266\5\0\1\u019c\1\0\1\u019c\16\0\2\u0267\44\0"+
    "\1\u019c\6\0\1\u0268\10\0\1\u0268\115\0\2\u0269\56\0"+
    "\1\u026a\10\0\1\u026a\72\0\1\u026b\10\0\1\u026b\2\0"+
    "\1\u026b\57\0\2\u01a1\2\0\1\u026c\5\0\1\u01a1\1\0"+
    "\1\u01a1\10\0\2\347\52\0\1\u01a1\1\u026d\1\u026e\4\u026d"+
    "\2\0\1\u026d\1\0\4\u026d\30\0\1\u026d\5\0\2\u026d"+
    "\11\0\1\u026d\2\0\2\u026d\5\0\2\u026d\6\0\1\u026f"+
    "\10\0\1\u026f\131\0\3\u0270\64\0\2\u0271\115\0\3\u0272"+
    "\103\0\2\u0273\56\0\2\u0274\61\0\1\u0275\10\0\1\u0275"+
    "\111\0\2\u0276\21\0\2\u0277\37\0\1\u0278\10\0\1\u0278"+
    "\110\0\2\u0279\124\0\2\u027a\46\0\1\u027b\4\0\1\u027b"+
    "\130\0\2\u027c\36\0\1\u027d\10\0\1\u027d\134\0\2\u027e"+
    "\101\0\2\u027f\30\0\1\u0280\2\0\76\u0280\10\0\1\u0281"+
    "\10\0\1\u0281\63\0\1\u0282\1\u0283\4\u0282\2\0\1\u0282"+
    "\1\0\4\u0282\30\0\1\u0282\5\0\2\u0282\11\0\1\u0282"+
    "\2\0\2\u0282\5\0\2\u0282\44\0\2\u0284\73\0\2\u0285"+
    "\51\0\1\u0286\10\0\1\u0286\131\0\3\u0287\100\0\3\u0288"+
    "\70\0\2\u0289\51\0\1\u028a\10\0\1\u028a\127\0\2\u028b"+
    "\103\0\3\u028c\42\0\1\u028d\10\0\1\u028d\2\0\1\u028d"+
    "\124\0\3\u028e\110\0\2\u028f\71\0\3\u0290\126\0\2\u0291"+
    "\33\0\2\u0292\61\0\1\u0293\10\0\1\u0293\111\0\2\u0294"+
    "\61\0\1\u0295\10\0\1\u0295\71\0\1\u0296\10\0\1\u0296"+
    "\73\0\1\u0297\10\0\1\u0297\2\0\1\u0297\64\0\1\u0298"+
    "\10\0\1\u0298\131\0\3\u0299\64\0\2\u029a\75\0\2\u029b"+
    "\117\0\2\u029c\63\0\2\u029d\140\0\2\u029e\65\0\2\u029f"+
    "\124\0\2\u02a0\37\0\2\u02a1\31\0\2\u02a2\46\0\2\u02a3"+
    "\75\0\2\u02a4\121\0\3\u02a5\40\0\1\u02a6\10\0\1\u02a6"+
    "\111\0\2\u02a7\113\0\2\u02a8\77\0\2\u02a9\53\0\1\u02aa"+
    "\10\0\1\u02aa\2\0\1\u02aa\104\0\2\u02ab\61\0\1\u02ac"+
    "\10\0\1\u02ac\111\0\2\u02ad\124\0\2\u02ae\36\0\1\u02af"+
    "\10\0\1\u02af\121\0\2\u02b0\114\0\2\u02b1\66\0\2\u02b2"+
    "\71\0\2\u02b3\105\0\2\u02b4\101\0\2\u02b5\143\0\2\u02b6"+
    "\33\0\2\u02b7\101\0\2\u02b8\62\0\1\u02b9\10\0\1\u02b9"+
    "\120\0\2\300\101\0\2\u02b0\11\0\2\u02ba\30\0\1\u02bb"+
    "\1\u02bc\4\u02bb\2\0\1\u02bb\1\0\4\u02bb\30\0\1\u02bb"+
    "\5\0\2\u02bb\11\0\1\u02bb\2\0\2\u02bb\5\0\2\u02bb"+
    "\56\0\2\u02bd\63\0\2\u02be\121\0\2\u02bf\67\0\3\u02c0"+
    "\60\0\2\u02c1\54\0\4\u01f3\1\u01f4\5\0\1\u01f3\1\0"+
    "\1\u01f3\14\0\2\u01f5\46\0\1\u01f3\6\0\1\u02c2\10\0"+
    "\1\u02c2\125\0\2\u02c3\71\0\2\u02c4\50\0\4\u01f3\1\u01f4"+
    "\5\0\1\u01f3\1\0\1\u01f3\14\0\2\u01f5\2\0\2\u01f6"+
    "\42\0\1\u01f3\26\0\2\u02c5\61\0\1\u02c6\10\0\1\u02c6"+
    "\131\0\3\u02c7\100\0\3\u02c8\103\0\2\u02c9\76\0\3\u02ca"+
    "\36\0\1\u02cb\1\0\2\u02cb\1\0\1\u02cb\11\0\2\u02cb"+
    "\2\0\1\u02cb\1\0\1\u02cb\1\0\1\u02cb\1\0\1\u02cb"+
    "\1\0\1\u02cb\1\0\1\u02cb\1\0\1\u02cb\1\0\1\u02cb"+
    "\2\0\1\u02cb\1\0\1\u02cb\4\0\1\u02cb\1\0\1\u02cb"+
    "\1\0\2\u02cb\1\0\1\u02cb\2\0\1\u02cb\3\0\1\u02cb"+
    "\1\0\1\u02cb\51\0\3\u02cc\32\0\1\u02cd\1\u02ce\4\u02cd"+
    "\2\0\1\u02cd\1\0\4\u02cd\30\0\1\u02cd\5\0\2\u02cd"+
    "\11\0\1\u02cd\2\0\2\u02cd\5\0\2\u02cd\30\0\2\u02cf"+
    "\77\0\2\u02d0\121\0\3\u02d1\34\0\1\u0205\144\0\2\u02d2"+
    "\103\0\3\u02d3\100\0\3\u02d4\70\0\2\u02d5\121\0\2\u02d6"+
    "\74\0\2\u02d7\36\0\1\u02d8\10\0\1\u02d8\115\0\2\u02d9"+
    "\101\0\2\u02da\75\0\2\u02db\101\0\2\u02dc\61\0\1\u02dd"+
    "\10\0\1\u02dd\71\0\1\u02de\10\0\1\u02de\74\0\1\u02df"+
    "\10\0\1\u02df\106\0\2\u02e0\105\0\2\u02e1\77\0\2\u02e2"+
    "\77\0\2\u02e3\61\0\1\u02e4\10\0\1\u02e4\111\0\2\u02e5"+
    "\111\0\2\u02e6\71\0\2\u02e7\115\0\2\u02e8\37\0\1\u02e9"+
    "\1\u02ea\4\u02e9\2\0\1\u02e9\1\0\4\u02e9\30\0\1\u02e9"+
    "\5\0\2\u02e9\11\0\1\u02e9\2\0\2\u02e9\5\0\2\u02e9"+
    "\46\0\3\u02eb\100\0\3\u02ec\40\0\1\u02ed\10\0\1\u02ed"+
    "\123\0\2\u02ee\47\0\1\u02ef\10\0\1\u02ef\63\0\1\u02f0"+
    "\1\u02f1\4\u02f0\2\0\1\u02f0\1\0\4\u02f0\30\0\1\u02f0"+
    "\5\0\2\u02f0\11\0\1\u02f0\2\0\2\u02f0\5\0\2\u02f0"+
    "\1\u02f2\1\u02f3\4\u02f2\2\0\1\u02f2\1\0\4\u02f2\30\0"+
    "\1\u02f2\5\0\2\u02f2\11\0\1\u02f2\2\0\2\u02f2\5\0"+
    "\2\u02f2\1\0\4\u0226\1\u02f4\1\0\1\u02f5\3\0\1\u0226"+
    "\1\0\1\u0226\2\0\1\u02f5\61\0\1\u0226\56\0\2\u02f6"+
    "\51\0\2\u02f7\53\0\1\u02f8\1\u02f9\4\u02f8\2\0\1\u02f8"+
    "\1\0\4\u02f8\30\0\1\u02f8\5\0\2\u02f8\11\0\1\u02f8"+
    "\2\0\2\u02f8\5\0\2\u02f8\51\0\2\u02fa\62\0\2\u02fb"+
    "\115\0\3\u02fc\60\0\2\u02fd\55\0\1\u022e\146\0\3\u02fe"+
    "\40\0\1\u02ff\10\0\1\u02ff\71\0\1\u0300\10\0\1\u0300"+
    "\113\0\2\u0301\57\0\1\u0302\10\0\1\u0302\101\0\1\u0303"+
    "\4\0\1\u0303\125\0\3\u0304\60\0\2\u0305\101\0\2\u0306"+
    "\105\0\2\u0307\65\0\1\u0308\4\0\1\u0308\125\0\3\u0309"+
    "\34\0\1\u023c\126\0\2\u030a\111\0\2\u030b\114\0\2\u030c"+
    "\76\0\3\u030d\100\0\3\u030e\100\0\3\u030f\32\0\1\u0310"+
    "\1\u0311\4\u0310\2\0\1\u0310\1\0\4\u0310\30\0\1\u0310"+
    "\5\0\2\u0310\11\0\1\u0310\2\0\2\u0310\5\0\2\u0310"+
    "\46\0\3\u0312\60\0\2\u0313\101\0\2\u0314\101\0\2\u0315"+
    "\111\0\2\u0316\71\0\2\u0317\61\0\1\u0318\10\0\1\u0318"+
    "\131\0\3\u0319\100\0\3\u031a\60\0\2\u031b\61\0\1\u031c"+
    "\10\0\1\u031c\72\0\1\u031d\10\0\1\u031d\133\0\2\u031e"+
    "\70\0\2\u031f\50\0\1\u0320\10\0\1\u0320\122\0\2\u0321"+
    "\121\0\2\u0322\22\0\2\u0256\2\0\1\u0323\2\0\1\u0324"+
    "\2\0\1\u0256\1\0\1\u0256\3\0\1\u0324\2\0\1\u0324"+
    "\31\0\2\u0325\22\0\1\u0256\1\0\4\u0257\1\u0326\5\0"+
    "\1\u0257\1\0\1\u0257\24\0\2\u0327\36\0\1\u0257\51\0"+
    "\2\u0328\36\0\1\u0329\10\0\1\u0329\111\0\2\u032a\53\0"+
    "\1\u032b\1\u032c\4\u032b\2\0\1\u032b\1\0\4\u032b\30\0"+
    "\1\u032b\5\0\2\u032b\11\0\1\u032b\2\0\2\u032b\5\0"+
    "\2\u032b\46\0\3\u032d\103\0\2\u032e\32\0\1\u025e\146\0"+
    "\3\u032f\70\0\2\u0330\111\0\3\u0331\103\0\2\u0332\36\0"+
    "\1\u0333\10\0\1\u0333\143\0\2\u0334\27\0\1\u0335\10\0"+
    "\1\u0335\111\0\2\u0336\71\0\1\u0337\4\0\1\u0337\66\0"+
    "\1\u0338\10\0\1\u0338\72\0\1\u0339\10\0\1\u0339\2\0"+
    "\1\u0339\122\0\2\u033a\43\0\1\u033b\10\0\1\u033b\65\0"+
    "\1\u026d\146\0\3\u033c\60\0\2\u033d\117\0\2\u033e\63\0"+
    "\2\u033f\61\0\1\u0340\10\0\1\u0340\115\0\2\u0341\65\0"+
    "\1\u0342\4\0\1\u0342\22\0\3\u0343\40\0\1\u0344\10\0"+
    "\1\u0344\72\0\1\u0345\10\0\1\u0345\114\0\2\u0346\55\0"+
    "\1\u0347\10\0\1\u0347\71\0\1\u0348\10\0\1\u0348\131\0"+
    "\3\u0349\40\0\1\u034a\10\0\1\u034a\111\0\2\u034b\53\0"+
    "\1\u034c\1\u034d\4\u034c\2\0\1\u034c\1\0\4\u034c\30\0"+
    "\1\u034c\5\0\2\u034c\11\0\1\u034c\2\0\2\u034c\5\0"+
    "\2\u034c\1\u034e\1\u034f\4\u034e\2\0\1\u034e\1\0\4\u034e"+
    "\30\0\1\u034e\5\0\2\u034e\11\0\1\u034e\2\0\2\u034e"+
    "\5\0\2\u034e\1\0\2\u0280\2\0\1\u0350\1\u0351\1\u0352"+
    "\1\u0353\1\u0354\1\0\1\u0280\1\0\1\u0280\1\0\1\u0351"+
    "\1\u0355\1\u0353\1\u0356\1\0\1\u0357\1\0\1\u0358\1\u0359"+
    "\2\u035a\2\u035b\2\u035c\2\u035d\2\u035e\2\u035f\1\u0360\1\u0361"+
    "\3\u0362\2\u0363\3\0\1\u0364\1\u0365\1\u0366\1\u0367\3\0"+
    "\2\u0368\7\0\1\u0369\1\u036a\2\0\1\u0280\16\0\1\u036b"+
    "\4\0\1\u036b\61\0\1\u0282\146\0\3\u036c\64\0\2\u036d"+
    "\120\0\2\u036e\36\0\1\u036f\10\0\1\u036f\111\0\2\u0370"+
    "\53\0\1\u0371\1\u0372\4\u0371\2\0\1\u0371\1\0\4\u0371"+
    "\30\0\1\u0371\5\0\2\u0371\11\0\1\u0371\2\0\2\u0371"+
    "\5\0\2\u0371\44\0\2\u0373\103\0\3\u0374\2\u0375\40\0"+
    "\1\u0376\10\0\1\u0376\2\0\1\u0376\122\0\2\u0377\35\0"+
    "\1\u0378\1\u0379\4\u0378\2\0\1\u0378\1\0\4\u0378\30\0"+
    "\1\u0378\5\0\2\u0378\11\0\1\u0378\2\0\2\u0378\5\0"+
    "\2\u0378\51\0\2\u037a\101\0\2\u037b\76\0\3\u037c\40\0"+
    "\1\u037d\10\0\1\u037d\134\0\2\u037e\36\0\1\u037f\10\0"+
    "\1\u037f\131\0\3\u0380\117\0\2\u0381\62\0\3\u0382\117\0"+
    "\2\u0383\42\0\2\u0384\121\0\3\u0385\42\0\1\u0386\10\0"+
    "\1\u0386\2\0\1\u0386\104\0\2\u0387\53\0\1\u0388\1\u0389"+
    "\4\u0388\2\0\1\u0388\1\0\4\u0388\30\0\1\u0388\5\0"+
    "\2\u0388\11\0\1\u0388\2\0\2\u0388\5\0\2\u0388\26\0"+
    "\2\u038a\107\0\2\u038b\103\0\2\u038c\71\0\2\u038d\124\0"+
    "\2\u038e\56\0\2\u038f\53\0\1\u0390\1\u0391\4\u0390\2\0"+
    "\1\u0390\1\0\4\u0390\30\0\1\u0390\5\0\2\u0390\11\0"+
    "\1\u0390\2\0\2\u0390\5\0\2\u0390\6\0\1\u0392\10\0"+
    "\1\u0392\134\0\2\u0393\30\0\1\u0394\1\u0395\4\u0394\2\0"+
    "\1\u0394\1\0\4\u0394\30\0\1\u0394\5\0\2\u0394\11\0"+
    "\1\u0394\2\0\2\u0394\5\0\2\u0394\51\0\2\u0396\36\0"+
    "\1\u0397\10\0\1\u0397\121\0\2\u0398\77\0\2\u0399\73\0"+
    "\2\u039a\53\0\1\u039b\1\u039c\4\u039b\2\0\1\u039b\1\0"+
    "\4\u039b\30\0\1\u039b\5\0\2\u039b\11\0\1\u039b\2\0"+
    "\2\u039b\5\0\2\u039b\1\u039d\1\u039e\4\u039d\2\0\1\u039d"+
    "\1\0\4\u039d\30\0\1\u039d\5\0\2\u039d\11\0\1\u039d"+
    "\2\0\2\u039d\5\0\2\u039d\26\0\2\u039f\53\0\1\u03a0"+
    "\1\u03a1\4\u03a0\2\0\1\u03a0\1\0\4\u03a0\30\0\1\u03a0"+
    "\5\0\2\u03a0\11\0\1\u03a0\2\0\2\u03a0\5\0\2\u03a0"+
    "\6\0\1\u03a2\10\0\1\u03a2\141\0\2\u03a3\23\0\1\u03a4"+
    "\1\u03a5\4\u03a4\2\0\1\u03a4\1\0\4\u03a4\30\0\1\u03a4"+
    "\5\0\2\u03a4\11\0\1\u03a4\2\0\2\u03a4\5\0\2\u03a4"+
    "\46\0\3\u03a6\40\0\1\u03a7\10\0\1\u03a7\127\0\2\u03a8"+
    "\43\0\1\u03a9\10\0\1\u03a9\115\0\2\u03aa\57\0\1\u03ab"+
    "\10\0\1\u03ab\2\0\1\u03ab\56\0\1\u03ac\1\u03ad\4\u03ac"+
    "\2\0\1\u03ac\1\0\4\u03ac\30\0\1\u03ac\5\0\2\u03ac"+
    "\11\0\1\u03ac\2\0\2\u03ac\5\0\2\u03ac\2\0\1\u02bb"+
    "\126\0\2\u03ae\121\0\3\u03af\100\0\3\u03b0\40\0\1\u03b1"+
    "\10\0\1\u03b1\115\0\2\u03b2\56\0\1\u03b3\10\0\1\u03b3"+
    "\72\0\1\u03b4\10\0\1\u03b4\2\0\1\u03b4\104\0\2\u03b5"+
    "\61\0\1\u03b6\10\0\1\u03b6\101\0\1\u03b7\4\0\1\u03b7"+
    "\105\0\2\u03b8\53\0\1\u03b9\1\u03ba\4\u03b9\2\0\1\u03b9"+
    "\1\0\4\u03b9\30\0\1\u03b9\5\0\2\u03b9\11\0\1\u03b9"+
    "\2\0\2\u03b9\5\0\2\u03b9\1\u03bb\1\u03bc\4\u03bb\2\0"+
    "\1\u03bb\1\0\4\u03bb\30\0\1\u03bb\5\0\2\u03bb\11\0"+
    "\1\u03bb\2\0\2\u03bb\5\0\2\u03bb\60\0\2\u03bd\25\0"+
    "\1\u02cb\1\0\2\u02cb\1\0\1\u02cb\2\0\1\u03be\6\0"+
    "\2\u02cb\2\0\1\u02cb\1\0\1\u02cb\1\0\1\u02cb\1\0"+
    "\1\u02cb\1\0\1\u02cb\1\0\1\u02cb\1\0\1\u02cb\1\0"+
    "\1\u02cb\2\0\1\u02cb\1\0\1\u02cb\4\0\1\u02cb\1\0"+
    "\1\u02cb\1\0\2\u02cb\1\0\1\u02cb\2\0\1\u02cb\3\0"+
    "\1\u02cb\1\0\1\u02cb\3\0\1\u03bf\1\u03c0\3\u03c1\1\u03c2"+
    "\1\u03c3\1\0\1\u03bf\1\0\1\u03bf\1\u03c1\1\u03bf\1\u03c1"+
    "\1\0\1\u03c3\26\0\1\u03bf\5\0\2\u03bf\11\0\1\u03bf"+
    "\2\0\2\u03bf\5\0\1\u03bf\1\u03c1\2\0\1\u02cd\146\0"+
    "\3\u03c4\32\0\1\u03c5\1\u03c6\4\u03c5\2\0\1\u03c5\1\0"+
    "\4\u03c5\30\0\1\u03c5\5\0\2\u03c5\11\0\1\u03c5\2\0"+
    "\2\u03c5\5\0\2\u03c5\40\0\2\u03c7\105\0\2\u03c8\63\0"+
    "\2\u03c9\63\0\1\u03ca\10\0\1\u03ca\2\0\1\u03ca\64\0"+
    "\1\u03cb\10\0\1\u03cb\134\0\2\u03cc\30\0\1\u03cd\1\u03ce"+
    "\4\u03cd\2\0\1\u03cd\1\0\4\u03cd\30\0\1\u03cd\5\0"+
    "\2\u03cd\11\0\1\u03cd\2\0\2\u03cd\5\0\2\u03cd\51\0"+
    "\2\u03cf\76\0\3\u03d0\74\0\2\u03d1\37\0\1\u03d2\1\u03d3"+
    "\4\u03d2\2\0\1\u03d2\1\0\4\u03d2\30\0\1\u03d2\5\0"+
    "\2\u03d2\11\0\1\u03d2\2\0\2\u03d2\5\0\2\u03d2\1\u03d4"+
    "\1\u03d5\3\u03d6\1\u03d7\2\0\1\u03d4\1\0\1\u03d4\1\u03d6"+
    "\1\u03d4\1\u03d6\20\0\2\u03d8\6\0\1\u03d4\5\0\2\u03d4"+
    "\7\0\2\u03d9\1\u03d4\2\0\2\u03d4\5\0\1\u03d4\1\u03d6"+
    "\51\0\2\u03da\56\0\2\u03db\65\0\1\63\70\0\1\u03dc"+
    "\1\u03dd\4\u03dc\2\0\1\u03dc\1\0\4\u03dc\30\0\1\u03dc"+
    "\5\0\2\u03dc\11\0\1\u03dc\2\0\2\u03dc\5\0\2\u03dc"+
    "\46\0\3\u03de\40\0\1\u03df\10\0\1\u03df\63\0\1\u03e0"+
    "\1\u03e1\4\u03e0\2\0\1\u03e0\1\0\4\u03e0\30\0\1\u03e0"+
    "\5\0\2\u03e0\11\0\1\u03e0\2\0\2\u03e0\5\0\2\u03e0"+
    "\51\0\2\u03e2\30\0\1\u03e3\1\u03e4\4\u03e3\2\0\1\u03e3"+
    "\1\0\4\u03e3\30\0\1\u03e3\5\0\2\u03e3\11\0\1\u03e3"+
    "\2\0\2\u03e3\5\0\2\u03e3\32\0\2\u03e5\47\0\1\u03e6"+
    "\1\u03e7\3\u03e8\1\u03e9\2\0\1\u03e6\1\0\1\u03e6\1\u03e8"+
    "\1\u03e6\1\u03e8\20\0\2\u03ea\6\0\1\u03e6\5\0\2\u03e6"+
    "\2\u03eb\7\0\1\u03e6\2\0\2\u03e6\5\0\1\u03e6\1\u03e8"+
    "\10\0\1\u03ec\10\0\1\u03ec\2\0\1\u03ec\60\0\1\u02e9"+
    "\126\0\2\u03ed\124\0\2\u03ee\101\0\2\u03ef\70\0\2\u03f0"+
    "\107\0\3\u03f1\34\0\1\u02f0\102\0\1\u02f2\106\0\1\u03f2"+
    "\10\0\1\u03f2\111\0\2\u03f3\124\0\2\u03f4\30\0\1\u03f5"+
    "\1\u03f6\4\u03f5\2\0\1\u03f5\1\0\4\u03f5\30\0\1\u03f5"+
    "\5\0\2\u03f5\11\0\1\u03f5\2\0\2\u03f5\5\0\2\u03f5"+
    "\2\0\1\u02f8\100\0\1\u03f7\1\u03f8\4\u03f7\2\0\1\u03f7"+
    "\1\0\4\u03f7\30\0\1\u03f7\5\0\2\u03f7\11\0\1\u03f7"+
    "\2\0\2\u03f7\5\0\2\u03f7\26\0\2\u03f9\101\0\2\u03fa"+
    "\53\0\1\u03fb\1\u03fc\4\u03fb\2\0\1\u03fb\1\0\4\u03fb"+
    "\30\0\1\u03fb\5\0\2\u03fb\11\0\1\u03fb\2\0\2\u03fb"+
    "\5\0\2\u03fb\26\0\2\u03fd\71\0\1\u03fe\4\0\1\u03fe"+
    "\123\0\2\u03ff\63\0\2\u0400\124\0\2\u0401\56\0\2\u0402"+
    "\101\0\2\u0403\53\0\1\u0404\1\u0405\4\u0404\2\0\1\u0404"+
    "\1\0\4\u0404\30\0\1\u0404\5\0\2\u0404\11\0\1\u0404"+
    "\2\0\2\u0404\5\0\2\u0404\1\u0406\1\u0407\4\u0406\2\0"+
    "\1\u0406\1\0\4\u0406\30\0\1\u0406\5\0\2\u0406\11\0"+
    "\1\u0406\2\0\2\u0406\5\0\2\u0406\26\0\2\u0408\121\0"+
    "\5\u0409\30\0\1\u040a\1\u040b\3\u040c\1\u040d\2\0\1\u040a"+
    "\1\u040e\1\u040a\1\u040c\1\u040a\1\u040c\4\0\1\u040e\23\0"+
    "\1\u040a\5\0\2\u040a\11\0\1\u040a\2\0\2\u040a\5\0"+
    "\1\u040a\1\u040c\46\0\3\u040f\40\0\1\u0410\10\0\1\u0410"+
    "\63\0\1\u0411\1\u0412\4\u0411\2\0\1\u0411\1\0\4\u0411"+
    "\30\0\1\u0411\5\0\2\u0411\11\0\1\u0411\2\0\2\u0411"+
    "\5\0\2\u0411\26\0\2\u0413\61\0\1\u0414\10\0\1\u0414"+
    "\111\0\2\u0415\55\0\1\u0310\126\0\2\u0416\61\0\1\u0417"+
    "\10\0\1\u0417\63\0\1\u0418\1\u0419\4\u0418\2\0\1\u0418"+
    "\1\0\4\u0418\30\0\1\u0418\5\0\2\u0418\11\0\1\u0418"+
    "\2\0\2\u0418\5\0\2\u0418\44\0\2\u041a\35\0\1\u041b"+
    "\1\u041c\4\u041b\2\0\1\u041b\1\0\4\u041b\30\0\1\u041b"+
    "\5\0\2\u041b\11\0\1\u041b\2\0\2\u041b\5\0\2\u041b"+
    "\46\0\3\u041d\60\0\2\u041e\101\0\2\u041f\53\0\1\u0420"+
    "\1\u0421\4\u0420\2\0\1\u0420\1\0\4\u0420\30\0\1\u0420"+
    "\5\0\2\u0420\11\0\1\u0420\2\0\2\u0420\5\0\2\u0420"+
    "\26\0\2\u0422\63\0\1\u0423\10\0\1\u0423\2\0\1\u0423"+
    "\112\0\2\u0424\73\0\2\u0425\133\0\2\u0426\57\0\2\u0427"+
    "\130\0\2\u0428\22\0\1\u0429\10\0\1\u0429\143\0\2\u042a"+
    "\47\0\2\u042b\21\0\2\u042c\36\0\1\u042d\10\0\1\u042d"+
    "\71\0\1\u042e\10\0\1\u042e\64\0\4\u0328\1\u042f\5\0"+
    "\1\u0328\1\0\1\u0328\20\0\2\u0430\2\u0431\40\0\1\u0328"+
    "\36\0\2\u0432\43\0\1\u0433\1\u0434\4\u0433\2\0\1\u0433"+
    "\1\0\4\u0433\30\0\1\u0433\5\0\2\u0433\11\0\1\u0433"+
    "\2\0\2\u0433\5\0\2\u0433\2\0\1\u032b\100\0\1\u0435"+
    "\1\u0436\4\u0435\2\0\1\u0435\1\0\4\u0435\30\0\1\u0435"+
    "\5\0\2\u0435\11\0\1\u0435\2\0\2\u0435\5\0\2\u0435"+
    "\1\u0437\1\u0438\4\u0437\2\0\1\u0437\1\0\4\u0437\30\0"+
    "\1\u0437\5\0\2\u0437\11\0\1\u0437\2\0\2\u0437\5\0"+
    "\2\u0437\26\0\2\u0439\53\0\1\u043a\1\u043b\4\u043a\2\0"+
    "\1\u043a\1\0\4\u043a\30\0\1\u043a\5\0\2\u043a\11\0"+
    "\1\u043a\2\0\2\u043a\5\0\2\u043a\26\0\2\u043c\53\0"+
    "\1\u043d\1\u043e\4\u043d\2\0\1\u043d\1\0\4\u043d\30\0"+
    "\1\u043d\5\0\2\u043d\11\0\1\u043d\2\0\2\u043d\5\0"+
    "\2\u043d\46\0\3\u043f\112\0\2\u0440\30\0\1\u0441\10\0"+
    "\1\u0441\142\0\2\u0442\47\0\2\u0443\124\0\2\u0444\41\0"+
    "\1\u0445\10\0\1\u0445\106\0\2\u0446\62\0\1\u0447\10\0"+
    "\1\u0447\110\0\2\u0448\53\0\1\u0449\1\u044a\3\u044b\1\u044c"+
    "\2\0\1\u0449\1\0\1\u0449\1\u044b\1\u0449\1\u044b\14\0"+
    "\2\u044d\12\0\1\u0449\5\0\2\u0449\11\0\1\u0449\2\0"+
    "\2\u0449\5\0\1\u0449\1\u044b\26\0\2\u044e\105\0\2\u044f"+
    "\115\0\3\u0450\60\0\2\u0451\101\0\2\u0452\101\0\2\u0453"+
    "\121\0\3\u0454\60\0\2\u0455\121\0\3\u0456\100\0\3\u0457"+
    "\60\0\2\u0458\101\0\2\u0459\111\0\2\u045a\43\0\1\u045b"+
    "\1\u045c\4\u045b\2\0\1\u045b\1\0\4\u045b\30\0\1\u045b"+
    "\5\0\2\u045b\11\0\1\u045b\2\0\2\u045b\5\0\2\u045b"+
    "\2\0\1\u034c\102\0\1\u034e\106\0\1\u045d\10\0\1\u045d"+
    "\111\0\2\52\12\0\2\53\5\0\2\u045e\56\0\2\u045f"+
    "\2\0\2\56\2\0\2\u0460\6\0\3\u0461\2\u0462\56\0"+
    "\2\u0463\16\0\3\u0464\2\72\56\0\2\u0465\2\0\2\77"+
    "\2\0\2\100\6\0\3\u0466\2\u0467\56\0\2\u045f\2\0"+
    "\2\56\2\0\2\u0460\6\0\3\u0461\2\u0468\56\0\2\u0465"+
    "\6\0\2\100\6\0\3\u0466\2\u0469\41\0\1\u01eb\10\0"+
    "\1\u01eb\3\0\2\u0463\16\0\3\u0464\2\72\36\0\1\u046a"+
    "\1\0\1\111\6\0\1\u046a\1\0\1\111\2\0\1\111"+
    "\3\0\2\113\2\u046b\2\115\13\0\2\117\5\0\2\u046c"+
    "\27\0\1\u046a\1\0\1\111\6\0\1\u046a\1\0\1\111"+
    "\2\0\1\111\3\0\2\113\2\u046b\2\115\13\0\2\117"+
    "\5\0\2\u046c\2\121\51\0\2\u046d\2\0\2\u046e\11\0"+
    "\2\124\56\0\2\125\6\0\2\u046f\6\0\3\130\2\u0470"+
    "\56\0\2\u0471\6\0\2\u0472\6\0\3\134\40\0\1\136"+
    "\10\0\1\136\111\0\2\u0473\2\0\2\u0474\2\0\2\143"+
    "\2\0\2\144\5\0\2\146\21\0\2\147\37\0\2\151"+
    "\31\0\2\154\42\0\2\155\2\0\2\u0475\2\0\2\157"+
    "\11\0\2\u0476\56\0\2\155\2\0\2\u0477\2\0\2\157"+
    "\11\0\2\u0476\40\0\1\u0478\10\0\1\u0478\2\0\1\u0478"+
    "\3\0\2\164\24\0\2\167\53\0\2\170\2\171\24\0"+
    "\2\u0479\47\0\2\u047a\6\0\2\174\6\0\3\175\2\u047b"+
    "\56\0\2\u047c\6\0\2\174\6\0\3\175\2\u047b\56\0"+
    "\2\u047d\6\0\2\u047e\2\0\2\u047f\2\0\3\u0480\60\0"+
    "\2\u0481\6\0\2\u0482\2\0\2\u047f\2\0\3\u0480\2\u0483"+
    "\76\0\3\u0484\64\0\2\u0485\2\0\2\u0486\6\0\3\u0487"+
    "\2\214\62\0\2\u0485\2\0\2\u0488\6\0\3\u0487\2\214"+
    "\56\0\2\u0489\53\0\1\u048a\1\u048b\4\u048a\2\0\1\u048a"+
    "\1\0\4\u048a\30\0\1\u048a\5\0\2\u048a\11\0\1\u048a"+
    "\2\0\2\u048a\5\0\2\u048a\46\0\3\u048c\32\0\1\u048d"+
    "\1\u048e\4\u048d\2\0\1\u048d\1\0\4\u048d\30\0\1\u048d"+
    "\5\0\2\u048d\11\0\1\u048d\2\0\2\u048d\5\0\2\u048d"+
    "\26\0\2\u048f\53\0\1\u0490\1\u0491\4\u0490\2\0\1\u0490"+
    "\1\0\4\u0490\30\0\1\u0490\5\0\2\u0490\11\0\1\u0490"+
    "\2\0\2\u0490\5\0\2\u0490\13\0\1\u0492\71\0\1\u0371"+
    "\10\0\1\u0492\140\0\2\u0493\36\0\1\u0494\10\0\1\u0494"+
    "\63\0\1\u0495\1\u0496\4\u0495\2\0\1\u0495\1\0\4\u0495"+
    "\30\0\1\u0495\5\0\2\u0495\11\0\1\u0495\2\0\2\u0495"+
    "\5\0\2\u0495\51\0\2\u0497\66\0\2\u0498\45\0\1\u0378"+
    "\100\0\1\u0499\1\u049a\4\u0499\2\0\1\u0499\1\0\4\u0499"+
    "\30\0\1\u0499\5\0\2\u0499\11\0\1\u0499\2\0\2\u0499"+
    "\5\0\2\u0499\1\0\4\u037b\1\u049b\3\0\1\u049c\1\0"+
    "\1\u037b\1\0\1\u037b\4\0\1\u049c\57\0\1\u037b\26\0"+
    "\2\u049d\101\0\2\u049e\53\0\1\u049f\1\u04a0\4\u049f\2\0"+
    "\1\u049f\1\0\4\u049f\30\0\1\u049f\5\0\2\u049f\11\0"+
    "\1\u049f\2\0\2\u049f\5\0\2\u049f\46\0\3\u04a1\60\0"+
    "\2\u04a2\101\0\2\u04a3\101\0\2\u04a4\101\0\2\u04a5\53\0"+
    "\1\u04a6\1\u04a7\4\u04a6\2\0\1\u04a6\1\0\4\u04a6\30\0"+
    "\1\u04a6\5\0\2\u04a6\11\0\1\u04a6\2\0\2\u04a6\5\0"+
    "\2\u04a6\26\0\2\u04a8\117\0\2\u04a9\43\0\1\u04aa\10\0"+
    "\1\u04aa\65\0\1\u0388\100\0\1\u04ab\1\u04ac\4\u04ab\2\0"+
    "\1\u04ab\1\0\4\u04ab\30\0\1\u04ab\5\0\2\u04ab\11\0"+
    "\1\u04ab\2\0\2\u04ab\5\0\2\u04ab\26\0\2\u04ad\53\0"+
    "\1\u04ae\1\u04af\4\u04ae\2\0\1\u04ae\1\0\4\u04ae\30\0"+
    "\1\u04ae\5\0\2\u04ae\11\0\1\u04ae\2\0\2\u04ae\5\0"+
    "\2\u04ae\44\0\2\u04b0\43\0\1\u04b1\10\0\1\u04b1\63\0"+
    "\1\u04b2\1\u04b3\4\u04b2\2\0\1\u04b2\1\0\4\u04b2\30\0"+
    "\1\u04b2\5\0\2\u04b2\11\0\1\u04b2\2\0\2\u04b2\5\0"+
    "\2\u04b2\2\0\1\u0390\126\0\2\u04b4\53\0\1\u04b5\1\u04b6"+
    "\4\u04b5\2\0\1\u04b5\1\0\4\u04b5\30\0\1\u04b5\5\0"+
    "\2\u04b5\11\0\1\u04b5\2\0\2\u04b5\5\0\2\u04b5\2\0"+
    "\1\u0394\100\0\1\u04b7\1\u04b8\4\u04b7\2\0\1\u04b7\1\0"+
    "\4\u04b7\30\0\1\u04b7\5\0\2\u04b7\11\0\1\u04b7\2\0"+
    "\2\u04b7\5\0\2\u04b7\36\0\2\u04b9\43\0\1\u04ba\1\u04bb"+
    "\4\u04ba\2\0\1\u04ba\1\0\4\u04ba\30\0\1\u04ba\5\0"+
    "\2\u04ba\11\0\1\u04ba\2\0\2\u04ba\5\0\2\u04ba\46\0"+
    "\3\u04bc\32\0\1\u04bd\1\u04be\4\u04bd\2\0\1\u04bd\1\0"+
    "\4\u04bd\30\0\1\u04bd\5\0\2\u04bd\11\0\1\u04bd\2\0"+
    "\2\u04bd\5\0\2\u04bd\2\0\1\u039b\102\0\1\u039d\100\0"+
    "\1\u04bf\1\u04c0\4\u04bf\2\0\1\u04bf\1\0\4\u04bf\30\0"+
    "\1\u04bf\5\0\2\u04bf\11\0\1\u04bf\2\0\2\u04bf\5\0"+
    "\2\u04bf\2\0\1\u03a0\146\0\3\u04c1\41\0\1\u04c2\10\0"+
    "\1\u04c2\64\0\1\u03a4\126\0\2\u04c3\124\0\2\u04c4\66\0"+
    "\2\u04c5\111\0\3\u04c6\117\0\2\u04c7\25\0\1\u04c8\10\0"+
    "\1\u04c8\62\0\1\u03ac\132\0\2\u04c9\75\0\2\u04ca\53\0"+
    "\1\u04cb\1\u04cc\3\u04cd\1\u04ce\2\0\1\u04cb\1\0\1\u04cb"+
    "\1\u04cd\1\u04cb\1\u04cd\16\0\2\u04cf\10\0\1\u04cb\5\0"+
    "\2\u04cb\11\0\1\u04cb\2\0\2\u04cb\5\0\1\u04cb\1\u04cd"+
    "\51\0\2\u04d0\56\0\2\u04d1\63\0\1\u04d2\10\0\1\u04d2"+
    "\2\0\1\u04d2\66\0\1\u025a\10\0\1\u025a\2\0\1\u025a"+
    "\74\0\1\u04d3\4\0\1\u04d3\144\0\2\u04d4\52\0\2\u04d5"+
    "\43\0\1\u04d6\1\u04d7\4\u04d6\2\0\1\u04d6\1\0\4\u04d6"+
    "\30\0\1\u04d6\5\0\2\u04d6\11\0\1\u04d6\2\0\2\u04d6"+
    "\5\0\2\u04d6\2\0\1\u03b9\102\0\1\u03bb\126\0\2\u04d8"+
    "\56\0\2\u03be\1\0\2\u03be\1\0\1\u03be\2\0\1\u04d9"+
    "\6\0\2\u03be\2\0\1\u03be\1\0\1\u03be\1\0\1\u03be"+
    "\1\0\1\u03be\1\0\1\u03be\1\0\1\u03be\1\0\1\u03be"+
    "\1\0\1\u03be\2\0\1\u03be\1\0\2\u03be\3\0\1\u03be"+
    "\1\0\1\u03be\1\0\2\u03be\1\0\1\u03be\2\0\1\u03be"+
    "\3\0\1\u03be\1\0\1\u03be\4\0\1\u04da\1\u03c1\2\u04da"+
    "\1\u04db\1\u03c3\4\0\1\u04da\1\0\1\u04da\1\0\1\u03c3"+
    "\62\0\1\u04da\1\0\4\u04da\1\u04db\1\u03c3\4\0\1\u04da"+
    "\1\0\1\u04da\1\0\1\u03c3\62\0\1\u04da\6\0\1\u04dc"+
    "\10\0\1\u04dc\134\0\2\u04dd\56\0\2\u04de\55\0\1\u03c5"+
    "\126\0\2\u04df\101\0\2\u04e0\53\0\1\u04e1\1\u04e2\4\u04e1"+
    "\2\0\1\u04e1\1\0\4\u04e1\30\0\1\u04e1\5\0\2\u04e1"+
    "\11\0\1\u04e1\2\0\2\u04e1\5\0\2\u04e1\46\0\3\u04e3"+
    "\76\0\2\u04e4\35\0\1\u04e5\1\u04e6\4\u04e5\2\0\1\u04e5"+
    "\1\0\4\u04e5\30\0\1\u04e5\5\0\2\u04e5\11\0\1\u04e5"+
    "\2\0\2\u04e5\5\0\2\u04e5\2\0\1\u03cd\100\0\1\u04e7"+
    "\1\u04e8\4\u04e7\2\0\1\u04e7\1\0\4\u04e7\30\0\1\u04e7"+
    "\5\0\2\u04e7\11\0\1\u04e7\2\0\2\u04e7\5\0\2\u04e7"+
    "\26\0\2\u04e9\63\0\1\u04ea\10\0\1\u04ea\2\0\1\u04ea"+
    "\60\0\1\u03d2\101\0\1\u04eb\1\u03d6\2\u04eb\1\u04ec\5\0"+
    "\1\u04eb\1\0\1\u04eb\20\0\2\u03d8\25\0\2\u03d9\13\0"+
    "\1\u04eb\1\0\4\u04eb\1\u04ec\5\0\1\u04eb\1\0\1\u04eb"+
    "\20\0\2\u03d8\25\0\2\u03d9\13\0\1\u04eb\6\0\1\u04ed"+
    "\10\0\1\u04ed\64\0\4\u03d9\1\u04ee\5\0\1\u03d9\1\0"+
    "\1\u03d9\14\0\2\u04ef\2\0\2\u04f0\25\0\2\u03d9\13\0"+
    "\1\u03d9\1\0\4\u03d9\1\u04ee\5\0\1\u03d9\1\0\1\u03d9"+
    "\20\0\2\u04f0\42\0\1\u03d9\1\u04f1\1\u04f2\4\u04f1\2\0"+
    "\1\u04f1\1\0\4\u04f1\30\0\1\u04f1\5\0\2\u04f1\11\0"+
    "\1\u04f1\2\0\2\u04f1\5\0\2\u04f1\1\u04f3\1\u04f4\4\u04f3"+
    "\2\0\1\u04f3\1\0\4\u04f3\30\0\1\u04f3\5\0\2\u04f3"+
    "\11\0\1\u04f3\2\0\2\u04f3\5\0\2\u04f3\2\0\1\u03dc"+
    "\100\0\1\u04f5\1\u04f6\4\u04f5\2\0\1\u04f5\1\0\4\u04f5"+
    "\30\0\1\u04f5\5\0\2\u04f5\11\0\1\u04f5\2\0\2\u04f5"+
    "\5\0\2\u04f5\26\0\2\u04f7\55\0\1\u03e0\100\0\1\u04f8"+
    "\1\u04f9\4\u04f8\2\0\1\u04f8\1\0\4\u04f8\30\0\1\u04f8"+
    "\5\0\2\u04f8\11\0\1\u04f8\2\0\2\u04f8\5\0\2\u04f8"+
    "\2\0\1\u03e3\126\0\2\u04fa\54\0\1\u04fb\1\u03e8\2\u04fb"+
    "\1\u04fc\5\0\1\u04fb\1\0\1\u04fb\20\0\2\u03ea\16\0"+
    "\2\u03eb\22\0\1\u04fb\1\0\4\u04fb\1\u04fc\5\0\1\u04fb"+
    "\1\0\1\u04fb\20\0\2\u03ea\16\0\2\u03eb\22\0\1\u04fb"+
    "\6\0\1\u04fd\10\0\1\u04fd\64\0\4\u03ea\1\u04fe\5\0"+
    "\1\u03ea\1\0\1\u03ea\40\0\2\u03eb\22\0\1\u03ea\51\0"+
    "\2\u04ff\56\0\2\u0500\53\0\1\u0501\1\u0502\4\u0501\2\0"+
    "\1\u0501\1\0\4\u0501\30\0\1\u0501\5\0\2\u0501\11\0"+
    "\1\u0501\2\0\2\u0501\5\0\2\u0501\1\u0503\1\u0504\4\u0503"+
    "\2\0\1\u0503\1\0\4\u0503\30\0\1\u0503\5\0\2\u0503"+
    "\11\0\1\u0503\2\0\2\u0503\5\0\2\u0503\1\u0505\1\u0506"+
    "\4\u0505\2\0\1\u0505\1\0\4\u0505\30\0\1\u0505\5\0"+
    "\2\u0505\11\0\1\u0505\2\0\2\u0505\5\0\2\u0505\74\0"+
    "\2\u0507\33\0\2\u0508\62\0\1\u0509\10\0\1\u0509\72\0"+
    "\1\u050a\10\0\1\u050a\2\0\1\u050a\56\0\1\u050b\1\u050c"+
    "\4\u050b\2\0\1\u050b\1\0\4\u050b\30\0\1\u050b\5\0"+
    "\2\u050b\11\0\1\u050b\2\0\2\u050b\5\0\2\u050b\2\0"+
    "\1\u03f5\102\0\1\u03f7\100\0\1\u050d\1\u050e\4\u050d\2\0"+
    "\1\u050d\1\0\4\u050d\30\0\1\u050d\5\0\2\u050d\11\0"+
    "\1\u050d\2\0\2\u050d\5\0\2\u050d\1\u050f\1\u0510\4\u050f"+
    "\2\0\1\u050f\1\0\4\u050f\30\0\1\u050f\5\0\2\u050f"+
    "\11\0\1\u050f\2\0\2\u050f\5\0\2\u050f\2\0\1\u03fb"+
    "\100\0\1\u0511\1\u0512\4\u0511\2\0\1\u0511\1\0\4\u0511"+
    "\30\0\1\u0511\5\0\2\u0511\11\0\1\u0511\2\0\2\u0511"+
    "\5\0\2\u0511\26\0\2\u0513\111\0\2\u0514\123\0\2\u0515"+
    "\27\0\1\u0516\10\0\1\u0516\63\0\1\u0517\1\u0518\4\u0517"+
    "\2\0\1\u0517\1\0\4\u0517\30\0\1\u0517\5\0\2\u0517"+
    "\11\0\1\u0517\2\0\2\u0517\5\0\2\u0517\1\u0519\1\u051a"+
    "\4\u0519\2\0\1\u0519\1\0\4\u0519\30\0\1\u0519\5\0"+
    "\2\u0519\11\0\1\u0519\2\0\2\u0519\5\0\2\u0519\2\0"+
    "\1\u0404\102\0\1\u0406\100\0\1\u051b\1\u051c\4\u051b\2\0"+
    "\1\u051b\1\0\4\u051b\30\0\1\u051b\5\0\2\u051b\11\0"+
    "\1\u051b\2\0\2\u051b\5\0\2\u051b\1\u051d\1\u051e\4\u051d"+
    "\2\0\1\u051d\1\0\4\u051d\30\0\1\u051d\5\0\2\u051d"+
    "\11\0\1\u051d\2\0\2\u051d\5\0\2\u051d\1\0\1\u051f"+
    "\1\u040c\2\u051f\1\u0520\3\0\1\u040e\1\0\1\u051f\1\0"+
    "\1\u051f\4\0\1\u040e\57\0\1\u051f\1\0\4\u051f\1\u0520"+
    "\3\0\1\u040e\1\0\1\u051f\1\0\1\u051f\4\0\1\u040e"+
    "\57\0\1\u051f\6\0\1\u0521\10\0\1\u0521\131\0\3\u0522"+
    "\62\0\1\u0523\47\0\1\u0523\46\0\2\u0524\37\0\1\u0411"+
    "\100\0\1\u0525\1\u0526\4\u0525\2\0\1\u0525\1\0\4\u0525"+
    "\30\0\1\u0525\5\0\2\u0525\11\0\1\u0525\2\0\2\u0525"+
    "\5\0\2\u0525\51\0\2\u0527\30\0\1\u0528\1\u0529\4\u0528"+
    "\2\0\1\u0528\1\0\4\u0528\30\0\1\u0528\5\0\2\u0528"+
    "\11\0\1\u0528\2\0\2\u0528\5\0\2\u0528\1\u052a\1\u052b"+
    "\4\u052a\2\0\1\u052a\1\0\4\u052a\30\0\1\u052a\5\0"+
    "\2\u052a\11\0\1\u052a\2\0\2\u052a\5\0\2\u052a\65\0"+
    "\2\u052c\16\0\1\u0418\151\0\2\u052d\32\0\1\u041b\126\0"+
    "\2\u052e\53\0\1\u052f\1\u0530\4\u052f\2\0\1\u052f\1\0"+
    "\4\u052f\30\0\1\u052f\5\0\2\u052f\11\0\1\u052f\2\0"+
    "\2\u052f\5\0\2\u052f\1\u0531\1\u0532\4\u0531\2\0\1\u0531"+
    "\1\0\4\u0531\30\0\1\u0531\5\0\2\u0531\11\0\1\u0531"+
    "\2\0\2\u0531\5\0\2\u0531\2\0\1\u0420\100\0\1\u0533"+
    "\1\u0534\4\u0533\2\0\1\u0533\1\0\4\u0533\30\0\1\u0533"+
    "\5\0\2\u0533\11\0\1\u0533\2\0\2\u0533\5\0\2\u0533"+
    "\11\0\1\u0535\10\0\1\u0535\106\0\2\u0536\53\0\1\u0537"+
    "\1\u0538\4\u0537\2\0\1\u0537\1\0\4\u0537\30\0\1\u0537"+
    "\5\0\2\u0537\11\0\1\u0537\2\0\2\u0537\5\0\2\u0537"+
    "\46\0\3\u0539\117\0\2\u053a\42\0\2\u02ab\21\0\2\u053b"+
    "\37\0\1\u053c\10\0\1\u053c\133\0\2\u053d\70\0\2\u053e"+
    "\121\0\2\u053f\30\0\1\u0540\10\0\1\u0540\130\0\3\u0541"+
    "\40\0\1\u0542\10\0\1\u0542\141\0\2\u0543\51\0\2\u0544"+
    "\54\0\2\u0432\2\0\1\u0545\1\0\1\u0546\1\u0547\1\u0548"+
    "\1\0\1\u0432\1\0\1\u0432\2\0\1\u0546\1\u0547\1\u0548"+
    "\1\0\1\u0547\1\0\2\u0549\4\0\2\u054a\2\u054b\2\u054c"+
    "\2\u054d\2\u054e\10\0\2\u054f\2\u0550\14\0\2\u0551\2\0"+
    "\1\u0432\2\0\1\u0433\102\0\1\u0435\102\0\1\u0437\100\0"+
    "\1\u0552\1\u0553\4\u0552\2\0\1\u0552\1\0\4\u0552\30\0"+
    "\1\u0552\5\0\2\u0552\11\0\1\u0552\2\0\2\u0552\5\0"+
    "\2\u0552\2\0\1\u043a\100\0\1\u0554\1\u0555\4\u0554\2\0"+
    "\1\u0554\1\0\4\u0554\30\0\1\u0554\5\0\2\u0554\11\0"+
    "\1\u0554\2\0\2\u0554\5\0\2\u0554\2\0\1\u043d\126\0"+
    "\2\u0556\121\0\3\u0557\42\0\1\u0558\10\0\1\u0558\2\0"+
    "\1\u0558\124\0\3\u0559\32\0\1\u055a\1\u055b\4\u055a\2\0"+
    "\1\u055a\1\0\4\u055a\30\0\1\u055a\5\0\2\u055a\11\0"+
    "\1\u055a\2\0\2\u055a\5\0\2\u055a\1\u055c\1\u055d\4\u055c"+
    "\2\0\1\u055c\1\0\4\u055c\30\0\1\u055c\5\0\2\u055c"+
    "\11\0\1\u055c\2\0\2\u055c\5\0\2\u055c\12\0\1\135"+
    "\70\0\1\u055e\1\u055f\4\u055e\2\0\1\u055e\1\0\4\u055e"+
    "\30\0\1\u055e\5\0\2\u055e\11\0\1\u055e\2\0\2\u055e"+
    "\5\0\2\u055e\10\0\1\u0560\10\0\1\u0560\2\0\1\u0560"+
    "\56\0\1\u0561\1\u0562\4\u0561\2\0\1\u0561\1\0\4\u0561"+
    "\30\0\1\u0561\5\0\2\u0561\11\0\1\u0561\2\0\2\u0561"+
    "\5\0\2\u0561\1\0\1\u0563\1\u044b\2\u0563\1\u0564\5\0"+
    "\1\u0563\1\0\1\u0563\14\0\2\u044d\46\0\1\u0563\1\0"+
    "\4\u0563\1\u0564\5\0\1\u0563\1\0\1\u0563\14\0\2\u044d"+
    "\46\0\1\u0563\6\0\1\u0565\10\0\1\u0565\134\0\2\u0566"+
    "\30\0\1\u0567\1\u0568\4\u0567\2\0\1\u0567\1\0\4\u0567"+
    "\30\0\1\u0567\5\0\2\u0567\11\0\1\u0567\2\0\2\u0567"+
    "\5\0\2\u0567\46\0\3\u0569\60\0\2\u056a\53\0\1\u056b"+
    "\1\u056c\4\u056b\2\0\1\u056b\1\0\4\u056b\30\0\1\u056b"+
    "\5\0\2\u056b\11\0\1\u056b\2\0\2\u056b\5\0\2\u056b"+
    "\32\0\2\u056d\47\0\1\u056e\1\u056f\4\u056e\2\0\1\u056e"+
    "\1\0\4\u056e\30\0\1\u056e\5\0\2\u056e\11\0\1\u056e"+
    "\2\0\2\u056e\5\0\2\u056e\26\0\2\u0570\63\0\1\u0571"+
    "\10\0\1\u0571\2\0\1\u0571\104\0\2\u0572\63\0\1\u0573"+
    "\10\0\1\u0573\2\0\1\u0573\56\0\1\u0574\1\u0575\4\u0574"+
    "\2\0\1\u0574\1\0\4\u0574\30\0\1\u0574\5\0\2\u0574"+
    "\11\0\1\u0574\2\0\2\u0574\5\0\2\u0574\1\u0576\1\u0577"+
    "\4\u0576\2\0\1\u0576\1\0\4\u0576\30\0\1\u0576\5\0"+
    "\2\u0576\11\0\1\u0576\2\0\2\u0576\5\0\2\u0576\1\u0578"+
    "\1\u0579\4\u0578\2\0\1\u0578\1\0\4\u0578\30\0\1\u0578"+
    "\5\0\2\u0578\11\0\1\u0578\2\0\2\u0578\5\0\2\u0578"+
    "\2\0\1\u045b\107\0\1\u057a\10\0\1\u057a\116\0\2\224"+
    "\77\0\2\226\55\0\1\231\10\0\1\231\12\0\2\232"+
    "\24\0\2\u057b\57\0\2\u057c\123\0\2\237\31\0\1\242"+
    "\10\0\1\242\2\0\1\242\7\0\2\244\22\0\2\245"+
    "\53\0\2\251\2\0\2\252\75\0\2\260\2\261\22\0"+
    "\2\263\3\0\2\264\24\0\1\271\10\0\1\271\2\0"+
    "\1\271\1\0\2\272\105\0\2\u057d\10\0\2\275\115\0"+
    "\2\277\53\0\2\u057d\107\0\2\301\77\0\2\310\101\0"+
    "\2\316\114\0\2\321\36\0\1\322\10\0\1\322\113\0"+
    "\2\u057e\105\0\2\335\20\0\2\u057f\55\0\2\337\55\0"+
    "\1\u0580\10\0\1\u0580\12\0\2\342\57\0\1\354\10\0"+
    "\1\354\2\0\1\354\3\0\2\355\2\356\10\0\2\357"+
    "\10\0\2\u0581\2\u0582\57\0\2\362\11\0\2\u0583\66\0"+
    "\2\u0584\6\0\3\u0102\64\0\2\u0107\75\0\2\u0108\6\0"+
    "\2\u0584\6\0\3\u0102\70\0\2\u0109\52\0\1\u0111\10\0"+
    "\1\u0111\70\0\1\u0113\10\0\1\u0113\20\0\2\u0585\2\0"+
    "\2\u0116\43\0\1\u0586\10\0\1\u0586\45\0\2\u011c\22\0"+
    "\1\u0113\1\0\1\u011d\6\0\1\u0113\1\0\1\u011d\2\0"+
    "\1\u011d\13\0\2\u0585\2\0\2\u0116\101\0\2\u011f\75\0"+
    "\2\u0120\101\0\2\u0123\75\0\2\u0125\46\0\4\u0129\1\u012a"+
    "\5\0\1\u0129\1\0\1\u0129\6\0\1\u012b\17\0\2\u011f"+
    "\34\0\1\u0129\40\0\2\u012c\126\0\2\u012d\15\0\2\u0484"+
    "\2\0\1\u0587\1\u0351\1\u0352\1\u0353\1\u0354\1\0\1\u0484"+
    "\1\0\1\u0484\1\0\1\u0351\1\u0355\1\u0353\1\u0356\1\0"+
    "\1\u0357\1\0\1\u0358\1\u0359\2\u035a\2\u035b\2\u035c\2\u035d"+
    "\2\u035e\2\u035f\1\u0360\1\u0361\3\u0362\2\u0363\3\0\1\u0364"+
    "\1\u0365\1\u0366\1\u0367\14\0\1\u0369\1\u036a\2\0\1\u0484"+
    "\51\0\2\u0131\62\0\2\u0132\101\0\2\u0135\101\0\2\u0138"+
    "\47\0\1\u0588\1\u0589\4\u0588\2\0\1\u0588\1\0\4\u0588"+
    "\30\0\1\u0588\5\0\2\u0588\11\0\1\u0588\2\0\2\u0588"+
    "\5\0\2\u0588\2\0\1\u048a\126\0\2\u058a\55\0\1\u048d"+
    "\100\0\1\u058b\1\u058c\4\u058b\2\0\1\u058b\1\0\4\u058b"+
    "\30\0\1\u058b\5\0\2\u058b\11\0\1\u058b\2\0\2\u058b"+
    "\5\0\2\u058b\2\0\1\u0490\100\0\1\u058d\1\u058e\4\u058d"+
    "\2\0\1\u058d\1\0\4\u058d\30\0\1\u058d\5\0\2\u058d"+
    "\11\0\1\u058d\2\0\2\u058d\5\0\2\u058d\51\0\2\u058f"+
    "\32\0\1\u0495\100\0\1\u0590\1\u0591\4\u0590\2\0\1\u0590"+
    "\1\0\4\u0590\30\0\1\u0590\5\0\2\u0590\11\0\1\u0590"+
    "\2\0\2\u0590\5\0\2\u0590\1\u0592\1\u0593\4\u0592\2\0"+
    "\1\u0592\1\0\4\u0592\30\0\1\u0592\5\0\2\u0592\11\0"+
    "\1\u0592\2\0\2\u0592\5\0\2\u0592\2\0\1\u0499\106\0"+
    "\1\u0594\10\0\1\u0594\111\0\2\u0595\53\0\1\u0596\1\u0597"+
    "\4\u0596\2\0\1\u0596\1\0\4\u0596\30\0\1\u0596\5\0"+
    "\2\u0596\11\0\1\u0596\2\0\2\u0596\5\0\2\u0596\1\u0598"+
    "\1\u0599\4\u0598\2\0\1\u0598\1\0\4\u0598\30\0\1\u0598"+
    "\5\0\2\u0598\11\0\1\u0598\2\0\2\u0598\5\0\2\u0598"+
    "\2\0\1\u049f\100\0\1\u059a\1\u059b\4\u059a\2\0\1\u059a"+
    "\1\0\4\u059a\30\0\1\u059a\5\0\2\u059a\11\0\1\u059a"+
    "\2\0\2\u059a\5\0\2\u059a\1\u059c\1\u059d\4\u059c\2\0"+
    "\1\u059c\1\0\4\u059c\30\0\1\u059c\5\0\2\u059c\11\0"+
    "\1\u059c\2\0\2\u059c\5\0\2\u059c\1\u059e\1\u059f\4\u059e"+
    "\2\0\1\u059e\1\0\4\u059e\30\0\1\u059e\5\0\2\u059e"+
    "\11\0\1\u059e\2\0\2\u059e\5\0\2\u059e\10\0\1\u05a0"+
    "\10\0\1\u05a0\2\0\1\u05a0\56\0\1\u05a1\1\u05a2\4\u05a1"+
    "\2\0\1\u05a1\1\0\4\u05a1\30\0\1\u05a1\5\0\2\u05a1"+
    "\11\0\1\u05a1\2\0\2\u05a1\5\0\2\u05a1\2\0\1\u04a6"+
    "\100\0\1\u05a3\1\u05a4\4\u05a3\2\0\1\u05a3\1\0\4\u05a3"+
    "\30\0\1\u05a3\5\0\2\u05a3\11\0\1\u05a3\2\0\2\u05a3"+
    "\5\0\2\u05a3\32\0\2\u05a5\120\0\2\u05a6\32\0\1\u04ab"+
    "\100\0\1\u05a7\1\u05a8\4\u05a7\2\0\1\u05a7\1\0\4\u05a7"+
    "\30\0\1\u05a7\5\0\2\u05a7\11\0\1\u05a7\2\0\2\u05a7"+
    "\5\0\2\u05a7\2\0\1\u04ae\126\0\2\u05a9\121\0\3\u05aa"+
    "\34\0\1\u04b2\100\0\1\u05ab\1\u05ac\4\u05ab\2\0\1\u05ab"+
    "\1\0\4\u05ab\30\0\1\u05ab\5\0\2\u05ab\11\0\1\u05ab"+
    "\2\0\2\u05ab\5\0\2\u05ab\2\0\1\u04b5\102\0\1\u04b7"+
    "\130\0\2\u05ad\53\0\1\u04ba\126\0\2\u05ae\55\0\1\u04bd"+
    "\102\0\1\u04bf\126\0\2\u05af\115\0\2\u05b0\37\0\1\u05b1"+
    "\1\u05b2\4\u05b1\2\0\1\u05b1\1\0\4\u05b1\30\0\1\u05b1"+
    "\5\0\2\u05b1\11\0\1\u05b1\2\0\2\u05b1\5\0\2\u05b1"+
    "\1\u05b3\1\u05b4\4\u05b3\2\0\1\u05b3\1\0\4\u05b3\30\0"+
    "\1\u05b3\5\0\2\u05b3\11\0\1\u05b3\2\0\2\u05b3\5\0"+
    "\2\u05b3\6\0\1\u05b5\10\0\1\u05b5\111\0\2\u05b6\121\0"+
    "\3\u05b7\44\0\1\u0129\130\0\2\u05b8\41\0\1\u05b9\1\u05ba"+
    "\4\u05b9\2\0\1\u05b9\1\0\4\u05b9\30\0\1\u05b9\5\0"+
    "\2\u05b9\11\0\1\u05b9\2\0\2\u05b9\5\0\2\u05b9\1\0"+
    "\1\u05bb\1\u04cd\2\u05bb\1\u05bc\5\0\1\u05bb\1\0\1\u05bb"+
    "\16\0\2\u04cf\44\0\1\u05bb\1\0\4\u05bb\1\u05bc\5\0"+
    "\1\u05bb\1\0\1\u05bb\16\0\2\u04cf\44\0\1\u05bb\6\0"+
    "\1\u05bd\10\0\1\u05bd\121\0\2\u05be\51\0\1\u05bf\10\0"+
    "\1\u05bf\63\0\1\u05c0\1\u05c1\4\u05c0\2\0\1\u05c0\1\0"+
    "\4\u05c0\30\0\1\u05c0\5\0\2\u05c0\11\0\1\u05c0\2\0"+
    "\2\u05c0\5\0\2\u05c0\11\0\1\u05c2\10\0\1\u05c2\126\0"+
    "\3\u05c3\100\0\3\u05c4\32\0\1\u05c5\1\u05c6\4\u05c5\2\0"+
    "\1\u05c5\1\0\4\u05c5\30\0\1\u05c5\5\0\2\u05c5\11\0"+
    "\1\u05c5\2\0\2\u05c5\5\0\2\u05c5\2\0\1\u04d6\100\0"+
    "\1\u0314\1\u05c7\4\u0314\2\0\1\u0314\1\0\4\u0314\30\0"+
    "\1\u0314\5\0\2\u0314\11\0\1\u0314\2\0\2\u0314\5\0"+
    "\2\u0314\53\0\1\u05c8\36\0\1\u05c9\10\0\1\u05c9\114\0"+
    "\2\u05ca\47\0\1\u05cb\1\u05cc\4\u05cb\2\0\1\u05cb\1\0"+
    "\4\u05cb\30\0\1\u05cb\5\0\2\u05cb\11\0\1\u05cb\2\0"+
    "\2\u05cb\5\0\2\u05cb\44\0\2\u05cd\35\0\1\u05ce\1\u05cf"+
    "\4\u05ce\2\0\1\u05ce\1\0\4\u05ce\30\0\1\u05ce\5\0"+
    "\2\u05ce\11\0\1\u05ce\2\0\2\u05ce\5\0\2\u05ce\2\0"+
    "\1\u04e1\100\0\1\u05d0\1\u05d1\4\u05d0\2\0\1\u05d0\1\0"+
    "\4\u05d0\30\0\1\u05d0\5\0\2\u05d0\11\0\1\u05d0\2\0"+
    "\2\u05d0\5\0\2\u05d0\51\0\2\u05d2\32\0\1\u04e5\102\0"+
    "\1\u04e7\100\0\1\u05d3\1\u05d4\4\u05d3\2\0\1\u05d3\1\0"+
    "\4\u05d3\30\0\1\u05d3\5\0\2\u05d3\11\0\1\u05d3\2\0"+
    "\2\u05d3\5\0\2\u05d3\10\0\1\u05d5\10\0\1\u05d5\2\0"+
    "\1\u05d5\65\0\1\u05d6\10\0\1\u05d6\70\0\1\u05d7\10\0"+
    "\1\u05d7\101\0\1\u05d8\4\0\1\u05d8\111\0\2\u04ef\51\0"+
    "\1\u04f1\102\0\1\u04f3\102\0\1\u04f5\100\0\1\u05d9\1\u05da"+
    "\4\u05d9\2\0\1\u05d9\1\0\4\u05d9\30\0\1\u05d9\5\0"+
    "\2\u05d9\11\0\1\u05d9\2\0\2\u05d9\5\0\2\u05d9\2\0"+
    "\1\u04f8\100\0\1\u05db\1\u05dc\4\u05db\2\0\1\u05db\1\0"+
    "\4\u05db\30\0\1\u05db\5\0\2\u05db\11\0\1\u05db\2\0"+
    "\2\u05db\5\0\2\u05db\7\0\1\u05dd\10\0\1\u05dd\70\0"+
    "\1\u05de\10\0\1\u05de\71\0\1\u05df\10\0\1\u05df\63\0"+
    "\1\u05e0\1\u05e1\4\u05e0\2\0\1\u05e0\1\0\4\u05e0\30\0"+
    "\1\u05e0\5\0\2\u05e0\11\0\1\u05e0\2\0\2\u05e0\5\0"+
    "\2\u05e0\2\0\1\u0501\102\0\1\u0503\102\0\1\u0505\146\0"+
    "\3\u05e2\32\0\1\u05e3\1\u05e4\4\u05e3\2\0\1\u05e3\1\0"+
    "\4\u05e3\30\0\1\u05e3\5\0\2\u05e3\11\0\1\u05e3\2\0"+
    "\2\u05e3\5\0\2\u05e3\10\0\1\u05e5\10\0\1\u05e5\2\0"+
    "\1\u05e5\66\0\1\u05e6\10\0\1\u05e6\2\0\1\u05e6\60\0"+
    "\1\u050b\102\0\1\u050d\102\0\1\u050f\102\0\1\u0511\100\0"+
    "\1\u05e7\1\u05e8\4\u05e7\2\0\1\u05e7\1\0\4\u05e7\30\0"+
    "\1\u05e7\5\0\2\u05e7\11\0\1\u05e7\2\0\2\u05e7\5\0"+
    "\2\u05e7\1\u05e9\1\u05ea\4\u05e9\2\0\1\u05e9\1\0\4\u05e9"+
    "\30\0\1\u05e9\5\0\2\u05e9\11\0\1\u05e9\2\0\2\u05e9"+
    "\5\0\2\u05e9\60\0\2\u05eb\57\0\2\u05ec\45\0\1\u0517"+
    "\102\0\1\u0519\102\0\1\u051b\102\0\1\u051d\107\0\1\u05ed"+
    "\10\0\1\u05ed\122\0\2\u05ee\107\0\3\u05ef\103\0\2\u05f0"+
    "\32\0\1\u0525\100\0\1\u05f1\1\u05f2\4\u05f1\2\0\1\u05f1"+
    "\1\0\4\u05f1\30\0\1\u05f1\5\0\2\u05f1\11\0\1\u05f1"+
    "\2\0\2\u05f1\5\0\2\u05f1\2\0\1\u0528\102\0\1\u052a"+
    "\132\0\2\u05f3\47\0\1\u05f4\1\u05f5\4\u05f4\2\0\1\u05f4"+
    "\1\0\4\u05f4\30\0\1\u05f4\5\0\2\u05f4\11\0\1\u05f4"+
    "\2\0\2\u05f4\5\0\2\u05f4\1\u05f6\1\u05f7\4\u05f6\2\0"+
    "\1\u05f6\1\0\4\u05f6\30\0\1\u05f6\5\0\2\u05f6\11\0"+
    "\1\u05f6\2\0\2\u05f6\5\0\2\u05f6\2\0\1\u052f\102\0"+
    "\1\u0531\102\0\1\u0533\112\0\1\u0187\130\0\2\u05f8\43\0"+
    "\1\u0537\140\0\2\u05f9\112\0\2\u05fa\64\0\2\u04bc\55\0"+
    "\1\u05fb\10\0\1\u05fb\2\0\1\u05fb\112\0\2\u05fc\103\0"+
    "\2\u05fd\130\0\2\u01dc\24\0\1\u05fe\10\0\1\u05fe\2\0"+
    "\1\u05fe\122\0\2\u05ff\44\0\1\u0600\10\0\1\u0600\130\0"+
    "\3\u0601\112\0\2\u0602\27\0\1\u0603\10\0\1\u0603\111\0"+
    "\2\u0604\101\0\2\u0605\16\0\3\u0606\74\0\2\101\2\0"+
    "\3\u0607\41\0\1\110\10\0\1\110\110\0\2\u0608\6\0"+
    "\2\u0609\14\0\1\135\104\0\2\140\51\0\2\u060a\131\0"+
    "\2\153\55\0\2\u060b\15\0\2\u060c\56\0\2\u060d\21\0"+
    "\2\u060e\56\0\2\u060f\16\0\3\u0610\2\204\62\0\2\u0611"+
    "\51\0\1\u0552\102\0\1\u0554\100\0\1\u0612\1\u0613\4\u0612"+
    "\2\0\1\u0612\1\0\4\u0612\30\0\1\u0612\5\0\2\u0612"+
    "\11\0\1\u0612\2\0\2\u0612\5\0\2\u0612\1\u0614\1\u0615"+
    "\4\u0614\2\0\1\u0614\1\0\4\u0614\30\0\1\u0614\5\0"+
    "\2\u0614\11\0\1\u0614\2\0\2\u0614\5\0\2\u0614\11\0"+
    "\1\u0616\10\0\1\u0616\116\0\2\u0617\45\0\1\u055a\102\0"+
    "\1\u055c\102\0\1\u055e\111\0\1\u0618\10\0\1\u0618\62\0"+
    "\1\u0561\107\0\1\u0619\10\0\1\u0619\140\0\2\u061a\25\0"+
    "\1\u0567\100\0\1\u061b\1\u061c\4\u061b\2\0\1\u061b\1\0"+
    "\4\u061b\30\0\1\u061b\5\0\2\u061b\11\0\1\u061b\2\0"+
    "\2\u061b\5\0\2\u061b\1\u061d\1\u061e\4\u061d\2\0\1\u061d"+
    "\1\0\4\u061d\30\0\1\u061d\5\0\2\u061d\11\0\1\u061d"+
    "\2\0\2\u061d\5\0\2\u061d\2\0\1\u056b\151\0\2\u061f"+
    "\32\0\1\u056e\100\0\1\u0620\1\u0621\4\u0620\2\0\1\u0620"+
    "\1\0\4\u0620\30\0\1\u0620\5\0\2\u0620\11\0\1\u0620"+
    "\2\0\2\u0620\5\0\2\u0620\10\0\1\u0622\10\0\1\u0622"+
    "\2\0\1\u0622\56\0\1\u0623\1\u0624\4\u0623\2\0\1\u0623"+
    "\1\0\4\u0623\30\0\1\u0623\5\0\2\u0623\11\0\1\u0623"+
    "\2\0\2\u0623\5\0\2\u0623\10\0\1\u0625\10\0\1\u0625"+
    "\2\0\1\u0625\60\0\1\u0574\102\0\1\u0576\102\0\1\u0578"+
    "\110\0\1\u0626\10\0\1\u0626\2\0\1\u0626\136\0\2\u0148"+
    "\101\0\2\u0627\106\0\2\u016c\44\0\2\u0190\77\0\2\u0628"+
    "\111\0\2\u0629\54\0\1\u062a\10\0\1\u062a\124\0\2\u01ac"+
    "\101\0\2\u01af\43\0\1\u062b\10\0\1\u062b\14\0\2\u01be"+
    "\103\0\2\u062c\61\0\1\u01d8\4\0\1\u01d8\65\0\1\u062d"+
    "\10\0\1\u062d\65\0\1\u0588\100\0\1\u062e\1\u062f\4\u062e"+
    "\2\0\1\u062e\1\0\4\u062e\30\0\1\u062e\5\0\2\u062e"+
    "\11\0\1\u062e\2\0\2\u062e\5\0\2\u062e\2\0\1\u058b"+
    "\102\0\1\u058d\100\0\1\u0630\1\u0631\3\u0632\1\u0633\2\0"+
    "\1\u0630\1\0\1\u0630\1\u0632\1\u0630\1\u0632\10\0\2\u0634"+
    "\16\0\1\u0630\5\0\2\u0630\11\0\1\u0630\2\0\2\u0630"+
    "\5\0\1\u0630\1\u0632\2\0\1\u0590\102\0\1\u0592\107\0"+
    "\1\u0635\10\0\1\u0635\124\0\2\u0636\41\0\1\u0596\102\0"+
    "\1\u0598\102\0\1\u059a\102\0\1\u059c\102\0\1\u059e\100\0"+
    "\1\u0637\1\u0638\4\u0637\2\0\1\u0637\1\0\4\u0637\30\0"+
    "\1\u0637\5\0\2\u0637\11\0\1\u0637\2\0\2\u0637\5\0"+
    "\2\u0637\2\0\1\u05a1\102\0\1\u05a3\126\0\2\u0639\53\0"+
    "\1\u063a\1\u063b\4\u063a\2\0\1\u063a\1\0\4\u063a\30\0"+
    "\1\u063a\5\0\2\u063a\11\0\1\u063a\2\0\2\u063a\5\0"+
    "\2\u063a\2\0\1\u05a7\100\0\1\u063c\1\u063d\4\u063c\2\0"+
    "\1\u063c\1\0\4\u063c\30\0\1\u063c\5\0\2\u063c\11\0"+
    "\1\u063c\2\0\2\u063c\5\0\2\u063c\26\0\2\u063e\55\0"+
    "\1\u05ab\132\0\2\u063f\47\0\1\u0640\1\u0641\4\u0640\2\0"+
    "\1\u0640\1\0\4\u0640\30\0\1\u0640\5\0\2\u0640\11\0"+
    "\1\u0640\2\0\2\u0640\5\0\2\u0640\1\u0642\1\u0643\4\u0642"+
    "\2\0\1\u0642\1\0\4\u0642\30\0\1\u0642\5\0\2\u0642"+
    "\11\0\1\u0642\2\0\2\u0642\5\0\2\u0642\32\0\2\u0644"+
    "\51\0\1\u05b1\102\0\1\u05b3\110\0\1\u0645\10\0\1\u0645"+
    "\2\0\1\u0645\56\0\1\u0646\1\u0647\4\u0646\2\0\1\u0646"+
    "\1\0\4\u0646\30\0\1\u0646\5\0\2\u0646\11\0\1\u0646"+
    "\2\0\2\u0646\5\0\2\u0646\26\0\2\u0648\101\0\2\u0649"+
    "\55\0\1\u05b9\107\0\1\u064a\10\0\1\u064a\70\0\1\u064b"+
    "\10\0\1\u064b\121\0\2\u064c\45\0\1\u05c0\112\0\1\u01f3"+
    "\141\0\2\u064d\56\0\2\u064e\55\0\1\u05c5\102\0\1\u0314"+
    "\153\0\1\u05c8\17\0\1\u064f\17\0\1\u0650\10\0\1\u0650"+
    "\2\0\1\u0650\143\0\2\u0651\16\0\1\u05cb\126\0\2\u0652"+
    "\55\0\1\u05ce\102\0\1\u05d0\100\0\1\u0653\1\u0654\4\u0653"+
    "\2\0\1\u0653\1\0\4\u0653\30\0\1\u0653\5\0\2\u0653"+
    "\11\0\1\u0653\2\0\2\u0653\5\0\2\u0653\2\0\1\u05d3"+
    "\146\0\3\u0655\42\0\1\u0656\10\0\1\u0656\2\0\1\u0656"+
    "\65\0\1\u0657\10\0\1\u0657\120\0\2\u0658\45\0\1\u05d9"+
    "\102\0\1\u05db\110\0\1\u0659\10\0\1\u0659\2\0\1\u0659"+
    "\65\0\1\u065a\10\0\1\u065a\126\0\2\u065b\37\0\1\u05e0"+
    "\126\0\2\u065c\55\0\1\u05e3\111\0\1\u065d\10\0\1\u065d"+
    "\126\0\3\u038a\34\0\1\u05e7\102\0\1\u05e9\151\0\2\u065e"+
    "\30\0\1\u065f\1\u0660\4\u065f\2\0\1\u065f\1\0\4\u065f"+
    "\30\0\1\u065f\5\0\2\u065f\11\0\1\u065f\2\0\2\u065f"+
    "\5\0\2\u065f\10\0\1\u0661\10\0\1\u0661\2\0\1\u0661"+
    "\114\0\2\u0662\71\0\2\u0663\53\0\1\u0664\1\u0665\4\u0664"+
    "\2\0\1\u0664\1\0\4\u0664\30\0\1\u0664\5\0\2\u0664"+
    "\11\0\1\u0664\2\0\2\u0664\5\0\2\u0664\2\0\1\u05f1"+
    "\146\0\3\u0666\34\0\1\u05f4\102\0\1\u05f6\140\0\2\u0667"+
    "\67\0\2\u0187\61\0\1\u0668\10\0\1\u0668\74\0\1\u0669"+
    "\10\0\1\u0669\106\0\2\u0222\140\0\2\u02a2\25\0\1\u066a"+
    "\10\0\1\u066a\131\0\2\u066b\40\0\1\u066c\10\0\1\u066c"+
    "\2\0\1\u066c\136\0\2\u066d\47\0\2\u066e\62\0\1\u066f"+
    "\10\0\1\u066f\72\0\1\225\10\0\1\225\2\0\1\225"+
    "\110\0\2\243\107\0\2\253\77\0\2\273\123\0\2\340"+
    "\27\0\1\u0670\10\0\1\u0670\141\0\2\u0671\2\u0672\57\0"+
    "\2\u0673\53\0\1\u0106\10\0\1\u0106\2\0\1\u0106\110\0"+
    "\2\u0114\127\0\2\u0674\37\0\1\u011e\4\0\1\u011e\107\0"+
    "\2\u0124\117\0\3\u0130\34\0\1\u0612\102\0\1\u0614\112\0"+
    "\1\u019c\76\0\1\u0675\10\0\1\u0675\75\0\1\u01a1\100\0"+
    "\1\u0676\10\0\1\u0676\2\0\1\u0676\104\0\2\u0677\55\0"+
    "\1\u061b\102\0\1\u061d\100\0\1\u0678\1\u0679\4\u0678\2\0"+
    "\1\u0678\1\0\4\u0678\30\0\1\u0678\5\0\2\u0678\11\0"+
    "\1\u0678\2\0\2\u0678\5\0\2\u0678\2\0\1\u0620\151\0"+
    "\2\u067a\32\0\1\u0623\136\0\2\u067b\54\0\1\u067c\10\0"+
    "\1\u067c\140\0\2\u0210\21\0\1\u025e\1\u025f\4\u025e\2\0"+
    "\1\u025e\1\0\4\u025e\30\0\1\u025e\5\0\2\u025e\11\0"+
    "\1\u025e\2\0\2\u025e\5\0\2\u025e\16\0\1\u0262\4\0"+
    "\1\u0262\130\0\2\u0277\74\0\2\u067d\67\0\2\u02a1\56\0"+
    "\1\u067e\10\0\1\u067e\64\0\1\u062e\101\0\1\u067f\1\u0632"+
    "\2\u067f\1\u0680\5\0\1\u067f\1\0\1\u067f\10\0\2\u0634"+
    "\52\0\1\u067f\1\0\4\u067f\1\u0680\5\0\1\u067f\1\0"+
    "\1\u067f\10\0\2\u0634\52\0\1\u067f\6\0\1\u0681\10\0"+
    "\1\u0681\143\0\2\u0682\31\0\1\u0683\10\0\1\u0683\2\0"+
    "\1\u0683\66\0\1\u0684\10\0\1\u0684\2\0\1\u0684\60\0"+
    "\1\u0637\100\0\1\u0685\1\u0686\4\u0685\2\0\1\u0685\1\0"+
    "\4\u0685\30\0\1\u0685\5\0\2\u0685\11\0\1\u0685\2\0"+
    "\2\u0685\5\0\2\u0685\2\0\1\u063a\102\0\1\u063c\100\0"+
    "\1\u0687\1\u0688\4\u0687\2\0\1\u0687\1\0\4\u0687\30\0"+
    "\1\u0687\5\0\2\u0687\11\0\1\u0687\2\0\2\u0687\5\0"+
    "\2\u0687\51\0\2\u0689\32\0\1\u0640\102\0\1\u0642\130\0"+
    "\2\u068a\115\0\2\u068b\37\0\1\u0646\100\0\1\u068c\1\u068d"+
    "\4\u068c\2\0\1\u068c\1\0\4\u068c\30\0\1\u068c\5\0"+
    "\2\u068c\11\0\1\u068c\2\0\2\u068c\5\0\2\u068c\1\u068e"+
    "\1\u068f\4\u068e\2\0\1\u068e\1\0\4\u068e\30\0\1\u068e"+
    "\5\0\2\u068e\11\0\1\u068e\2\0\2\u068e\5\0\2\u068e"+
    "\10\0\1\u0690\10\0\1\u0690\2\0\1\u0690\114\0\2\u0691"+
    "\43\0\1\u0692\1\u0693\4\u0692\2\0\1\u0692\1\0\4\u0692"+
    "\30\0\1\u0692\5\0\2\u0692\11\0\1\u0692\2\0\2\u0692"+
    "\5\0\2\u0692\6\0\1\u0694\10\0\1\u0694\63\0\1\u0695"+
    "\1\u0696\4\u0695\2\0\1\u0695\1\0\4\u0695\30\0\1\u0695"+
    "\5\0\2\u0695\11\0\1\u0695\2\0\2\u0695\5\0\2\u0695"+
    "\11\0\1\u0697\10\0\1\u0697\60\0\1\u0698\1\u0699\4\u0698"+
    "\2\0\1\u0698\1\0\4\u0698\30\0\1\u0698\5\0\2\u0698"+
    "\11\0\1\u0698\2\0\2\u0698\5\0\2\u0698\1\u069a\1\u069b"+
    "\4\u069a\2\0\1\u069a\1\0\4\u069a\30\0\1\u069a\5\0"+
    "\2\u069a\11\0\1\u069a\2\0\2\u069a\5\0\2\u069a\2\0"+
    "\1\u0653\126\0\2\u069c\64\0\1\u069d\10\0\1\u069d\70\0"+
    "\1\u069e\10\0\1\u069e\2\0\1\u069e\106\0\2\u069f\62\0"+
    "\1\u06a0\10\0\1\u06a0\70\0\1\u06a1\10\0\1\u06a1\2\0"+
    "\1\u06a1\114\0\2\u06a2\43\0\1\u06a3\1\u06a4\4\u06a3\2\0"+
    "\1\u06a3\1\0\4\u06a3\30\0\1\u06a3\5\0\2\u06a3\11\0"+
    "\1\u06a3\2\0\2\u06a3\5\0\2\u06a3\12\0\1\u0226\70\0"+
    "\1\u06a5\1\u06a6\4\u06a5\2\0\1\u06a5\1\0\4\u06a5\30\0"+
    "\1\u06a5\5\0\2\u06a5\11\0\1\u06a5\2\0\2\u06a5\5\0"+
    "\2\u06a5\2\0\1\u065f\111\0\1\u06a7\10\0\1\u06a7\66\0"+
    "\1\u06a8\10\0\1\u06a8\71\0\1\u06a9\10\0\1\u06a9\65\0"+
    "\1\u0664\126\0\2\u06aa\101\0\2\u065c\44\0\2\u0507\43\0"+
    "\2\u063e\6\0\3\u05aa\44\0\1\u0256\102\0\1\u0257\70\0"+
    "\1\u06ab\1\u06ac\4\u06ab\2\0\1\u06ab\1\0\4\u06ab\30\0"+
    "\1\u06ab\5\0\2\u06ab\11\0\1\u06ab\2\0\2\u06ab\5\0"+
    "\2\u06ab\11\0\1\u06ad\10\0\1\u06ad\126\0\3\u06ae\41\0"+
    "\1\u06af\10\0\1\u06af\72\0\1\u06b0\10\0\1\u06b0\2\0"+
    "\1\u06b0\114\0\2\u06b1\54\0\1\u06b2\10\0\1\u06b2\106\0"+
    "\2\u01ab\61\0\1\u06b3\10\0\1\u06b3\131\0\3\u01db\76\0"+
    "\2\u06b4\46\0\1\u06b5\10\0\1\u06b5\110\0\2\u06b6\53\0"+
    "\1\u0678\100\0\1\u06b7\1\u06b8\4\u06b7\2\0\1\u06b7\1\0"+
    "\4\u06b7\30\0\1\u06b7\5\0\2\u06b7\11\0\1\u06b7\2\0"+
    "\2\u06b7\5\0\2\u06b7\44\0\2\u06b9\47\0\1\u0280\141\0"+
    "\2\u0375\40\0\1\u06ba\10\0\1\u06ba\2\0\1\u06ba\65\0"+
    "\1\u06bb\10\0\1\u06bb\126\0\2\u06bc\46\0\1\u06bd\10\0"+
    "\1\u06bd\106\0\2\u06be\55\0\1\u0685\102\0\1\u0687\100\0"+
    "\1\u06bf\1\u06c0\4\u06bf\2\0\1\u06bf\1\0\4\u06bf\30\0"+
    "\1\u06bf\5\0\2\u06bf\11\0\1\u06bf\2\0\2\u06bf\5\0"+
    "\2\u06bf\51\0\2\u06c1\66\0\2\u06c2\45\0\1\u068c\102\0"+
    "\1\u068e\111\0\1\u06c3\10\0\1\u06c3\76\0\1\u06c4\4\0"+
    "\1\u06c4\61\0\1\u0692\136\0\2\u01f3\45\0\1\u0695\112\0"+
    "\1\u04da\72\0\1\u0698\102\0\1\u069a\100\0\1\u06c5\1\u06c6"+
    "\4\u06c5\2\0\1\u06c5\1\0\4\u06c5\30\0\1\u06c5\5\0"+
    "\2\u06c5\11\0\1\u06c5\2\0\2\u06c5\5\0\2\u06c5\12\0"+
    "\1\u04eb\101\0\1\u06c7\10\0\1\u06c7\131\0\2\u06c8\42\0"+
    "\1\u04fb\101\0\1\u06c9\10\0\1\u06c9\66\0\1\u06ca\10\0"+
    "\1\u06ca\65\0\1\u06a3\102\0\1\u06a5\112\0\1\u051f\141\0"+
    "\2\u06cb\30\0\1\u06cc\1\u06cd\4\u06cc\2\0\1\u06cc\1\0"+
    "\4\u06cc\30\0\1\u06cc\5\0\2\u06cc\11\0\1\u06cc\2\0"+
    "\2\u06cc\5\0\2\u06cc\1\u06ce\1\u06cf\4\u06ce\2\0\1\u06ce"+
    "\1\0\4\u06ce\30\0\1\u06ce\5\0\2\u06ce\11\0\1\u06ce"+
    "\2\0\2\u06ce\5\0\2\u06ce\2\0\1\u06ab\112\0\1\u0328"+
    "\116\0\2\u06d0\105\0\2\u06d1\60\0\1\u06d2\10\0\1\u06d2"+
    "\124\0\2\u0263\63\0\2\u0276\117\0\2\u06d3\63\0\2\u06d4"+
    "\65\0\1\u0563\76\0\1\u06d5\10\0\1\u06d5\65\0\1\u06b7"+
    "\144\0\2\u06d6\46\0\1\u06d7\10\0\1\u06d7\70\0\1\u06d8"+
    "\10\0\1\u06d8\2\0\1\u06d8\127\0\2\u06d9\42\0\1\u037b"+
    "\76\0\1\u06da\10\0\1\u06da\65\0\1\u06bf\100\0\1\u06db"+
    "\1\u06dc\4\u06db\2\0\1\u06db\1\0\4\u06db\30\0\1\u06db"+
    "\5\0\2\u06db\11\0\1\u06db\2\0\2\u06db\5\0\2\u06db"+
    "\46\0\3\u06dd\44\0\1\u05bb\136\0\3\u06de\34\0\1\u06c5"+
    "\112\0\1\u03d9\124\0\2\u06df\57\0\1\u03ea\126\0\2\u06e0"+
    "\43\0\1\u040a\1\u06e1\4\u040a\2\0\1\u040a\1\0\4\u040a"+
    "\30\0\1\u040a\5\0\2\u040a\11\0\1\u040a\2\0\2\u040a"+
    "\5\0\2\u040a\2\0\1\u06cc\102\0\1\u06ce\100\0\1\u06e2"+
    "\1\u06e3\4\u06e2\2\0\1\u06e2\1\0\4\u06e2\30\0\1\u06e2"+
    "\5\0\2\u06e2\11\0\1\u06e2\2\0\2\u06e2\5\0\2\u06e2"+
    "\46\0\3\u06e4\44\0\1\u0432\136\0\3\u0374\32\0\1\u06e5"+
    "\1\u06e6\4\u06e5\2\0\1\u06e5\1\0\4\u06e5\30\0\1\u06e5"+
    "\5\0\2\u06e5\11\0\1\u06e5\2\0\2\u06e5\5\0\2\u06e5"+
    "\26\0\2\u06e7\101\0\2\u06e8\65\0\1\u0484\101\0\1\u06e9"+
    "\10\0\1\u06e9\61\0\4\u06d9\1\u06ea\5\0\1\u06d9\1\0"+
    "\1\u06d9\10\0\2\u06eb\52\0\1\u06d9\46\0\3\u06ec\34\0"+
    "\1\u06db\106\0\1\u06ed\10\0\1\u06ed\111\0\2\u06ee\121\0"+
    "\3\u06ef\62\0\2\u06f0\53\0\1\u040a\102\0\1\u06e2\126\0"+
    "\2\u06f1\55\0\1\u06e5\100\0\1\u0449\1\u06f2\4\u0449\2\0"+
    "\1\u0449\1\0\4\u0449\30\0\1\u0449\5\0\2\u0449\11\0"+
    "\1\u0449\2\0\2\u0449\5\0\2\u0449\1\u06f3\1\u06f4\4\u06f3"+
    "\2\0\1\u06f3\1\0\4\u06f3\30\0\1\u06f3\5\0\2\u06f3"+
    "\11\0\1\u06f3\2\0\2\u06f3\5\0\2\u06f3\12\0\1\u067f"+
    "\76\0\1\u06f5\10\0\1\u06f5\150\0\2\u06f6\42\0\2\u06f7"+
    "\53\0\1\u06f8\1\u06f9\4\u06f8\2\0\1\u06f8\1\0\4\u06f8"+
    "\30\0\1\u06f8\5\0\2\u06f8\11\0\1\u06f8\2\0\2\u06f8"+
    "\5\0\2\u06f8\1\0\4\u06ee\1\u06fa\5\0\1\u06ee\1\0"+
    "\1\u06ee\12\0\2\u06fb\50\0\1\u06ee\6\0\1\u06fc\10\0"+
    "\1\u06fc\115\0\2\u06fd\47\0\1\u06fe\1\u06ff\4\u06fe\2\0"+
    "\1\u06fe\1\0\4\u06fe\30\0\1\u06fe\5\0\2\u06fe\11\0"+
    "\1\u06fe\2\0\2\u06fe\5\0\2\u06fe\2\0\1\u0449\102\0"+
    "\1\u06f3\107\0\1\u0700\10\0\1\u0700\130\0\3\u0701\32\0"+
    "\1\u0702\1\u0703\4\u0702\2\0\1\u0702\1\0\4\u0702\30\0"+
    "\1\u0702\5\0\2\u0702\11\0\1\u0702\2\0\2\u0702\5\0"+
    "\2\u0702\2\0\1\u06f8\106\0\1\u0704\10\0\1\u0704\131\0"+
    "\3\u0705\60\0\2\u0706\124\0\2\u0707\32\0\1\u06fe\110\0"+
    "\1\u0708\10\0\1\u0708\2\0\1\u0708\106\0\2\u0709\53\0"+
    "\1\u0702\107\0\1\u070a\10\0\1\u070a\124\0\2\u070b\37\0"+
    "\1\u03d4\1\u070c\4\u03d4\2\0\1\u03d4\1\0\4\u03d4\30\0"+
    "\1\u03d4\5\0\2\u03d4\11\0\1\u03d4\2\0\2\u03d4\5\0"+
    "\2\u03d4\1\u03e6\1\u070d\4\u03e6\2\0\1\u03e6\1\0\4\u03e6"+
    "\30\0\1\u03e6\5\0\2\u03e6\11\0\1\u03e6\2\0\2\u03e6"+
    "\5\0\2\u03e6\11\0\1\u070e\10\0\1\u070e\116\0\2\u070f"+
    "\53\0\1\u0710\10\0\1\u0710\2\0\1\u0710\136\0\2\u0711"+
    "\23\0\1\u03d4\102\0\1\u03e6\112\0\1\u06d9\70\0\1\u0630"+
    "\1\u0712\4\u0630\2\0\1\u0630\1\0\4\u0630\30\0\1\u0630"+
    "\5\0\2\u0630\11\0\1\u0630\2\0\2\u0630\5\0\2\u0630"+
    "\11\0\1\u0713\10\0\1\u0713\126\0\3\u0714\34\0\1\u0630"+
    "\112\0\1\u06ee\116\0\2\u0715\53\0\1\u04cb\1\u0716\4\u04cb"+
    "\2\0\1\u04cb\1\0\4\u04cb\30\0\1\u04cb\5\0\2\u04cb"+
    "\11\0\1\u04cb\2\0\2\u04cb\5\0\2\u04cb\2\0\1\u04cb"+
    "\100\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[108138];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\2\0\2\1\1\11\2\1\1\11\1\1\u01f5\0\1\11"+
    "\5\0\1\11\1\1\47\0\1\11\1\1\14\0\1\11"+
    "\1\1\40\0\1\11\1\1\15\0\1\11\1\1\23\0"+
    "\1\11\1\1\67\0\1\11\1\1\20\0\1\11\1\1"+
    "\32\0\1\11\1\1\5\0\1\11\1\1\1\11\1\1"+
    "\4\0\1\11\1\1\26\0\1\11\1\1\2\0\1\11"+
    "\26\0\1\11\1\1\37\0\1\11\1\1\1\11\1\1"+
    "\50\0\1\11\1\1\16\0\1\11\1\1\6\0\1\11"+
    "\1\1\2\0\1\11\1\1\5\0\1\11\1\1\1\11"+
    "\1\1\1\0\1\11\1\1\2\0\1\11\1\1\6\0"+
    "\1\11\1\1\13\0\1\11\1\1\1\11\1\1\2\0"+
    "\1\11\3\1\2\0\1\11\1\1\6\0\1\11\1\1"+
    "\3\0\1\11\1\1\1\11\3\1\4\0\1\11\1\1"+
    "\2\0\1\11\1\1\1\0\1\11\1\1\1\0\1\11"+
    "\3\1\13\0\1\11\1\1\1\11\1\1\2\0\1\11"+
    "\1\1\7\0\1\11\1\1\1\11\1\1\2\0\1\11"+
    "\3\1\3\0\1\11\1\1\5\0\1\11\1\1\1\0"+
    "\1\11\1\1\3\0\1\11\1\1\21\0\1\11\1\1"+
    "\1\11\1\1\1\11\1\1\1\0\1\11\1\1\1\0"+
    "\1\11\1\1\12\0\1\11\3\1\16\0\1\11\1\1"+
    "\55\0\1\11\1\1\1\0\1\11\1\1\1\0\1\11"+
    "\1\1\1\11\2\0\1\11\1\1\2\0\1\11\1\1"+
    "\4\0\1\11\1\1\5\0\1\11\1\1\3\0\1\11"+
    "\1\1\1\0\1\11\1\1\2\0\1\11\1\1\1\0"+
    "\1\11\1\1\1\11\1\1\1\0\1\11\1\1\1\0"+
    "\1\11\1\1\1\11\1\1\12\0\1\11\3\1\7\0"+
    "\1\11\1\1\11\0\1\11\1\1\2\0\1\11\1\1"+
    "\1\11\1\1\10\0\1\11\1\1\1\11\1\1\1\11"+
    "\1\1\1\0\1\11\1\1\7\0\1\11\1\1\1\11"+
    "\1\1\1\11\1\1\4\0\1\11\1\1\1\11\1\1"+
    "\1\11\1\1\1\11\1\1\4\0\1\11\1\1\1\11"+
    "\1\1\1\11\1\1\1\11\1\1\6\0\1\11\1\1"+
    "\1\0\1\11\1\1\1\11\1\1\3\0\1\11\1\1"+
    "\1\11\1\1\1\11\1\1\2\0\1\11\1\1\31\0"+
    "\1\11\1\1\1\11\1\1\4\0\1\11\1\1\1\11"+
    "\1\1\1\11\1\1\1\0\1\11\1\1\4\0\1\11"+
    "\1\1\2\0\1\11\1\1\1\0\1\11\1\1\4\0"+
    "\1\11\1\1\1\11\1\1\1\11\1\1\16\0\1\11"+
    "\1\1\1\0\1\11\1\1\1\11\1\1\1\0\1\11"+
    "\1\1\1\11\1\1\2\0\1\11\1\1\1\11\1\1"+
    "\1\11\1\1\1\11\1\1\1\11\1\1\1\0\1\11"+
    "\1\1\1\11\1\1\2\0\1\11\1\1\2\0\1\11"+
    "\1\1\4\0\1\11\1\1\1\11\1\1\4\0\1\11"+
    "\1\1\5\0\1\11\1\1\3\0\1\11\2\1\3\0"+
    "\1\11\1\1\1\0\1\11\1\1\1\11\1\1\1\0"+
    "\1\11\1\1\4\0\1\11\1\1\1\11\1\1\3\0"+
    "\1\11\1\1\1\0\1\11\1\1\2\0\1\11\1\1"+
    "\1\11\1\1\6\0\1\11\1\1\1\0\1\11\1\1"+
    "\1\11\1\1\32\0\1\11\1\1\1\11\1\1\5\0"+
    "\1\11\1\1\1\11\1\1\1\0\1\11\1\1\1\0"+
    "\1\11\1\1\11\0\1\11\1\1\1\11\3\1\3\0"+
    "\1\11\1\1\1\0\1\11\1\1\1\11\1\1\2\0"+
    "\1\11\1\1\1\11\1\1\2\0\1\11\1\1\7\0"+
    "\1\11\3\0\1\11\1\1\12\0\1\11\1\1\3\0"+
    "\1\11\1\1\22\0\1\11\1\1\13\0\1\11\1\1"+
    "\1\11\1\1\3\0\1\11\1\1\1\11\1\1\2\0"+
    "\1\11\1\1\1\0\1\11\1\1\1\0\1\11\1\1"+
    "\1\11\1\1\7\0\1\11\1\1\1\11\1\1\4\0"+
    "\1\11\1\1\12\0\1\11\1\1\6\0\1\11\1\1"+
    "\4\0\1\11\1\1\5\0\1\11\1\1\1\11\1\1"+
    "\13\0\1\11\1\1\4\0\1\1\1\11\1\1\1\0"+
    "\1\11\1\1\13\0\1\1\1\11\1\1\3\0\1\11"+
    "\1\1\4\0\1\11\1\1\2\0\1\11\1\1\10\0"+
    "\2\1\4\0\1\1\3\0\1\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1814];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
	
	/* Custom java code */

    @Override
	public String language() { return "IT"; }

	@Override
	public String version() { return "0.7"; }


	/* An empty default constructor is required to comply with LinkolnService */
	
	public Geos() { }
	
	@Override
	public final boolean run() {
		
		try {
			
			yyreset(new StringReader(getInput()));
			yylex();
			
		} catch (IOException e) {

			e.printStackTrace();
			return false;
		}
		
		return true;
	}
	


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Geos(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 382) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return YYEOF;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { addText(yytext());
	position++;
            } 
            // fall through
          case 187: break;
          case 2: 
            { addText(yytext());
		position++;
            } 
            // fall through
          case 188: break;
          case 3: 
            { addText(yytext());
		position--; //account for the following {LKN_C} character
		yybegin(YYINITIAL);
            } 
            // fall through
          case 189: break;
          case 4: 
            { annotate(new City(), "IT_BA", true, true);
            } 
            // fall through
          case 190: break;
          case 5: 
            { annotate(new City(), "IT_PI", true, true);
            } 
            // fall through
          case 191: break;
          case 6: 
            { annotate(new City(), "IT_AT", true, true);
            } 
            // fall through
          case 192: break;
          case 7: 
            { annotate(new City(), "IT_RM", true, true);
            } 
            // fall through
          case 193: break;
          case 8: 
            { annotate(new City(), "IT_EN", true, true);
            } 
            // fall through
          case 194: break;
          case 9: 
            { annotate(new City(), "IT_CO", true, true);
            } 
            // fall through
          case 195: break;
          case 10: 
            { annotate(new City(), "IT_LO", true, true);
            } 
            // fall through
          case 196: break;
          case 11: 
            { annotate(new City(), "IT_NU", true, true);
            } 
            // fall through
          case 197: break;
          case 12: 
            { annotate(new City(), "IT_SI", true, true);
            } 
            // fall through
          case 198: break;
          case 13: 
            { annotate(new City(), "IT_PR", true, true);
            } 
            // fall through
          case 199: break;
          case 14: 
            { annotate(new City(), "IT_PV", true, true);
            } 
            // fall through
          case 200: break;
          case 15: 
            { annotate(new City(), "IT_PO", true, true);
            } 
            // fall through
          case 201: break;
          case 16: 
            { annotate(new City(), "IT_AO", true, true);
            } 
            // fall through
          case 202: break;
          case 17: 
            { annotate(new City(), "IT_AQ", true, true);
            } 
            // fall through
          case 203: break;
          case 18: 
            { annotate(new City(), "IT_RI", true, true);
            } 
            // fall through
          case 204: break;
          case 19: 
            { annotate(new City(), "IT_CN", true, true);
            } 
            // fall through
          case 205: break;
          case 20: 
            { annotate(new Country(), "CY", true, true);
            } 
            // fall through
          case 206: break;
          case 21: 
            { annotate(new City(), "IT_TR", true, true);
            } 
            // fall through
          case 207: break;
          case 22: 
            { annotate(new City(), "IT_G015", true, true);
            } 
            // fall through
          case 208: break;
          case 23: 
            { annotate(new Country(), "MT", true, true);
            } 
            // fall through
          case 209: break;
          case 24: 
            { annotate(new City(), "IT_MB", true, true);
            } 
            // fall through
          case 210: break;
          case 25: 
            { annotate(new City(), "IT_F023", true, true);
            } 
            // fall through
          case 211: break;
          case 26: 
            { annotate(new Region(), "IT_LAZ", true, true);
            } 
            // fall through
          case 212: break;
          case 27: 
            { annotate(new City(), "IT_LE", true, true);
            } 
            // fall through
          case 213: break;
          case 28: 
            { annotate(new City(), "IT_LU", true, true);
            } 
            // fall through
          case 214: break;
          case 29: 
            { annotate(new City(), "IT_LC", true, true);
            } 
            // fall through
          case 215: break;
          case 30: 
            { annotate(new City(), "IT_D704", true, true);
            } 
            // fall through
          case 216: break;
          case 31: 
            { annotate(new City(), "IT_FM", true, true);
            } 
            // fall through
          case 217: break;
          case 32: 
            { annotate(new City(), "IT_NA", true, true);
            } 
            // fall through
          case 218: break;
          case 33: 
            { annotate(new City(), "IT_NO", true, true);
            } 
            // fall through
          case 219: break;
          case 34: 
            { annotate(new Country(), "BE", true, true);
            } 
            // fall through
          case 220: break;
          case 35: 
            { annotate(new City(), "IT_BI", true, true);
            } 
            // fall through
          case 221: break;
          case 36: 
            { annotate(new Country(), "BA", true, true);
            } 
            // fall through
          case 222: break;
          case 37: 
            { annotate(new Country(), "ES", true, true);
            } 
            // fall through
          case 223: break;
          case 38: 
            { annotate(new City(), "IT_SV", true, true);
            } 
            // fall through
          case 224: break;
          case 39: 
            { annotate(new Country(), "SE", true, true);
            } 
            // fall through
          case 225: break;
          case 40: 
            { annotate(new Country(), "CS", true, true);
            } 
            // fall through
          case 226: break;
          case 41: 
            { annotate(new City(), "IT_PD", true, true);
            } 
            // fall through
          case 227: break;
          case 42: 
            { annotate(new City(), "IT_G479", true, true);
            } 
            // fall through
          case 228: break;
          case 43: 
            { annotate(new Region(), "IT_PUG", true, true);
            } 
            // fall through
          case 229: break;
          case 44: 
            { annotate(new City(), "IT_SP", true, true);
            } 
            // fall through
          case 230: break;
          case 45: 
            { annotate(new City(), "IT_AN", true, true);
            } 
            // fall through
          case 231: break;
          case 46: 
            { annotate(new City(), "IT_AP", true, true);
            } 
            // fall through
          case 232: break;
          case 47: 
            { annotate(new City(), "IT_AR", true, true);
            } 
            // fall through
          case 233: break;
          case 48: 
            { annotate(new Country(), "GR", true, true);
            } 
            // fall through
          case 234: break;
          case 49: 
            { annotate(new City(), "IT_GE", true, true);
            } 
            // fall through
          case 235: break;
          case 50: 
            { annotate(new City(), "IT_RG", true, true);
            } 
            // fall through
          case 236: break;
          case 51: 
            { annotate(new Country(), "RU", true, true);
            } 
            // fall through
          case 237: break;
          case 52: 
            { annotate(new City(), "IT_RN", true, true);
            } 
            // fall through
          case 238: break;
          case 53: 
            { annotate(new City(), "IT_RO", true, true);
            } 
            // fall through
          case 239: break;
          case 54: 
            { annotate(new City(), "IT_VA", true, true);
            } 
            // fall through
          case 240: break;
          case 55: 
            { annotate(new Region(), "IT_VEN", true, true);
            } 
            // fall through
          case 241: break;
          case 56: 
            { annotate(new Region(), "IT_EMR", true, true);
            } 
            // fall through
          case 242: break;
          case 57: 
            { annotate(new City(), "IT_C573", true, true);
            } 
            // fall through
          case 243: break;
          case 58: 
            { annotate(new City(), "IT_CH", true, true);
            } 
            // fall through
          case 244: break;
          case 59: 
            { annotate(new City(), "IT_L500", true, true);
            } 
            // fall through
          case 245: break;
          case 60: 
            { annotate(new Region(), "IT_UMB", true, true);
            } 
            // fall through
          case 246: break;
          case 61: 
            { annotate(new City(), "IT_UD", true, true);
            } 
            // fall through
          case 247: break;
          case 62: 
            { annotate(new City(), "IT_TN", true, true);
            } 
            // fall through
          case 248: break;
          case 63: 
            { annotate(new City(), "IT_TE", true, true);
            } 
            // fall through
          case 249: break;
          case 64: 
            { annotate(new City(), "IT_TO", true, true);
            } 
            // fall through
          case 250: break;
          case 65: 
            { annotate(new Country(), "IT", true, true);
            } 
            // fall through
          case 251: break;
          case 66: 
            { annotate(new Country(), "NL", true, true);
            } 
            // fall through
          case 252: break;
          case 67: 
            { annotate(new Region(), "IT_MAR", true, true);
            } 
            // fall through
          case 253: break;
          case 68: 
            { annotate(new City(), "IT_MT", true, true);
            } 
            // fall through
          case 254: break;
          case 69: 
            { annotate(new City(), "IT_MI", true, true);
            } 
            // fall through
          case 255: break;
          case 70: 
            { annotate(new Country(), "MC", true, true);
            } 
            // fall through
          case 256: break;
          case 71: 
            { annotate(new Region(), "IT_MOL", true, true);
            } 
            // fall through
          case 257: break;
          case 72: 
            { annotate(new City(), "IT_MO", true, true);
            } 
            // fall through
          case 258: break;
          case 73: 
            { annotate(new City(), "IT_LT", true, true);
            } 
            // fall through
          case 259: break;
          case 74: 
            { annotate(new Region(), "IT_FVG", true, true);
            } 
            // fall through
          case 260: break;
          case 75: 
            { annotate(new City(), "IT_FG", true, true);
            } 
            // fall through
          case 261: break;
          case 76: 
            { annotate(new City(), "IT_BS", true, true);
            } 
            // fall through
          case 262: break;
          case 77: 
            { annotate(new City(), "IT_BG", true, true);
            } 
            // fall through
          case 263: break;
          case 78: 
            { annotate(new City(), "IT_BL", true, true);
            } 
            // fall through
          case 264: break;
          case 79: 
            { annotate(new City(), "IT_BZ", true, true);
            } 
            // fall through
          case 265: break;
          case 80: 
            { annotate(new City(), "IT_BO", true, true);
            } 
            // fall through
          case 266: break;
          case 81: 
            { annotate(new City(), "IT_SS", true, true);
            } 
            // fall through
          case 267: break;
          case 82: 
            { annotate(new City(), "IT_SA", true, true);
            } 
            // fall through
          case 268: break;
          case 83: 
            { annotate(new Region(), "IT_SIC", true, true);
            } 
            // fall through
          case 269: break;
          case 84: 
            { annotate(new City(), "IT_SO", true, true);
            } 
            // fall through
          case 270: break;
          case 85: 
            { annotate(new Country(), "SM", true, true);
            } 
            // fall through
          case 271: break;
          case 86: 
            { annotate(new City(), "IT_PA", true, true);
            } 
            // fall through
          case 272: break;
          case 87: 
            { annotate(new City(), "IT_PE", true, true);
            } 
            // fall through
          case 273: break;
          case 88: 
            { annotate(new City(), "IT_PG", true, true);
            } 
            // fall through
          case 274: break;
          case 89: 
            { annotate(new City(), "IT_PT", true, true);
            } 
            // fall through
          case 275: break;
          case 90: 
            { annotate(new City(), "IT_PZ", true, true);
            } 
            // fall through
          case 276: break;
          case 91: 
            { annotate(new Country(), "PL", true, true);
            } 
            // fall through
          case 277: break;
          case 92: 
            { annotate(new Country(), "AD", true, true);
            } 
            // fall through
          case 278: break;
          case 93: 
            { annotate(new Region(), "IT_ABR", true, true);
            } 
            // fall through
          case 279: break;
          case 94: 
            { annotate(new Country(), "AM", true, true);
            } 
            // fall through
          case 280: break;
          case 95: 
            { annotate(new Country(), "AT", true, true);
            } 
            // fall through
          case 281: break;
          case 96: 
            { annotate(new Country(), "AL", true, true);
            } 
            // fall through
          case 282: break;
          case 97: 
            { annotate(new Country(), "GE", true, true);
            } 
            // fall through
          case 283: break;
          case 98: 
            { annotate(new City(), "IT_GO", true, true);
            } 
            // fall through
          case 284: break;
          case 99: 
            { annotate(new City(), "IT_RA", true, true);
            } 
            // fall through
          case 285: break;
          case 100: 
            { annotate(new Country(), "CZ", true, true);
            } 
            // fall through
          case 286: break;
          case 101: 
            { annotate(new Country(), "RO", true, true);
            } 
            // fall through
          case 287: break;
          case 102: 
            { annotate(new City(), "IT_VE", true, true);
            } 
            // fall through
          case 288: break;
          case 103: 
            { annotate(new City(), "IT_VI", true, true);
            } 
            // fall through
          case 289: break;
          case 104: 
            { annotate(new City(), "IT_VT", true, true);
            } 
            // fall through
          case 290: break;
          case 105: 
            { annotate(new Region(), "IT_VDA", true, true);
            } 
            // fall through
          case 291: break;
          case 106: 
            { annotate(new Country(), "EE", true, true);
            } 
            // fall through
          case 292: break;
          case 107: 
            { annotate(new City(), "IT_CE", true, true);
            } 
            // fall through
          case 293: break;
          case 108: 
            { annotate(new City(), "IT_B832", true, true);
            } 
            // fall through
          case 294: break;
          case 109: 
            { annotate(new City(), "IT_CT", true, true);
            } 
            // fall through
          case 295: break;
          case 110: 
            { annotate(new City(), "IT_CR", true, true);
            } 
            // fall through
          case 296: break;
          case 111: 
            { annotate(new Country(), "HR", true, true);
            } 
            // fall through
          case 297: break;
          case 112: 
            { annotate(new City(), "IT_KR", true, true);
            } 
            // fall through
          case 298: break;
          case 113: 
            { annotate(new City(), "IT_CS", true, true);
            } 
            // fall through
          case 299: break;
          case 114: 
            { annotate(new Country(), "UA", true, true);
            } 
            // fall through
          case 300: break;
          case 115: 
            { annotate(new City(), "IT_TA", true, true);
            } 
            // fall through
          case 301: break;
          case 116: 
            { annotate(new City(), "IT_TV", true, true);
            } 
            // fall through
          case 302: break;
          case 117: 
            { annotate(new City(), "IT_TS", true, true);
            } 
            // fall through
          case 303: break;
          case 118: 
            { annotate(new Country(), "TR", true, true);
            } 
            // fall through
          case 304: break;
          case 119: 
            { annotate(new Region(), "IT_TOS", true, true);
            } 
            // fall through
          case 305: break;
          case 120: 
            { annotate(new City(), "IT_TP", true, true);
            } 
            // fall through
          case 306: break;
          case 121: 
            { annotate(new City(), "IT_IS", true, true);
            } 
            // fall through
          case 307: break;
          case 122: 
            { annotate(new Country(), "IS", true, true);
            } 
            // fall through
          case 308: break;
          case 123: 
            { annotate(new Country(), "IE", true, true);
            } 
            // fall through
          case 309: break;
          case 124: 
            { annotate(new City(), "IT_IM", true, true);
            } 
            // fall through
          case 310: break;
          case 125: 
            { annotate(new City(), "IT_MN", true, true);
            } 
            // fall through
          case 311: break;
          case 126: 
            { annotate(new City(), "IT_ME", true, true);
            } 
            // fall through
          case 312: break;
          case 127: 
            { annotate(new Region(), "IT_LIG", true, true);
            } 
            // fall through
          case 313: break;
          case 128: 
            { annotate(new City(), "IT_LI", true, true);
            } 
            // fall through
          case 314: break;
          case 129: 
            { annotate(new Country(), "FR", true, true);
            } 
            // fall through
          case 315: break;
          case 130: 
            { annotate(new City(), "IT_FE", true, true);
            } 
            // fall through
          case 316: break;
          case 131: 
            { annotate(new City(), "IT_FI", true, true);
            } 
            // fall through
          case 317: break;
          case 132: 
            { annotate(new Country(), "NO", true, true);
            } 
            // fall through
          case 318: break;
          case 133: 
            { annotate(new City(), "IT_BT", true, true);
            } 
            // fall through
          case 319: break;
          case 134: 
            { annotate(new City(), "IT_BR", true, true);
            } 
            // fall through
          case 320: break;
          case 135: 
            { annotate(new Country(), "BG", true, true);
            } 
            // fall through
          case 321: break;
          case 136: 
            { annotate(new Region(), "IT_SAR", true, true);
            } 
            // fall through
          case 322: break;
          case 137: 
            { annotate(new Country(), "CH", true, true);
            } 
            // fall through
          case 323: break;
          case 138: 
            { annotate(new City(), "IT_SR", true, true);
            } 
            // fall through
          case 324: break;
          case 139: 
            { annotate(new Country(), "SI", true, true);
            } 
            // fall through
          case 325: break;
          case 140: 
            { annotate(new City(), "IT_PC", true, true);
            } 
            // fall through
          case 326: break;
          case 141: 
            { annotate(new Region(), "IT_PIE", true, true);
            } 
            // fall through
          case 327: break;
          case 142: 
            { annotate(new City(), "IT_AV", true, true);
            } 
            // fall through
          case 328: break;
          case 143: 
            { annotate(new City(), "IT_GR", true, true);
            } 
            // fall through
          case 329: break;
          case 144: 
            { annotate(new Country(), "DE", true, true);
            } 
            // fall through
          case 330: break;
          case 145: 
            { annotate(new City(), "IT_L746", true, true);
            } 
            // fall through
          case 331: break;
          case 146: 
            { annotate(new City(), "IT_VC", true, true);
            } 
            // fall through
          case 332: break;
          case 147: 
            { annotate(new City(), "IT_CA", true, true);
            } 
            // fall through
          case 333: break;
          case 148: 
            { annotate(new City(), "IT_B745", true, true);
            } 
            // fall through
          case 334: break;
          case 149: 
            { annotate(new Region(), "IT_CAM", true, true);
            } 
            // fall through
          case 335: break;
          case 150: 
            { annotate(new Region(), "IT_CAL", true, true);
            } 
            // fall through
          case 336: break;
          case 151: 
            { annotate(new Country(), "HU", true, true);
            } 
            // fall through
          case 337: break;
          case 152: 
            { annotate(new Region(), "IT_TAA", true, true);
            } 
            // fall through
          case 338: break;
          case 153: 
            { annotate(new City(), "IT_E281", true, true);
            } 
            // fall through
          case 339: break;
          case 154: 
            { annotate(new City(), "IT_OR", true, true);
            } 
            // fall through
          case 340: break;
          case 155: 
            { annotate(new City(), "IT_MC", true, true);
            } 
            // fall through
          case 341: break;
          case 156: 
            { annotate(new Country(), "MD", true, true);
            } 
            // fall through
          case 342: break;
          case 157: 
            { annotate(new Country(), "LV", true, true);
            } 
            // fall through
          case 343: break;
          case 158: 
            { annotate(new Country(), "LT", true, true);
            } 
            // fall through
          case 344: break;
          case 159: 
            { addText(yytext()); 
	yybegin(lkn);
            } 
            // fall through
          case 345: break;
          case 160: 
            { annotate(new City(), "IT_BN", true, true);
            } 
            // fall through
          case 346: break;
          case 161: 
            { annotate(new City(), "IT_PN", true, true);
            } 
            // fall through
          case 347: break;
          case 162: 
            { annotate(new City(), "IT_AG", true, true);
            } 
            // fall through
          case 348: break;
          case 163: 
            { annotate(new City(), "IT_CZ", true, true);
            } 
            // fall through
          case 349: break;
          case 164: 
            { annotate(new City(), "IT_OG", true, true);
            } 
            // fall through
          case 350: break;
          case 165: 
            { annotate(new Country(), "MK", true, true);
            } 
            // fall through
          case 351: break;
          case 166: 
            { annotate(new Region(), "IT_LOM", true, true);
            } 
            // fall through
          case 352: break;
          case 167: 
            { annotate(new Country(), "DK", true, true);
            } 
            // fall through
          case 353: break;
          case 168: 
            { annotate(new City(), "IT_FR", true, true);
            } 
            // fall through
          case 354: break;
          case 169: 
            { annotate(new Country(), "FI", true, true);
            } 
            // fall through
          case 355: break;
          case 170: 
            { annotate(new City(), "IT_NN", true, true);
            } 
            // fall through
          case 356: break;
          case 171: 
            { annotate(new Region(), "IT_BAS", true, true);
            } 
            // fall through
          case 357: break;
          case 172: 
            { annotate(new Country(), "SK", true, true);
            } 
            // fall through
          case 358: break;
          case 173: 
            { annotate(new Country(), "PT", true, true);
            } 
            // fall through
          case 359: break;
          case 174: 
            { annotate(new Country(), "GB", true, true);
            } 
            // fall through
          case 360: break;
          case 175: 
            { annotate(new City(), "IT_CB", true, true);
            } 
            // fall through
          case 361: break;
          case 176: 
            { annotate(new Country(), "ME", true, true);
            } 
            // fall through
          case 362: break;
          case 177: 
            { annotate(new Country(), "BY", true, true);
            } 
            // fall through
          case 363: break;
          case 178: 
            { annotate(new Country(), "AZ", true, true);
            } 
            // fall through
          case 364: break;
          case 179: 
            { annotate(new City(), "IT_AL", true, true);
            } 
            // fall through
          case 365: break;
          case 180: 
            { annotate(new Country(), "LU", true, true);
            } 
            // fall through
          case 366: break;
          case 181: 
            { annotate(new City(), "IT_RE", true, true);
            } 
            // fall through
          case 367: break;
          case 182: 
            { annotate(new City(), "IT_VV", true, true);
            } 
            // fall through
          case 368: break;
          case 183: 
            { annotate(new City(), "IT_CL", true, true);
            } 
            // fall through
          case 369: break;
          case 184: 
            { annotate(new Country(), "LI", true, true);
            } 
            // fall through
          case 370: break;
          case 185: 
            { annotate(new City(), "IT_RC", true, true);
            } 
            // fall through
          case 371: break;
          case 186: 
            { annotate(new City(), "IT_L093", true, true);
            } 
            // fall through
          case 372: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Geos [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        Geos scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new Geos(reader);
          while ( !scanner.zzAtEOF ) scanner.yylex();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
