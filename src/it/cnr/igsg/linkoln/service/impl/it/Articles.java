/*******************************************************************************
 * Copyright (c) 2016-2021 Institute of Legal Information and Judicial Systems IGSG-CNR (formerly ITTIG-CNR)
 * 
 * This program and the accompanying materials  are made available under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either version 3 of the License, or (at your option)
 * any later version. 
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at: https://www.gnu.org/licenses/gpl-3.0.txt
 * Unless required by applicable law or agreed to in writing, software distributed under the Licence is 
 * distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and limitations under the Licence.
 *  
 * Authors: Lorenzo Bacci (IGSG-CNR)
 ******************************************************************************/
/* The following code was generated by JFlex 1.7.0 */

package it.cnr.igsg.linkoln.service.impl.it;

import java.io.IOException;
import java.io.StringReader;

import it.cnr.igsg.linkoln.entity.*;
import it.cnr.igsg.linkoln.service.*;

import it.cnr.igsg.linkoln.service.impl.Util;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>jflex/Articles.jflex</tt>
 */
public class Articles extends LinkolnAnnotationService {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int lkn = 2;
  public static final int readPartitionElementState = 4;
  public static final int readValueState = 6;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3, 3
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\14\1\2\1\111\1\112\1\1\22\0\1\77\5\0\1\6"+
    "\1\5\1\0\1\16\2\0\1\15\1\3\1\57\1\60\1\64\1\61"+
    "\1\63\1\56\1\56\1\56\1\62\1\62\1\62\1\62\1\17\1\13"+
    "\5\0\1\31\1\10\1\43\1\76\1\41\1\105\1\33\1\107\1\53"+
    "\1\105\1\102\1\70\1\66\1\7\1\55\1\12\1\72\1\35\1\26"+
    "\1\47\1\45\1\37\1\105\1\74\1\105\1\25\1\103\1\0\1\104"+
    "\1\110\1\4\1\5\1\30\1\22\1\42\1\75\1\40\1\27\1\32"+
    "\1\106\1\52\1\27\1\101\1\67\1\65\1\21\1\54\1\24\1\71"+
    "\1\34\1\23\1\46\1\44\1\36\1\27\1\73\1\27\1\20\12\0"+
    "\1\111\44\0\1\110\5\0\1\110\3\0\1\5\5\0\1\110\5\0"+
    "\1\27\1\27\4\27\1\0\1\27\1\50\1\50\2\27\1\27\1\27"+
    "\2\27\1\0\1\27\1\27\1\27\3\27\2\0\1\27\1\27\2\27"+
    "\3\0\1\27\1\27\4\27\1\0\1\27\1\50\1\50\2\27\1\27"+
    "\1\27\2\27\1\0\1\27\1\27\1\27\3\27\2\0\1\27\1\27"+
    "\2\27\53\0\1\27\1\27\6\0\2\51\66\0\1\27\1\27\4\0"+
    "\1\27\1\27\17\0\1\11\u1c88\0\1\27\1\27\216\0\2\27\42\0"+
    "\1\27\1\27\u0144\0\1\14\20\0\1\3\1\3\4\0\1\5\16\0"+
    "\1\111\1\111\u0100\0\1\100\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udee5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\6\0\4\1\2\2\3\3\1\4\1\3\12\5\1\6"+
    "\2\5\121\0\1\7\3\0\1\10\5\0\1\11\43\0"+
    "\1\4\1\0\1\4\7\0\1\4\12\0\1\10\1\0"+
    "\1\10\42\0\1\12\15\0\2\4\1\0\1\4\12\0"+
    "\1\13\40\0\5\14\2\0\2\14\33\0\2\15\3\0"+
    "\1\16\2\0\1\17\5\0\1\20\1\0\1\21\3\0"+
    "\1\22\127\0\1\4\4\0\1\4\3\0\1\23\110\0"+
    "\1\24\31\0\4\14\2\0\2\14\62\0\1\25\1\26"+
    "\136\0\3\14\1\0\4\14\2\0\1\14\56\0\1\14"+
    "\34\0\1\27\1\30\1\0\1\31\2\0\1\32\4\0"+
    "\1\33\1\0\1\34\102\0\2\24\23\0\3\14\103\0"+
    "\1\35\5\0\1\36\1\37\3\0\1\40\2\0\1\41"+
    "\1\0\1\42\152\0\3\14\1\0\1\14\3\0\1\14"+
    "\157\0\1\14\3\0\1\14\2\24\15\0\3\14\40\0"+
    "\1\43\1\44\223\0\1\14\3\0\1\14\250\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[1559];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\113\0\226\0\341\0\u012c\0\u0177\0\u01c2\0\u020d"+
    "\0\u0258\0\u02a3\0\u0258\0\u02ee\0\u0258\0\u0339\0\u0384\0\u03cf"+
    "\0\u041a\0\u0258\0\u0465\0\u04b0\0\u04fb\0\u0546\0\u0591\0\u05dc"+
    "\0\u0627\0\u0672\0\u06bd\0\u0708\0\u0753\0\u079e\0\u07e9\0\u0834"+
    "\0\u087f\0\u08ca\0\u0915\0\u0960\0\u01c2\0\u09ab\0\u09f6\0\u0a41"+
    "\0\u0a8c\0\u0ad7\0\u0b22\0\u0b6d\0\u0bb8\0\u0c03\0\u0c4e\0\u0c99"+
    "\0\u0ce4\0\u0d2f\0\u0d7a\0\u0dc5\0\u0e10\0\u0e5b\0\u0ea6\0\u0ef1"+
    "\0\u0f3c\0\u0f87\0\u0fd2\0\u101d\0\u1068\0\u10b3\0\u10fe\0\u1149"+
    "\0\u1194\0\u11df\0\u122a\0\u1275\0\u12c0\0\u130b\0\u1356\0\u13a1"+
    "\0\u13ec\0\u1437\0\u1482\0\u14cd\0\u1518\0\u1563\0\u15ae\0\u15f9"+
    "\0\u1644\0\u168f\0\u16da\0\u1725\0\u1770\0\u17bb\0\u1806\0\u1851"+
    "\0\u189c\0\u18e7\0\u1932\0\u197d\0\u19c8\0\u1a13\0\u1a5e\0\u1aa9"+
    "\0\u1af4\0\u1b3f\0\u1b8a\0\u1bd5\0\u1c20\0\u1c6b\0\u1cb6\0\u1d01"+
    "\0\u1d4c\0\u1d97\0\u1de2\0\u1e2d\0\u1e78\0\u1ec3\0\u1f0e\0\u0258"+
    "\0\u1f59\0\u1fa4\0\u1fef\0\u203a\0\u2085\0\u20d0\0\u0546\0\u211b"+
    "\0\u2166\0\u21b1\0\u21fc\0\u2247\0\u2292\0\u22dd\0\u2328\0\u2373"+
    "\0\u23be\0\u2409\0\u2454\0\u249f\0\u24ea\0\u2535\0\u2580\0\u25cb"+
    "\0\u2616\0\u2661\0\u26ac\0\u2661\0\u26f7\0\u2742\0\u278d\0\u27d8"+
    "\0\u2823\0\u286e\0\u28b9\0\u2904\0\u294f\0\u041a\0\u299a\0\u29e5"+
    "\0\u2a30\0\u2a7b\0\u2ac6\0\u2b11\0\u2b5c\0\u2ba7\0\u2bf2\0\u2c3d"+
    "\0\u2c88\0\u2cd3\0\u2d1e\0\u2d69\0\u2db4\0\u2dff\0\u2e4a\0\u2e95"+
    "\0\u2ee0\0\u2f2b\0\u2f76\0\u2fc1\0\u300c\0\u3057\0\u30a2\0\u30ed"+
    "\0\u3138\0\u3183\0\u31ce\0\u3219\0\u0258\0\u3264\0\u32af\0\u32fa"+
    "\0\u3345\0\u3390\0\u33db\0\u3426\0\u3471\0\u34bc\0\u3507\0\u3552"+
    "\0\u359d\0\u35e8\0\u3633\0\u367e\0\u36c9\0\u3714\0\u375f\0\u37aa"+
    "\0\u37f5\0\u3840\0\u388b\0\u38d6\0\u3921\0\u396c\0\u39b7\0\u3a02"+
    "\0\u3a4d\0\u3a98\0\u3ae3\0\u3b2e\0\u3b79\0\u3bc4\0\u3c0f\0\u0258"+
    "\0\u3c5a\0\u3ca5\0\u3cf0\0\u3d3b\0\u3d86\0\u3dd1\0\u3e1c\0\u3e67"+
    "\0\u3eb2\0\u3efd\0\u2ba7\0\u3f48\0\u3f93\0\u3fde\0\u4029\0\u4074"+
    "\0\u0258\0\u40bf\0\u410a\0\u4155\0\u41a0\0\u41eb\0\u4236\0\u4281"+
    "\0\u42cc\0\u4317\0\u4362\0\u0258\0\u43ad\0\u43f8\0\u4443\0\u448e"+
    "\0\u44d9\0\u4524\0\u456f\0\u45ba\0\u4605\0\u4650\0\u469b\0\u46e6"+
    "\0\u4731\0\u477c\0\u47c7\0\u4812\0\u485d\0\u48a8\0\u48f3\0\u493e"+
    "\0\u4989\0\u49d4\0\u4a1f\0\u4a6a\0\u4ab5\0\u4b00\0\u4b4b\0\u4b96"+
    "\0\u4be1\0\u4c2c\0\u4c77\0\u4cc2\0\u0258\0\u4d0d\0\u4d58\0\u4da3"+
    "\0\u4dee\0\u4e39\0\u4e84\0\u4ecf\0\u4f1a\0\u4ecf\0\u4f65\0\u4fb0"+
    "\0\u4ffb\0\u5046\0\u5091\0\u50dc\0\u5127\0\u5172\0\u51bd\0\u5208"+
    "\0\u5253\0\u529e\0\u52e9\0\u5334\0\u537f\0\u53ca\0\u5415\0\u5460"+
    "\0\u54ab\0\u54f6\0\u3fde\0\u5541\0\u558c\0\u55d7\0\u5622\0\u566d"+
    "\0\u0258\0\u56b8\0\u5703\0\u574e\0\u5799\0\u57e4\0\u582f\0\u587a"+
    "\0\u58c5\0\u5910\0\u595b\0\u59a6\0\u59f1\0\u5a3c\0\u5a87\0\u5ad2"+
    "\0\u5b1d\0\u5b68\0\u5bb3\0\u5bfe\0\u0258\0\u5c49\0\u5c94\0\u5cdf"+
    "\0\u5d2a\0\u5d75\0\u5dc0\0\u5e0b\0\u5e56\0\u5ea1\0\u5eec\0\u5f37"+
    "\0\u5f82\0\u5fcd\0\u6018\0\u6063\0\u60ae\0\u60f9\0\u6144\0\u618f"+
    "\0\u61da\0\u6225\0\u6270\0\u62bb\0\u6306\0\u6351\0\u639c\0\u63e7"+
    "\0\u6432\0\u647d\0\u64c8\0\u4d58\0\u4da3\0\u4dee\0\u6513\0\u655e"+
    "\0\u65a9\0\u4f1a\0\u65f4\0\u663f\0\u668a\0\u66d5\0\u6720\0\u676b"+
    "\0\u67b6\0\u6801\0\u684c\0\u6897\0\u68e2\0\u692d\0\u6978\0\u69c3"+
    "\0\u6a0e\0\u6a59\0\u6aa4\0\u6aef\0\u6b3a\0\u6b85\0\u6bd0\0\u6c1b"+
    "\0\u6c66\0\u6cb1\0\u6cfc\0\u6d47\0\u6d92\0\u6ddd\0\u6e28\0\u6e73"+
    "\0\u6ebe\0\u6f09\0\u6f54\0\u6f9f\0\u6fea\0\u7035\0\u7080\0\u70cb"+
    "\0\u7116\0\u7161\0\u71ac\0\u71f7\0\u7242\0\u728d\0\u72d8\0\u7323"+
    "\0\u736e\0\u73b9\0\u7404\0\u744f\0\u749a\0\u74e5\0\u7530\0\u757b"+
    "\0\u75c6\0\u7611\0\u765c\0\u76a7\0\u76f2\0\u773d\0\u7788\0\u77d3"+
    "\0\u781e\0\u7869\0\u78b4\0\u78ff\0\u794a\0\u7995\0\u79e0\0\u7a2b"+
    "\0\u7a76\0\u7ac1\0\u7b0c\0\u7b57\0\u7ba2\0\u7bed\0\u7c38\0\u7c83"+
    "\0\u7cce\0\u7d19\0\u7d64\0\u7daf\0\u7dfa\0\u7e45\0\u7e90\0\u7edb"+
    "\0\u7f26\0\u7f71\0\u7fbc\0\u8007\0\u8052\0\u809d\0\u80e8\0\u8133"+
    "\0\u817e\0\u81c9\0\u8214\0\u825f\0\u82aa\0\u82f5\0\u8340\0\u838b"+
    "\0\u83d6\0\u8421\0\u846c\0\u84b7\0\u8502\0\u854d\0\u8598\0\u85e3"+
    "\0\u862e\0\u8679\0\u86c4\0\u870f\0\u875a\0\u87a5\0\u87f0\0\u883b"+
    "\0\u8886\0\u88d1\0\u891c\0\u8967\0\u89b2\0\u89fd\0\u8a48\0\u8a93"+
    "\0\u8ade\0\u8b29\0\u8b74\0\u8bbf\0\u8c0a\0\u8c55\0\u0258\0\u8ca0"+
    "\0\u8ceb\0\u8d36\0\u8d81\0\u8dcc\0\u8e17\0\u8e62\0\u8ead\0\u8ef8"+
    "\0\u8f43\0\u8f8e\0\u8fd9\0\u9024\0\u906f\0\u90ba\0\u9105\0\u9150"+
    "\0\u919b\0\u91e6\0\u9231\0\u927c\0\u92c7\0\u9312\0\u935d\0\u93a8"+
    "\0\u93f3\0\u943e\0\u9489\0\u94d4\0\u951f\0\u956a\0\u95b5\0\u9600"+
    "\0\u95b5\0\u964b\0\u9696\0\u96e1\0\u972c\0\u9777\0\u97c2\0\u980d"+
    "\0\u9858\0\u98a3\0\u98ee\0\u9939\0\u9984\0\u99cf\0\u9a1a\0\u9a65"+
    "\0\u9ab0\0\u9afb\0\u9b46\0\u9b91\0\u9bdc\0\u9c27\0\u9c72\0\u9cbd"+
    "\0\u9d08\0\u9d53\0\u9d9e\0\u9de9\0\u9e34\0\u9e7f\0\u9eca\0\u9f15"+
    "\0\u9f60\0\u9fab\0\u9ff6\0\ua041\0\ua08c\0\ua0d7\0\ua122\0\ua16d"+
    "\0\ua1b8\0\ua203\0\ua24e\0\ua299\0\ua2e4\0\ua32f\0\ua37a\0\ua3c5"+
    "\0\ua410\0\ua45b\0\u0258\0\u0258\0\ua4a6\0\ua4f1\0\ua53c\0\ua587"+
    "\0\ua5d2\0\ua61d\0\ua668\0\ua6b3\0\ua6fe\0\ua749\0\ua794\0\ua7df"+
    "\0\ua82a\0\ua875\0\ua8c0\0\ua90b\0\ua956\0\ua9a1\0\ua9ec\0\uaa37"+
    "\0\uaa82\0\uaacd\0\uab18\0\uab63\0\uabae\0\uabf9\0\uac44\0\uac8f"+
    "\0\uacda\0\uad25\0\uad70\0\uadbb\0\uae06\0\uae51\0\uae9c\0\uaee7"+
    "\0\uaf32\0\uaf7d\0\uafc8\0\ub013\0\ub05e\0\ub0a9\0\ub0f4\0\ub13f"+
    "\0\ub18a\0\ub1d5\0\ub220\0\ub26b\0\ub2b6\0\ub301\0\ub34c\0\ub397"+
    "\0\ub3e2\0\ub42d\0\ub478\0\ub4c3\0\ub50e\0\ub559\0\ub5a4\0\ub5ef"+
    "\0\ub63a\0\ub685\0\ub6d0\0\ub71b\0\ub766\0\ub7b1\0\ub7fc\0\ub847"+
    "\0\ub892\0\ub8dd\0\ub928\0\ub973\0\ub9be\0\uba09\0\uba54\0\uba9f"+
    "\0\ubaea\0\ubb35\0\ubb80\0\ubbcb\0\ubc16\0\ubc61\0\ubcac\0\ubcf7"+
    "\0\ubd42\0\ubd8d\0\ubdd8\0\ube23\0\ube6e\0\ubeb9\0\ubf04\0\ubf4f"+
    "\0\ubf9a\0\ubfe5\0\uc030\0\uc07b\0\uc0c6\0\uc111\0\u6e28\0\uc15c"+
    "\0\uc1a7\0\uc1f2\0\uc23d\0\uc288\0\uc2d3\0\uc31e\0\uc369\0\uc3b4"+
    "\0\uc3ff\0\uc44a\0\uc495\0\uc4e0\0\uc52b\0\u943e\0\u9489\0\u94d4"+
    "\0\uc576\0\uc5c1\0\u9600\0\uc60c\0\uc657\0\uc6a2\0\uc6ed\0\uc738"+
    "\0\uc783\0\uc7ce\0\uc819\0\uc864\0\uc8af\0\uc8fa\0\uc945\0\uc990"+
    "\0\uc9db\0\uca26\0\uca71\0\uc1f2\0\ucabc\0\ucb07\0\ucb52\0\ucb9d"+
    "\0\ucbe8\0\ucc33\0\ucc7e\0\uccc9\0\ucd14\0\ucd5f\0\ucdaa\0\ucdf5"+
    "\0\uce40\0\uce8b\0\uced6\0\ucf21\0\ucf6c\0\ucfb7\0\ud002\0\ud04d"+
    "\0\ud098\0\ud0e3\0\ud12e\0\ud179\0\ud1c4\0\ud20f\0\ud25a\0\ud2a5"+
    "\0\ud2f0\0\ud33b\0\ud386\0\ud3d1\0\ud41c\0\ud467\0\ud4b2\0\ud4fd"+
    "\0\ud548\0\ud593\0\ud5de\0\ud629\0\ud674\0\ud6bf\0\ud70a\0\ud755"+
    "\0\u0258\0\u0258\0\ud7a0\0\u0258\0\ud7eb\0\ud836\0\u0258\0\ud881"+
    "\0\ud8cc\0\ud917\0\ud962\0\ud9ad\0\ud9f8\0\u0258\0\uda43\0\uda8e"+
    "\0\udad9\0\udb24\0\udb6f\0\udbba\0\udc05\0\udc50\0\udc9b\0\udce6"+
    "\0\udd31\0\udd7c\0\uddc7\0\u0258\0\ude12\0\ude5d\0\udea8\0\udef3"+
    "\0\udf3e\0\udf89\0\udfd4\0\ue01f\0\ue06a\0\ue0b5\0\ue100\0\ue14b"+
    "\0\ue196\0\ue1e1\0\ue22c\0\ue277\0\ue2c2\0\ue30d\0\ue358\0\ue3a3"+
    "\0\ue3ee\0\ue439\0\ue484\0\ue4cf\0\ue51a\0\ue565\0\ue5b0\0\ue5fb"+
    "\0\ue646\0\ue691\0\ue6dc\0\ue727\0\ue772\0\ue7bd\0\ue808\0\ue853"+
    "\0\ue89e\0\ue8e9\0\ue934\0\ue97f\0\ue9ca\0\uea15\0\uea60\0\ueaab"+
    "\0\ueaf6\0\ueb41\0\ueb8c\0\uebd7\0\uec22\0\uec6d\0\uecb8\0\ued03"+
    "\0\ubf04\0\ubf4f\0\ued4e\0\ued99\0\uede4\0\uee2f\0\uee7a\0\ueec5"+
    "\0\uef10\0\uef5b\0\uefa6\0\ueff1\0\uf03c\0\uf087\0\uc07b\0\uc0c6"+
    "\0\uf0d2\0\uf11d\0\uc15c\0\uf168\0\uf1b3\0\uf1fe\0\uf249\0\uf294"+
    "\0\uf2df\0\uf32a\0\uf375\0\uf3c0\0\uf40b\0\uf456\0\uf4a1\0\uf4ec"+
    "\0\uf537\0\uf582\0\uf5cd\0\uf618\0\uf663\0\uf6ae\0\uf6f9\0\uf744"+
    "\0\uf78f\0\uf7da\0\uf825\0\uf870\0\uf8bb\0\uf906\0\uf951\0\uf99c"+
    "\0\uf9e7\0\ufa32\0\ufa7d\0\ufac8\0\ufb13\0\ufb5e\0\ufba9\0\ufbf4"+
    "\0\ufc3f\0\ufc8a\0\ufcd5\0\ufd20\0\ufd6b\0\ufdb6\0\ufe01\0\ufe4c"+
    "\0\ufe97\0\ufee2\0\uff2d\0\uff78\0\uffc3\1\16\1\131\1\244"+
    "\1\357\1\u013a\1\u0185\1\u01d0\1\u021b\1\u0266\1\u02b1\1\u02fc"+
    "\1\u0347\1\u0392\1\u03dd\1\u0428\1\u0473\1\u04be\1\u0509\1\u0554"+
    "\1\u059f\1\u05ea\1\u0635\0\u0258\1\u0680\1\u06cb\1\u0716\1\u0761"+
    "\1\u07ac\0\u0258\0\u0258\1\u07f7\1\u0842\1\u088d\0\u0258\1\u08d8"+
    "\1\u0923\0\u0258\1\u096e\0\u0258\1\u09b9\1\u0a04\1\u0a4f\1\u0a9a"+
    "\1\u0ae5\1\u0b30\1\u0b7b\1\u0bc6\1\u0c11\1\u0c5c\1\u0ca7\1\u0cf2"+
    "\1\u0d3d\1\u0d88\1\u0dd3\1\u0e1e\1\u0e69\1\u0eb4\1\u0eff\1\u0f4a"+
    "\1\u0f95\1\u0fe0\1\u102b\1\u1076\1\u10c1\1\u110c\1\u1157\1\u11a2"+
    "\1\u11ed\1\u1238\1\u1283\1\u12ce\1\u1319\1\u1364\1\u13af\1\u13fa"+
    "\1\u1445\1\u1490\1\u14db\1\u1526\1\u1571\1\u15bc\1\u1607\1\u1652"+
    "\1\u169d\1\u16e8\1\u1733\1\u177e\1\u17c9\1\u1814\1\u185f\1\u18aa"+
    "\1\u18f5\1\u1940\1\u198b\1\u19d6\1\u1a21\1\u1a6c\1\u1ab7\1\u1b02"+
    "\1\u1b4d\1\u1b98\1\u1be3\1\u1c2e\1\u1c79\1\u1cc4\1\u1d0f\1\u1d5a"+
    "\1\u1da5\1\u1df0\1\u1e3b\1\u1e86\1\u1ed1\1\u1f1c\1\u1f67\1\u1fb2"+
    "\1\u1ffd\1\u2048\1\u2093\1\u20de\1\u2129\1\u2174\1\u21bf\1\u220a"+
    "\1\u2255\0\uf249\0\uf294\1\u22a0\1\u22eb\1\u2336\1\u2381\1\u23cc"+
    "\1\u2417\1\u2462\1\u24ad\1\u24f8\1\u2543\1\u258e\1\u25d9\1\u2624"+
    "\1\u266f\1\u26ba\1\u2705\1\u2750\1\u279b\1\u27e6\1\u2831\1\u287c"+
    "\1\u28c7\1\u2912\1\u295d\1\u29a8\1\u29f3\1\u2a3e\1\u2a89\1\u2ad4"+
    "\1\u2b1f\1\u2b6a\1\u2bb5\1\u2c00\1\u2c4b\1\u2c96\1\u2ce1\1\u2d2c"+
    "\1\u2d77\1\u2dc2\1\u2e0d\1\u2e58\1\u2ea3\1\u2eee\1\u2f39\1\u2f84"+
    "\1\u2fcf\1\u301a\1\u3065\1\u30b0\1\u30fb\1\u3146\1\u3191\1\u31dc"+
    "\1\u3227\1\u3272\1\u32bd\1\u3308\1\u3353\1\u339e\1\u33e9\1\u3434"+
    "\1\u347f\1\u34ca\1\u3515\1\u3560\1\u35ab\1\u35f6\1\u3641\1\u368c"+
    "\1\u36d7\1\u3722\1\u376d\1\u37b8\1\u3803\1\u384e\1\u3899\1\u38e4"+
    "\1\u392f\1\u397a\1\u39c5\1\u3a10\1\u3a5b\1\u3aa6\1\u3af1\1\u0eff"+
    "\1\u3b3c\1\u3b87\1\u3bd2\1\u3c1d\1\u3c68\1\u3cb3\1\u3cfe\1\u3d49"+
    "\1\u3d94\1\u3ddf\1\u3e2a\1\u3e75\1\u3ec0\1\u3f0b\1\u3f56\1\u3fa1"+
    "\1\u3fec\1\u4037\1\u4082\1\u40cd\1\u4118\1\u4163\1\u41ae\1\u41f9"+
    "\1\u4244\1\u428f\1\u42da\1\u4325\1\u4370\1\u43bb\1\u4406\1\u4451"+
    "\1\u449c\1\u44e7\1\u4532\1\u457d\1\u45c8\1\u4613\1\u465e\1\u46a9"+
    "\1\u46f4\1\u473f\1\u478a\1\u47d5\1\u4820\1\u486b\1\u48b6\1\u4901"+
    "\1\u494c\1\u4997\1\u49e2\1\u4a2d\1\u4a78\1\u4ac3\1\u4b0e\1\u4b0e"+
    "\1\u4b59\1\u4ba4\1\u4bef\1\u2705\1\u2750\1\u4c3a\1\u4c85\1\u4cd0"+
    "\1\u4d1b\1\u4d66\1\u4db1\1\u4dfc\1\u287c\1\u28c7\1\u4e47\1\u295d"+
    "\1\u4e92\1\u4edd\1\u4f28\1\u4f73\1\u4fbe\1\u5009\1\u5054\1\u509f"+
    "\1\u50ea\1\u5135\1\u5180\1\u51cb\1\u5216\1\u5261\1\u52ac\1\u52f7"+
    "\1\u5342\1\u538d\1\u53d8\1\u5423\1\u546e\1\u54b9\1\u5504\1\u554f"+
    "\1\u559a\1\u55e5\1\u5630\1\u567b\1\u56c6\1\u5711\1\u575c\1\u57a7"+
    "\1\u57f2\1\u583d\1\u5888\1\u58d3\1\u591e\0\u0258\0\u0258\1\u5969"+
    "\1\u59b4\1\u59ff\1\u5a4a\1\u5a95\1\u5ae0\1\u5b2b\1\u5b76\1\u5bc1"+
    "\1\u5c0c\1\u5c57\1\u5ca2\1\u5ced\1\u5d38\1\u3bd2\1\u5d83\1\u5dce"+
    "\1\u5e19\1\u5e64\1\u5eaf\1\u5efa\1\u5f45\1\u5f90\1\u5fdb\1\u6026"+
    "\1\u6071\1\u60bc\1\u6107\1\u6152\1\u619d\1\u61e8\1\u6233\1\u627e"+
    "\1\u62c9\1\u6314\1\u635f\1\u63aa\1\u63f5\1\u6440\1\u648b\1\u64d6"+
    "\1\u6521\1\u656c\1\u65b7\1\u6602\1\u664d\1\u6698\1\u66e3\1\u672e"+
    "\1\u6779\1\u67c4\1\u680f\1\u685a\1\u68a5\1\u68f0\0\uc2d3\1\u693b"+
    "\1\u6986\1\u69d1\1\u6a1c\1\u6a67\1\u6ab2\1\u6afd\1\u6b48\1\u6b93"+
    "\1\u6bde\1\u6c29\1\u6c74\1\u6cbf\1\u4f73\1\u4fbe\1\u6d0a\1\u6d55"+
    "\1\u6da0\1\u6deb\1\u6e36\1\u6e81\1\u6ecc\1\u6f17\1\u6f62\1\u6fad"+
    "\1\u6ff8\1\u7043\1\u708e\1\u70d9\1\u7124\1\u716f\1\u71ba\1\u7205"+
    "\1\u7250\1\u729b\1\u72e6\1\u7331\1\u737c\1\u73c7\1\u7412\1\u745d"+
    "\1\u74a8\1\u74f3\1\u753e\1\u7589\1\u75d4\1\u761f\1\u766a\1\u76b5"+
    "\1\u7700\1\u774b\1\u7796\1\u77e1\1\u782c\1\u7877\1\u78c2\1\u790d"+
    "\1\u7958\1\u79a3\1\u79ee\1\u7a39\1\u7a84\1\u7acf\1\u7b1a\1\u7b65"+
    "\1\u7bb0\1\u7bfb\1\u7c46\1\u7c91\1\u7cdc\1\u7d27\1\u7d72\1\u7dbd"+
    "\1\u7e08\1\u7e53\1\u7e9e\1\u7ee9\1\u7f34\1\u7f7f\1\u7fca\1\u8015"+
    "\1\u8060\1\u80ab\1\u80f6\1\u8141\1\u818c\1\u81d7\1\u8222\1\u826d"+
    "\1\u82b8\1\u8303\1\u834e\1\u834e\1\u8399\1\u83e4\1\u842f\1\u847a"+
    "\1\u84c5\1\u8510\1\u855b\1\u85a6\1\u85f1\1\u863c\1\u8687\1\u86d2"+
    "\1\u871d\1\u8768\1\u87b3\1\u87fe\1\u8849\1\u8894\1\u88df\1\u892a"+
    "\1\u8975\1\u89c0\1\u8a0b\1\u8a56\1\u8aa1\1\u8aec\1\u8b37\1\u8b82"+
    "\1\u8bcd\1\u8c18\1\u8c63\1\u8cae\1\u8cf9\1\u8d44\1\u8d8f\1\u8dda"+
    "\1\u8e25\1\u8e70\1\u8ebb\1\u8f06\1\u8f51\1\u8f9c\1\u8fe7\1\u9032"+
    "\1\u907d\1\u90c8\1\u9113\1\u915e\1\u91a9\1\u91f4\1\u923f\1\u928a"+
    "\1\u92d5\1\u9320\1\u936b\1\u93b6\1\u9401\1\u944c\1\u9497\1\u94e2"+
    "\1\u952d\1\u9578\1\u95c3\1\u960e\1\u9659\1\u96a4\1\u96ef\1\u973a"+
    "\1\u9785\1\u97d0\1\u981b\1\u9866\1\u98b1\1\u98fc\1\u9947\1\u9992"+
    "\1\u99dd\1\u9a28\1\u9a73\1\u9abe\1\u9b09\1\u9b54\1\u9b9f\1\u9bea"+
    "\1\u9c35\1\u9c80\1\u9ccb\1\u9d16\1\u9d61\1\u9dac\1\u9df7\1\u9e42"+
    "\1\u9e8d\1\u9ed8\1\u9f23\1\u9f6e\1\u9fb9\1\ua004\1\ua04f\1\ua09a"+
    "\1\ua0e5\1\ua130\1\ua17b\1\ua1c6\1\ua211\1\ua25c\1\ua2a7\1\ua2f2"+
    "\1\ua33d\1\ua388\1\ua3d3\1\ua41e\1\ua469\1\ua4b4\1\ua4ff\1\ua54a"+
    "\1\ua595\1\ua5e0\1\ua62b\1\ua676\1\ua6c1\1\ua70c\1\ua757\1\ua7a2"+
    "\1\ua7ed\1\ua838\1\ua883\1\ua8ce\1\ua919\1\ua964\1\ua9af\1\ua9fa"+
    "\1\uaa45\1\uaa90\1\uaadb\1\uab26\1\uab71\1\uabbc\1\uac07\1\uac52"+
    "\1\uac9d\1\uace8\1\uad33\1\uad7e\1\uadc9\1\uae14\1\uae5f\1\uaeaa"+
    "\1\uaef5\1\uaf40\1\uaf8b\1\uafd6\1\ub021\1\ub06c\1\ub0b7\1\ub102"+
    "\1\ub14d\1\ub198\1\ub1e3\1\ub22e\1\ub279\1\ub2c4\1\ub30f\1\ub35a"+
    "\1\ub3a5\1\ub3f0\1\ub43b\1\ub486\1\ub4d1\1\ub51c\1\ub567";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1559];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\7\1\10\5\7\2\11\1\7\1\11\5\7\31\11"+
    "\1\7\5\11\2\7\16\11\2\7\2\11\1\12\1\7"+
    "\3\11\3\7\103\13\1\14\7\13\30\15\2\16\6\15"+
    "\2\17\14\15\1\20\2\15\4\20\10\15\2\21\14\15"+
    "\7\22\1\23\1\24\1\25\7\22\1\23\1\24\1\25"+
    "\2\22\1\25\1\22\2\26\4\22\2\27\2\30\2\22"+
    "\2\31\2\32\4\22\2\33\1\34\2\22\4\34\4\22"+
    "\2\35\2\22\2\36\14\22\1\37\1\40\5\37\2\0"+
    "\1\37\1\0\5\37\31\0\1\37\5\0\2\37\16\0"+
    "\2\37\2\0\2\37\3\0\3\37\1\41\2\0\25\41"+
    "\1\42\57\41\1\42\32\0\2\43\6\0\2\44\53\0"+
    "\1\45\25\0\2\43\6\0\2\44\214\0\2\43\6\0"+
    "\2\44\25\0\2\46\102\0\1\47\33\0\2\50\3\0"+
    "\1\51\5\0\1\50\15\0\2\52\2\53\13\0\3\50"+
    "\2\0\1\20\2\0\4\20\2\0\2\54\6\0\1\50"+
    "\12\0\1\50\73\0\2\55\17\0\2\56\2\57\1\0"+
    "\1\60\1\61\1\62\1\63\2\0\1\56\4\0\1\61"+
    "\1\62\1\63\2\0\1\63\7\0\2\64\2\65\2\0"+
    "\2\66\2\67\4\0\2\70\1\20\2\0\4\20\4\0"+
    "\2\71\2\0\2\72\1\56\12\0\1\56\30\0\2\73"+
    "\135\0\2\74\106\0\3\75\77\0\2\76\105\0\2\77"+
    "\126\0\3\100\132\0\2\101\25\0\1\102\11\0\1\102"+
    "\131\0\2\103\113\0\2\104\125\0\1\34\2\0\4\34"+
    "\72\0\2\105\105\0\2\106\2\0\2\107\75\0\2\110"+
    "\6\0\2\111\53\0\1\37\25\0\2\110\6\0\2\111"+
    "\60\0\1\112\10\0\1\113\1\112\3\0\1\113\10\0"+
    "\2\114\6\0\2\115\15\0\2\116\6\0\2\117\23\0"+
    "\1\112\10\0\1\113\1\112\3\0\1\113\10\0\2\114"+
    "\6\0\2\115\6\0\1\120\2\0\1\120\1\121\1\120"+
    "\1\122\2\116\6\0\2\117\50\0\2\123\150\0\2\124"+
    "\116\0\3\125\77\0\2\126\23\0\2\50\3\0\1\51"+
    "\5\0\1\50\41\0\1\20\2\0\4\20\12\0\1\50"+
    "\12\0\1\50\7\0\1\127\11\0\1\127\160\0\2\130"+
    "\70\0\2\131\44\0\2\50\3\0\1\51\5\0\1\50"+
    "\41\0\1\20\2\0\4\20\2\0\2\132\6\0\1\50"+
    "\12\0\1\50\1\0\2\55\3\0\1\133\5\0\1\55"+
    "\13\0\2\134\45\0\1\55\12\0\1\55\1\0\2\56"+
    "\2\57\1\0\1\60\1\61\1\62\1\63\2\0\1\56"+
    "\4\0\1\61\1\62\1\63\2\0\1\63\7\0\2\64"+
    "\2\65\2\0\2\66\2\67\4\0\2\70\13\0\2\71"+
    "\2\0\2\72\1\56\12\0\1\56\1\0\2\57\3\0"+
    "\1\135\1\136\1\62\1\137\2\0\1\57\4\0\1\136"+
    "\1\62\1\137\2\0\1\137\7\0\2\64\4\0\2\66"+
    "\2\67\4\0\2\70\13\0\2\71\2\0\2\72\1\57"+
    "\12\0\1\57\7\0\1\140\11\0\1\140\145\0\2\141"+
    "\106\0\3\142\77\0\2\143\122\0\3\144\40\0\2\145"+
    "\3\0\1\146\2\0\1\147\2\0\1\145\6\0\1\147"+
    "\2\0\1\147\46\0\3\145\12\0\1\145\7\0\1\150"+
    "\11\0\1\150\131\0\2\151\113\0\2\152\113\0\2\153"+
    "\105\0\2\154\2\0\2\155\46\0\2\50\3\0\1\51"+
    "\5\0\1\50\15\0\2\52\15\0\3\50\2\0\1\20"+
    "\2\0\4\20\2\0\2\54\6\0\1\50\12\0\1\50"+
    "\7\0\1\156\11\0\1\156\14\0\2\157\64\0\1\160"+
    "\11\0\1\160\2\0\1\160\76\0\1\161\11\0\1\161"+
    "\40\0\2\162\4\0\2\163\64\0\2\164\105\0\2\165"+
    "\50\0\2\101\3\0\1\166\5\0\1\101\13\0\2\167"+
    "\45\0\1\101\12\0\1\101\36\0\2\170\35\0\2\171"+
    "\50\0\2\172\123\0\2\173\73\0\2\174\17\0\3\175"+
    "\101\0\2\176\123\0\2\177\71\0\2\200\150\0\2\201"+
    "\72\0\2\202\71\0\2\203\105\0\2\204\70\0\1\205"+
    "\1\0\1\206\7\0\1\205\1\0\1\206\2\0\1\206"+
    "\5\0\2\207\126\0\3\210\46\0\1\211\11\0\1\211"+
    "\72\0\4\212\6\0\1\213\2\212\43\0\1\214\1\0"+
    "\1\214\13\0\1\212\12\0\1\212\1\0\4\212\6\0"+
    "\1\213\2\212\43\0\1\214\15\0\1\212\12\0\1\212"+
    "\61\0\1\214\1\0\1\214\75\0\2\215\44\0\2\124"+
    "\3\0\1\216\5\0\1\124\13\0\2\43\45\0\1\124"+
    "\12\0\1\124\7\0\1\217\11\0\1\217\171\0\3\220"+
    "\20\0\1\221\11\0\1\221\141\0\3\50\40\0\2\222"+
    "\3\0\1\223\5\0\1\222\13\0\2\73\14\0\2\224"+
    "\1\0\3\225\2\0\1\20\1\222\1\0\4\20\10\0"+
    "\2\226\1\222\12\0\1\222\5\0\1\50\22\0\2\50"+
    "\6\0\2\50\12\0\2\50\44\0\1\227\11\0\1\227"+
    "\125\0\2\53\64\0\1\230\11\0\1\230\145\0\2\231"+
    "\75\0\2\232\61\0\1\233\11\0\1\233\77\0\1\234"+
    "\11\0\1\234\14\0\2\235\64\0\1\236\11\0\1\236"+
    "\2\0\1\236\76\0\1\237\11\0\1\237\5\0\2\240"+
    "\31\0\2\241\4\0\2\242\60\0\2\243\50\0\2\145"+
    "\3\0\1\146\2\0\1\147\2\0\1\145\6\0\1\147"+
    "\2\0\1\147\50\0\1\145\12\0\1\145\7\0\1\244"+
    "\11\0\1\244\131\0\2\245\107\0\2\246\35\0\2\247"+
    "\50\0\2\250\123\0\2\235\73\0\2\251\17\0\3\252"+
    "\101\0\2\253\123\0\2\150\106\0\3\254\110\0\3\255"+
    "\2\256\103\0\2\257\103\0\2\260\122\0\3\261\21\0"+
    "\2\262\62\0\2\263\1\0\3\264\3\0\1\265\104\0"+
    "\3\266\46\0\1\267\11\0\1\267\142\0\3\270\77\0"+
    "\2\271\107\0\2\272\35\0\2\273\1\274\64\0\3\275"+
    "\2\276\103\0\2\277\52\0\1\300\11\0\1\300\142\0"+
    "\3\301\75\0\2\302\35\0\2\303\62\0\2\304\44\0"+
    "\2\201\3\0\1\305\5\0\1\201\13\0\2\110\45\0"+
    "\1\201\12\0\1\201\7\0\1\214\11\0\1\214\131\0"+
    "\2\306\117\0\2\307\114\0\3\310\77\0\2\311\101\0"+
    "\2\310\72\0\1\312\11\0\1\312\2\0\1\312\5\0"+
    "\2\313\4\0\2\314\2\0\2\315\117\0\2\316\36\0"+
    "\4\212\6\0\1\213\2\212\61\0\1\212\12\0\1\212"+
    "\12\0\1\317\11\0\1\317\67\0\2\320\3\0\1\321"+
    "\5\0\1\320\31\0\2\322\1\0\3\323\2\0\1\324"+
    "\1\320\1\0\4\324\10\0\2\325\1\320\12\0\1\320"+
    "\7\0\1\326\11\0\1\326\110\0\1\327\102\0\1\330"+
    "\11\0\1\330\102\0\1\331\11\0\1\331\2\0\1\331"+
    "\65\0\2\222\3\0\1\223\5\0\1\222\13\0\2\73"+
    "\24\0\1\20\2\0\4\20\10\0\2\226\1\222\12\0"+
    "\1\222\7\0\1\332\11\0\1\332\72\0\2\222\3\0"+
    "\1\223\5\0\1\222\13\0\2\73\24\0\1\20\1\222"+
    "\1\0\4\20\10\0\2\226\1\222\12\0\1\222\42\0"+
    "\2\333\57\0\1\334\11\0\1\334\100\0\1\335\11\0"+
    "\1\335\77\0\1\253\11\0\1\253\14\0\2\235\65\0"+
    "\1\237\11\0\1\237\40\0\2\241\4\0\2\242\27\0"+
    "\1\336\11\0\1\336\2\0\1\336\126\0\2\337\5\0"+
    "\3\340\110\0\3\341\2\342\36\0\2\343\3\0\1\344"+
    "\1\345\1\0\1\147\2\0\1\343\1\0\1\346\2\0"+
    "\1\345\1\0\1\147\2\0\1\147\11\0\2\65\35\0"+
    "\1\343\12\0\1\343\46\0\2\242\75\0\2\347\10\0"+
    "\2\350\11\0\1\351\73\0\2\352\122\0\3\341\21\0"+
    "\2\247\65\0\3\353\47\0\1\354\11\0\1\354\122\0"+
    "\2\240\130\0\3\154\77\0\2\154\52\0\2\343\3\0"+
    "\1\344\1\345\1\0\1\147\2\0\1\343\1\0\1\346"+
    "\2\0\1\345\1\0\1\147\2\0\1\147\7\0\2\246"+
    "\2\65\33\0\2\247\1\355\12\0\1\343\46\0\2\67"+
    "\52\0\1\356\11\0\1\356\142\0\3\340\77\0\2\357"+
    "\111\0\2\360\146\0\2\361\65\0\3\362\21\0\2\363"+
    "\103\0\2\364\62\0\2\365\111\0\2\366\130\0\1\265"+
    "\75\0\2\367\107\0\2\370\61\0\1\371\11\0\1\371"+
    "\132\0\2\372\111\0\2\373\120\0\3\374\77\0\2\375"+
    "\146\0\2\273\54\0\2\376\146\0\2\377\54\0\2\u0100"+
    "\107\0\2\u0101\31\0\2\u0102\2\0\2\u0103\54\0\2\u0104"+
    "\122\0\3\u0105\77\0\2\u0106\52\0\2\u0107\3\0\1\u0108"+
    "\5\0\1\u0107\31\0\2\u0109\1\0\3\u010a\2\0\1\u010b"+
    "\1\u0107\1\0\4\u010b\10\0\2\u010c\1\u0107\12\0\1\u0107"+
    "\7\0\1\u010d\11\0\1\u010d\137\0\2\214\111\0\2\u010e"+
    "\107\0\2\u010f\56\0\1\214\11\0\1\214\2\0\1\214"+
    "\124\0\2\u0110\63\0\1\214\11\0\1\214\126\0\2\u0111"+
    "\117\0\2\206\105\0\2\206\60\0\1\u0112\11\0\1\u0112"+
    "\2\0\1\u0112\65\0\2\320\3\0\1\321\5\0\1\320"+
    "\41\0\1\324\2\0\4\324\10\0\2\325\1\320\12\0"+
    "\1\320\7\0\1\u0113\11\0\1\u0113\72\0\2\320\3\0"+
    "\1\321\5\0\1\320\41\0\1\324\1\320\1\0\4\324"+
    "\10\0\2\325\1\320\12\0\1\320\42\0\2\u0114\47\0"+
    "\1\u0115\1\u0116\1\u0117\2\u0118\1\u0115\1\u0119\1\u011a\1\u011b"+
    "\1\u011c\1\0\1\u0115\1\u0117\1\u011d\2\u0115\1\0\1\u011a"+
    "\1\u011b\1\u011e\2\0\1\u011e\7\0\2\u011f\2\u0120\2\0"+
    "\2\u0121\2\u0122\1\0\1\u0115\2\0\2\u0123\1\324\2\u0115"+
    "\4\324\4\0\2\u0124\2\0\2\u0125\1\u0117\1\u0115\2\0"+
    "\2\u0115\3\0\2\u0115\1\u0117\30\0\2\u0126\71\0\1\u0127"+
    "\11\0\1\u0127\74\0\1\u0128\2\0\2\u0128\1\0\1\u0128"+
    "\12\0\2\u0128\2\0\1\u0128\1\0\1\u0128\1\0\1\u0128"+
    "\1\0\1\u0128\1\0\1\u0128\1\0\1\u0128\1\0\1\u0128"+
    "\1\0\1\u0128\3\0\1\u0128\1\0\1\u0128\10\0\1\u0128"+
    "\1\0\1\u0128\1\0\1\u0128\1\0\1\u0128\1\0\1\u0128"+
    "\3\0\1\u0128\2\0\1\u0128\1\0\1\u0128\15\0\1\u0129"+
    "\11\0\1\u0129\76\0\1\u012a\11\0\1\u012a\144\0\2\u012b"+
    "\46\0\1\u012c\11\0\1\u012c\2\0\1\u012c\75\0\1\u012d"+
    "\11\0\1\u012d\2\0\1\u012d\76\0\1\u012e\11\0\1\u012e"+
    "\174\0\2\u012f\43\0\2\142\111\0\2\u0130\146\0\2\247"+
    "\23\0\1\u0131\11\0\1\u0131\145\0\2\u0132\36\0\2\u0133"+
    "\3\0\1\u0134\1\345\1\0\1\147\2\0\1\u0133\4\0"+
    "\1\345\1\0\1\147\2\0\1\147\11\0\2\65\35\0"+
    "\1\u0133\12\0\1\u0133\57\0\1\351\73\0\2\u0135\140\0"+
    "\2\236\62\0\2\u0136\62\0\1\u0137\11\0\1\u0137\2\0"+
    "\1\u0137\65\0\2\343\3\0\1\344\1\345\1\0\1\147"+
    "\2\0\1\343\1\0\1\346\2\0\1\345\1\0\1\147"+
    "\2\0\1\147\11\0\2\65\33\0\2\247\1\343\12\0"+
    "\1\343\36\0\2\246\31\0\2\u0138\2\0\2\247\25\0"+
    "\1\u0139\11\0\1\u0139\2\0\1\u0139\75\0\1\u013a\11\0"+
    "\1\u013a\2\0\1\u013a\124\0\2\u013b\111\0\2\u013c\111\0"+
    "\2\u013d\62\0\1\u013e\11\0\1\u013e\2\0\1\u013e\126\0"+
    "\2\u013f\123\0\2\u0140\46\0\1\u0141\11\0\1\u0141\2\0"+
    "\1\u0141\75\0\1\u0142\11\0\1\u0142\2\0\1\u0142\135\0"+
    "\3\u0143\110\0\3\u0144\101\0\2\u0145\111\0\2\u0146\60\0"+
    "\1\u0147\11\0\1\u0147\2\0\1\u0147\124\0\2\u0148\105\0"+
    "\2\u0149\126\0\3\u014a\103\0\2\u014b\105\0\2\u014c\62\0"+
    "\1\u014d\11\0\1\u014d\2\0\1\u014d\126\0\2\u014e\111\0"+
    "\2\u014f\50\0\2\u0107\3\0\1\u0108\5\0\1\u0107\41\0"+
    "\1\u010b\2\0\4\u010b\10\0\2\u010c\1\u0107\12\0\1\u0107"+
    "\7\0\1\u0150\11\0\1\u0150\72\0\2\u0107\3\0\1\u0108"+
    "\5\0\1\u0107\41\0\1\u010b\1\u0107\1\0\4\u010b\10\0"+
    "\2\u010c\1\u0107\12\0\1\u0107\42\0\2\u0151\50\0\2\u0152"+
    "\2\u0153\1\0\1\u0154\1\u0155\1\u0156\1\u0157\2\0\1\u0152"+
    "\1\u0158\3\0\1\u0155\1\u0156\1\u0157\2\0\1\u0157\7\0"+
    "\2\u0159\2\u015a\2\0\2\u015b\2\u015c\4\0\2\u015d\1\u010b"+
    "\2\0\4\u010b\4\0\2\u015e\2\0\2\u015f\1\u0152\12\0"+
    "\1\u0152\30\0\2\u0160\71\0\1\u0161\11\0\1\u0161\144\0"+
    "\2\214\126\0\2\214\27\0\1\u0162\11\0\1\u0162\12\0"+
    "\2\u0163\2\u0164\2\u0165\2\u0166\2\u0167\2\u0168\140\0\2\214"+
    "\24\0\1\u0169\11\0\1\u0169\100\0\1\u016a\11\0\1\u016a"+
    "\144\0\2\u016b\36\0\1\u016c\1\u0117\2\u016d\1\0\1\u016e"+
    "\1\u016f\1\u011b\1\u0170\1\u0171\1\0\1\u016c\1\u0172\3\0"+
    "\1\u016f\1\u011b\1\u0170\1\u0171\1\0\1\u0170\7\0\2\u0173"+
    "\2\u0120\2\0\2\u0174\2\u0175\4\0\2\u0176\1\u0177\2\0"+
    "\1\u0178\1\u0177\1\u0179\1\324\4\0\2\u017a\2\0\2\u017b"+
    "\1\u016c\12\0\1\u016c\1\0\2\u016c\2\u016d\1\0\1\u016e"+
    "\1\u016f\1\u011b\1\u0170\1\u0171\1\0\1\u016c\1\u0172\3\0"+
    "\1\u016f\1\u011b\1\u0170\1\u0171\1\0\1\u0170\7\0\2\u0173"+
    "\2\u0120\2\0\2\u0174\2\u0175\4\0\2\u0176\1\u0177\2\0"+
    "\1\u0178\1\u0177\1\u0179\1\324\4\0\2\u017a\2\0\2\u017b"+
    "\1\u016c\12\0\1\u016c\1\0\2\u016d\2\u0172\1\0\1\u017c"+
    "\1\u017d\1\u011b\1\u017e\1\u0171\1\0\1\u016d\1\u0172\3\0"+
    "\1\u017d\1\u011b\1\u017e\1\u0171\1\0\1\u017e\7\0\2\u0173"+
    "\4\0\2\u0174\2\u0175\4\0\2\u0176\1\u0177\2\0\1\u0178"+
    "\1\u0177\1\u0179\1\324\4\0\2\u017a\2\0\2\u017b\1\u016d"+
    "\12\0\1\u016d\7\0\1\u017f\11\0\1\u017f\145\0\2\u0180"+
    "\106\0\3\u0181\77\0\2\u0182\52\0\4\u0172\1\0\1\u0183"+
    "\1\u0184\1\0\1\u0185\1\u0171\1\0\2\u0172\3\0\1\u0184"+
    "\1\0\1\u0185\1\u0171\1\0\1\u0185\7\0\2\u0186\4\0"+
    "\2\u0187\2\u0188\4\0\2\u0189\1\u0177\2\0\1\u0178\1\u0177"+
    "\1\u0179\1\324\4\0\2\u018a\2\0\2\u018b\1\u0172\12\0"+
    "\1\u0172\51\0\3\u018c\40\0\2\u018d\3\0\1\u018e\2\0"+
    "\1\u018f\2\0\1\u018d\6\0\1\u018f\2\0\1\u018f\27\0"+
    "\1\u0190\2\0\4\u0190\10\0\2\u0191\1\u018d\12\0\1\u018d"+
    "\7\0\1\u0192\11\0\1\u0192\131\0\2\u0193\113\0\2\u0194"+
    "\113\0\2\u0195\105\0\2\u0196\2\0\2\u0197\46\0\2\u0198"+
    "\3\0\1\u0199\5\0\1\u0198\15\0\2\u019a\15\0\3\u0198"+
    "\2\0\1\u019b\2\0\4\u019b\2\0\2\u019c\6\0\1\u0198"+
    "\12\0\1\u0198\11\0\1\u019d\11\0\1\u019d\2\0\1\u019d"+
    "\70\0\1\u0128\2\0\2\u0128\1\0\1\u0128\4\0\1\u019e"+
    "\5\0\2\u0128\2\0\1\u0128\1\0\1\u0128\1\0\1\u0128"+
    "\1\0\1\u0128\1\0\1\u0128\1\0\1\u0128\1\0\1\u0128"+
    "\1\0\1\u0128\3\0\1\u0128\1\0\1\u0128\10\0\1\u0128"+
    "\1\0\1\u0128\1\0\1\u0128\1\0\1\u0128\1\0\1\u0128"+
    "\3\0\1\u0128\2\0\1\u0128\1\0\1\u0128\16\0\1\50"+
    "\110\0\1\u019f\11\0\1\u019f\2\0\1\u019f\153\0\2\u01a0"+
    "\34\0\1\u01a1\11\0\1\u01a1\100\0\1\u01a2\11\0\1\u01a2"+
    "\101\0\1\56\105\0\1\u01a3\31\0\2\u01a4\6\0\1\145"+
    "\53\0\1\u01a5\11\0\1\u01a5\2\0\1\u01a5\74\0\1\u01a6"+
    "\11\0\1\u01a6\77\0\1\u01a7\11\0\1\u01a7\100\0\1\u01a8"+
    "\11\0\1\u01a8\100\0\1\u01a9\11\0\1\u01a9\102\0\1\u01aa"+
    "\11\0\1\u01aa\2\0\1\u01aa\76\0\1\u01ab\11\0\1\u01ab"+
    "\132\0\2\u01ac\142\0\2\361\1\256\55\0\2\u01ad\60\0"+
    "\1\u01ae\11\0\1\u01ae\2\0\1\u01ae\126\0\2\u01af\144\0"+
    "\2\262\1\u01b0\64\0\3\u01b1\126\0\2\u01b2\32\0\1\u01b3"+
    "\1\u01b4\10\0\1\u01b3\1\u01b4\2\0\1\u01b4\17\0\2\u01b5"+
    "\21\0\2\u01b6\4\0\1\u01b7\25\0\1\u01b8\11\0\1\u01b8"+
    "\126\0\2\u01b9\111\0\2\u01ba\122\0\3\u01bb\110\0\3\u01bc"+
    "\134\0\2\377\1\276\55\0\2\u01bd\105\0\2\u01be\35\0"+
    "\2\u01bf\1\u01c0\55\0\2\u01c1\120\0\3\u01c2\101\0\2\u01c3"+
    "\120\0\3\u01c4\110\0\3\u01c5\47\0\1\u01c6\11\0\1\u01c6"+
    "\144\0\2\u01c7\36\0\2\u0152\2\u0153\1\0\1\u0154\1\u0155"+
    "\1\u0156\1\u0157\2\0\1\u0152\1\u0158\3\0\1\u0155\1\u0156"+
    "\1\u0157\2\0\1\u0157\7\0\2\u0159\2\u015a\2\0\2\u015b"+
    "\2\u015c\4\0\2\u015d\1\u010b\2\0\4\u010b\4\0\2\u015e"+
    "\2\0\2\u01c8\1\u0152\12\0\1\u0152\1\0\2\u0153\2\u0158"+
    "\1\0\1\u01c9\1\u01ca\1\u0156\1\u01cb\2\0\1\u0153\1\u0158"+
    "\3\0\1\u01ca\1\u0156\1\u01cb\2\0\1\u01cb\7\0\2\u0159"+
    "\4\0\2\u015b\2\u015c\4\0\2\u015d\1\u010b\2\0\4\u010b"+
    "\4\0\2\u015e\2\0\2\u01c8\1\u0153\12\0\1\u0153\7\0"+
    "\1\u01cc\11\0\1\u01cc\145\0\2\u01cd\106\0\3\u01ce\77\0"+
    "\2\u01cf\52\0\4\u0158\1\0\1\u01d0\5\0\2\u0158\40\0"+
    "\1\u010b\2\0\4\u010b\10\0\2\u010c\1\u0158\12\0\1\u0158"+
    "\51\0\3\u01d1\40\0\2\u01d2\3\0\1\u01d3\2\0\1\u01d4"+
    "\2\0\1\u01d2\6\0\1\u01d4\2\0\1\u01d4\27\0\1\u01d5"+
    "\2\0\4\u01d5\10\0\2\u01d6\1\u01d2\12\0\1\u01d2\7\0"+
    "\1\u01d7\11\0\1\u01d7\131\0\2\u01d8\113\0\2\u01d9\113\0"+
    "\2\u01da\105\0\2\u01db\2\0\2\u01dc\46\0\2\u01dd\3\0"+
    "\1\u01de\5\0\1\u01dd\15\0\2\u01df\15\0\3\u01dd\2\0"+
    "\1\u01e0\2\0\4\u01e0\2\0\2\u01e1\6\0\1\u01dd\12\0"+
    "\1\u01dd\11\0\1\u01e2\11\0\1\u01e2\2\0\1\u01e2\130\0"+
    "\2\u01e3\113\0\2\u01e4\117\0\2\u01e5\71\0\2\u01e6\126\0"+
    "\3\u01e7\130\0\2\u01e8\2\0\2\u01e9\23\0\1\u01ea\11\0"+
    "\1\u01ea\24\0\2\u01eb\52\0\1\u01ec\11\0\1\u01ec\102\0"+
    "\1\u01ed\11\0\1\u01ed\2\0\1\u01ed\153\0\2\u01ee\76\0"+
    "\2\u01ef\75\0\2\u01f0\105\0\2\u01f1\115\0\2\u01f2\7\0"+
    "\3\u018c\46\0\1\u01f3\11\0\1\u01f3\125\0\2\u01f4\2\0"+
    "\2\u01f5\113\0\2\u0194\2\0\2\u01f6\43\0\1\u0115\1\u0116"+
    "\1\u0117\2\u0118\1\u0115\1\u0119\1\u011a\1\u011b\1\u011c\1\0"+
    "\1\u0115\1\u0117\1\u011d\2\u0115\1\0\1\u011a\1\u011b\1\u011e"+
    "\2\0\1\u011e\1\0\1\u01f7\5\0\2\u011f\2\u0120\2\0"+
    "\2\u0121\2\u0122\1\0\1\u0115\2\0\2\u0123\1\324\2\u0115"+
    "\4\324\4\0\2\u0124\2\0\2\u0125\1\u0117\1\u0115\2\0"+
    "\2\u0115\3\0\2\u0115\1\u0117\1\u0115\1\u0116\1\u0117\2\u0118"+
    "\1\u0115\1\u0119\1\u011a\1\u011b\1\u011c\1\0\1\u0115\1\u0117"+
    "\1\u011d\2\u0115\1\0\1\u011a\1\u011b\1\u011e\2\0\1\u011e"+
    "\1\0\1\u01f7\5\0\2\u011f\2\u0120\2\0\2\u0121\2\u0122"+
    "\1\0\1\u0115\2\0\2\u0123\1\u0177\2\u0115\4\u0177\4\0"+
    "\2\u0124\2\0\2\u0125\1\u0117\1\u0115\2\0\2\u0115\3\0"+
    "\2\u0115\1\u0117\1\u0115\1\u0116\1\u0117\2\u0118\1\u0115\1\u0119"+
    "\1\u011a\1\u011b\1\u011c\1\0\1\u0115\1\u0117\1\u011d\2\u0115"+
    "\1\0\1\u011a\1\u011b\1\u011e\2\0\1\u011e\1\0\1\u01f7"+
    "\5\0\2\u011f\2\u0120\2\0\2\u0121\2\u0122\1\0\1\u0115"+
    "\2\0\2\u0123\1\u0177\2\u0115\1\u0177\1\324\2\u0177\4\0"+
    "\2\u0124\2\0\2\u0125\1\u0117\1\u0115\2\0\2\u0115\3\0"+
    "\2\u0115\1\u0117\44\0\2\u01f8\75\0\2\u0126\6\0\2\u01f9"+
    "\2\0\2\u0197\3\0\3\u01fa\2\u01fb\44\0\1\u01fc\11\0"+
    "\1\u01fc\145\0\2\u01fd\75\0\2\u01fe\61\0\1\u01ff\11\0"+
    "\1\u01ff\77\0\1\u0200\11\0\1\u0200\14\0\2\u0201\64\0"+
    "\1\u0202\11\0\1\u0202\2\0\1\u0202\76\0\1\u0203\11\0"+
    "\1\u0203\5\0\2\u0204\31\0\2\u0205\4\0\2\u0206\25\0"+
    "\1\u0207\11\0\1\u0207\145\0\2\u0208\75\0\2\u0209\111\0"+
    "\2\u01f2\60\0\1\u01fb\11\0\1\u01fb\125\0\2\u01f4\2\0"+
    "\2\u020a\117\0\2\u01f6\107\0\2\u020b\75\0\2\u0126\6\0"+
    "\2\u020c\7\0\3\u01fa\2\u01fb\77\0\2\u020d\50\0\2\u018d"+
    "\3\0\1\u018e\2\0\1\u018f\2\0\1\u018d\6\0\1\u018f"+
    "\2\0\1\u018f\27\0\1\u0190\2\0\4\u0190\10\0\2\u020e"+
    "\1\u018d\12\0\1\u018d\7\0\1\u020f\11\0\1\u020f\131\0"+
    "\2\u0210\51\0\1\u0115\1\u0211\1\u0212\2\u0213\1\u0115\1\u0214"+
    "\1\u0215\1\u0216\1\u0217\1\0\1\u0115\1\u0212\1\u0218\2\u0115"+
    "\1\0\1\u0215\1\u0216\1\u0219\2\0\1\u0219\7\0\2\u021a"+
    "\2\u021b\2\0\2\u021c\2\u021d\1\0\1\u0115\2\0\2\u021e"+
    "\1\u0190\2\u0115\4\u0190\4\0\2\u021f\2\0\2\u0220\1\u0212"+
    "\1\u0115\2\0\2\u0115\3\0\2\u0115\1\u0212\1\0\2\u018d"+
    "\3\0\1\u018e\2\0\1\u018f\2\0\1\u018d\6\0\1\u018f"+
    "\2\0\1\u018f\1\0\2\u0221\24\0\1\u0190\2\0\4\u0190"+
    "\10\0\2\u020e\1\u018d\12\0\1\u018d\36\0\2\u0222\35\0"+
    "\2\u0223\50\0\2\u0224\123\0\2\u0201\73\0\2\u0225\17\0"+
    "\3\u0226\101\0\2\u0227\123\0\2\u0192\36\0\2\u0198\3\0"+
    "\1\u0199\5\0\1\u0198\41\0\1\u019b\2\0\4\u019b\12\0"+
    "\1\u0198\12\0\1\u0198\7\0\1\u0228\11\0\1\u0228\160\0"+
    "\2\u0229\23\0\2\u022a\2\u022b\1\0\1\u022c\1\u022d\1\u022e"+
    "\1\u022f\2\0\1\u022a\4\0\1\u022d\1\u022e\1\u022f\2\0"+
    "\1\u022f\1\0\2\u0230\4\0\2\u0231\4\0\2\u0232\2\u0233"+
    "\4\0\2\u0234\1\u019b\2\0\4\u019b\4\0\2\u0235\2\0"+
    "\2\u0236\1\u022a\12\0\1\u022a\1\0\2\u0198\3\0\1\u0199"+
    "\5\0\1\u0198\41\0\1\u019b\2\0\4\u019b\2\0\2\u0237"+
    "\6\0\1\u0198\12\0\1\u0198\12\0\1\u0238\11\0\1\u0238"+
    "\71\0\2\u019e\2\0\2\u019e\1\0\1\u019e\4\0\1\u0239"+
    "\5\0\2\u019e\2\0\1\u019e\1\0\1\u019e\1\0\1\u019e"+
    "\1\0\1\u019e\1\0\1\u019e\1\0\1\u019e\1\0\1\u019e"+
    "\1\0\1\u019e\3\0\1\u019e\1\0\2\u019e\2\0\4\u019e"+
    "\1\0\1\u019e\1\0\1\u019e\1\0\1\u019e\1\0\1\u019e"+
    "\1\0\1\u019e\3\0\1\u019e\2\0\1\u019e\1\0\1\u019e"+
    "\15\0\1\u023a\11\0\1\u023a\140\0\1\222\1\0\1\222"+
    "\51\0\1\55\112\0\1\57\137\0\2\u023b\52\0\2\145"+
    "\2\0\1\145\1\146\2\0\1\147\2\0\1\145\6\0"+
    "\1\147\2\0\1\147\50\0\1\145\12\0\1\145\1\0"+
    "\2\343\3\0\1\344\1\345\1\0\1\147\2\0\1\343"+
    "\1\0\1\346\2\0\1\345\1\0\1\147\2\0\1\147"+
    "\11\0\2\65\33\0\2\247\1\355\12\0\1\343\11\0"+
    "\1\u023c\11\0\1\u023c\2\0\1\u023c\126\0\2\337\57\0"+
    "\1\u023d\11\0\1\u023d\136\0\2\u023e\44\0\2\343\3\0"+
    "\1\344\1\345\1\62\1\u023f\2\0\1\343\1\0\1\346"+
    "\2\0\1\345\1\62\1\u023f\2\0\1\u023f\11\0\2\65"+
    "\4\0\2\u0240\21\0\2\u0241\4\0\1\u0242\12\0\1\343"+
    "\13\0\1\145\150\0\3\341\110\0\3\u0243\134\0\2\363"+
    "\1\u0244\64\0\3\u0245\134\0\2\262\54\0\2\u0246\123\0"+
    "\1\265\1\0\1\265\107\0\3\u0247\77\0\2\u0248\111\0"+
    "\2\u0249\115\0\2\u024a\55\0\1\u01b3\1\u01b4\10\0\1\u01b3"+
    "\1\u01b4\2\0\1\u01b4\17\0\2\u01b5\21\0\2\u01b6\33\0"+
    "\1\101\110\0\1\u024b\11\0\1\u024b\2\0\1\u024b\75\0"+
    "\1\u024c\11\0\1\u024c\2\0\1\u024c\124\0\2\u024d\111\0"+
    "\2\u024e\122\0\3\u024f\110\0\3\u0250\77\0\2\u0251\146\0"+
    "\2\u01bf\65\0\3\u0252\77\0\2\u0253\122\0\3\u0254\77\0"+
    "\2\u0247\111\0\2\u0255\62\0\1\u0256\11\0\1\u0256\2\0"+
    "\1\u0256\153\0\2\u0257\52\0\2\u0160\6\0\2\u01db\2\0"+
    "\2\u01dc\54\0\1\u0258\11\0\1\u0258\145\0\2\u0259\75\0"+
    "\2\u025a\61\0\1\u025b\11\0\1\u025b\77\0\1\u025c\11\0"+
    "\1\u025c\14\0\2\u025d\64\0\1\u025e\11\0\1\u025e\2\0"+
    "\1\u025e\76\0\1\u025f\11\0\1\u025f\5\0\2\u0260\31\0"+
    "\2\u0261\4\0\2\u0262\25\0\1\u0263\11\0\1\u0263\133\0"+
    "\2\u0264\50\0\2\u01d2\3\0\1\u01d3\2\0\1\u01d4\2\0"+
    "\1\u01d2\6\0\1\u01d4\2\0\1\u01d4\27\0\1\u01d5\2\0"+
    "\4\u01d5\10\0\2\u0265\1\u01d2\12\0\1\u01d2\7\0\1\u0266"+
    "\11\0\1\u0266\131\0\2\u0267\52\0\2\u0268\2\u0269\1\0"+
    "\1\u026a\1\u026b\1\u026c\1\u026d\2\0\1\u0268\4\0\1\u026b"+
    "\1\u026c\1\u026d\2\0\1\u026d\7\0\2\u026e\2\u026f\2\0"+
    "\2\u0270\2\u0271\4\0\2\u0272\1\u01d5\2\0\4\u01d5\4\0"+
    "\2\u0273\2\0\2\u0274\1\u0268\12\0\1\u0268\1\0\2\u01d2"+
    "\3\0\1\u01d3\2\0\1\u01d4\2\0\1\u01d2\6\0\1\u01d4"+
    "\2\0\1\u01d4\1\0\2\u0275\24\0\1\u01d5\2\0\4\u01d5"+
    "\10\0\2\u0265\1\u01d2\12\0\1\u01d2\36\0\2\u0276\35\0"+
    "\2\u0277\50\0\2\u0278\123\0\2\u025d\73\0\2\u0279\17\0"+
    "\3\u027a\101\0\2\u027b\123\0\2\u01d7\36\0\2\u01dd\3\0"+
    "\1\u01de\5\0\1\u01dd\41\0\1\u01e0\2\0\4\u01e0\12\0"+
    "\1\u01dd\12\0\1\u01dd\7\0\1\u027c\11\0\1\u027c\160\0"+
    "\2\u027d\23\0\2\u027e\2\u027f\1\0\1\u0280\1\u0281\1\u0282"+
    "\1\u0283\2\0\1\u027e\4\0\1\u0281\1\u0282\1\u0283\2\0"+
    "\1\u0283\1\0\2\u0284\4\0\2\u0285\4\0\2\u0286\2\u0287"+
    "\4\0\2\u0288\1\u01e0\2\0\4\u01e0\4\0\2\u0289\2\0"+
    "\2\u028a\1\u027e\12\0\1\u027e\1\0\2\u01dd\3\0\1\u01de"+
    "\5\0\1\u01dd\41\0\1\u01e0\2\0\4\u01e0\2\0\2\u028b"+
    "\6\0\1\u01dd\12\0\1\u01dd\12\0\1\u028c\11\0\1\u028c"+
    "\134\0\2\u028d\111\0\2\u028e\52\0\1\u028f\11\0\1\u028f"+
    "\137\0\2\u01e9\140\0\2\u0290\23\0\1\u0291\11\0\1\u0291"+
    "\142\0\3\u01e3\77\0\2\u0292\111\0\2\u0293\12\0\2\u0294"+
    "\43\0\1\212\116\0\1\u0295\11\0\1\u0295\140\0\1\320"+
    "\1\0\1\320\45\0\1\u0296\11\0\1\u0296\14\0\2\u0201"+
    "\64\0\1\u0297\1\u0203\10\0\1\u0297\1\u0203\1\0\1\u0297"+
    "\3\0\2\u0204\6\0\2\u0298\2\0\2\u0299\15\0\2\u0205"+
    "\4\0\2\u0206\2\u029a\65\0\3\u029b\46\0\1\u029c\11\0"+
    "\1\u029c\127\0\2\u0222\35\0\2\u029d\54\0\2\u01fb\105\0"+
    "\2\u029e\123\0\2\u029f\73\0\2\u02a0\17\0\3\u02a1\101\0"+
    "\2\u02a2\111\0\2\u02a3\144\0\2\u029a\24\0\1\u02a4\11\0"+
    "\1\u02a4\77\0\1\u02a5\11\0\1\u02a5\14\0\2\u0201\64\0"+
    "\1\u0297\1\u0203\10\0\1\u0297\1\u0203\1\0\1\u0297\13\0"+
    "\2\u0298\2\0\2\u0299\15\0\2\u0205\4\0\2\u0206\2\u029a"+
    "\25\0\1\u02a6\11\0\1\u02a6\2\0\1\u02a6\126\0\2\u02a7"+
    "\5\0\3\u02a8\110\0\3\u02a9\2\u02aa\35\0\1\u0115\1\u02ab"+
    "\1\u02ac\2\u011d\1\u0115\1\u02ad\1\u02ae\1\0\1\u02af\1\0"+
    "\1\u0115\1\u02ac\1\u011d\1\u02b0\1\u0115\1\0\1\u02ae\1\0"+
    "\1\u018f\2\0\1\u018f\11\0\2\u0120\7\0\1\u0115\5\0"+
    "\2\u0115\16\0\1\u02ac\1\u0115\2\0\2\u0115\3\0\2\u0115"+
    "\1\u02ac\46\0\2\u0206\43\0\1\u0115\1\u02b1\3\u0218\1\u0115"+
    "\1\u02b2\2\0\1\u0115\1\0\1\u0115\2\u0218\2\u0115\12\0"+
    "\2\u02b3\10\0\2\u02b4\3\0\1\u0115\5\0\1\u02b5\1\u0115"+
    "\16\0\1\u0218\1\u0115\2\0\2\u0115\3\0\2\u0115\1\u0218"+
    "\40\0\2\u02b6\122\0\3\u02a9\21\0\2\u0223\24\0\1\u02b7"+
    "\11\0\1\u02b7\77\0\1\u02b8\11\0\1\u02b8\102\0\1\u0297"+
    "\11\0\1\u0297\2\0\1\u0297\13\0\2\u0298\2\0\2\u0299"+
    "\25\0\2\u029a\50\0\2\u02b9\105\0\2\u02ba\17\0\3\u02bb"+
    "\101\0\2\u01f1\120\0\3\u02bc\67\0\2\u0221\71\0\1\u02bd"+
    "\11\0\1\u02bd\122\0\2\u0204\60\0\1\u02be\1\u0212\2\u02bf"+
    "\1\0\1\u02c0\1\u02c1\1\u0216\1\u02c2\1\u0171\1\0\1\u02be"+
    "\1\u02c3\3\0\1\u02c1\1\u0216\1\u02c2\1\u0171\1\0\1\u02c2"+
    "\7\0\2\u02c4\2\u021b\2\0\2\u02c5\2\u02c6\4\0\2\u02c7"+
    "\1\u02c8\2\0\1\u02c9\1\u02c8\1\u02ca\5\0\2\u02cb\2\0"+
    "\2\u02cc\1\u02be\12\0\1\u02be\1\0\2\u02be\2\u02bf\1\0"+
    "\1\u02c0\1\u02c1\1\u0216\1\u02c2\1\u0171\1\0\1\u02be\1\u02c3"+
    "\3\0\1\u02c1\1\u0216\1\u02c2\1\u0171\1\0\1\u02c2\7\0"+
    "\2\u02c4\2\u021b\2\0\2\u02c5\2\u02c6\4\0\2\u02c7\1\u02c8"+
    "\2\0\1\u02c9\1\u02c8\1\u02ca\5\0\2\u02cb\2\0\2\u02cc"+
    "\1\u02be\12\0\1\u02be\1\0\2\u02bf\2\u02c3\1\0\1\u02cd"+
    "\1\u02ce\1\u0216\1\u02cf\1\u0171\1\0\1\u02bf\1\u02c3\3\0"+
    "\1\u02ce\1\u0216\1\u02cf\1\u0171\1\0\1\u02cf\7\0\2\u02c4"+
    "\4\0\2\u02c5\2\u02c6\4\0\2\u02c7\1\u02c8\2\0\1\u02c9"+
    "\1\u02c8\1\u02ca\5\0\2\u02cb\2\0\2\u02cc\1\u02bf\12\0"+
    "\1\u02bf\7\0\1\u02d0\11\0\1\u02d0\145\0\2\u02d1\106\0"+
    "\3\u02d2\77\0\2\u02d3\52\0\4\u02c3\1\0\1\u02d4\1\u0184"+
    "\1\0\1\u0185\1\u0171\1\0\2\u02c3\3\0\1\u0184\1\0"+
    "\1\u0185\1\u0171\1\0\1\u0185\7\0\2\u0186\4\0\2\u0187"+
    "\2\u0188\4\0\2\u0189\1\u02c8\2\0\1\u02c9\1\u02c8\1\u02ca"+
    "\5\0\2\u018a\2\0\2\u02d5\1\u02c3\12\0\1\u02c3\51\0"+
    "\3\u02d6\40\0\2\u02d7\3\0\1\u02d8\2\0\1\u018f\2\0"+
    "\1\u02d7\6\0\1\u018f\2\0\1\u018f\46\0\3\u02d7\12\0"+
    "\1\u02d7\7\0\1\u02d9\11\0\1\u02d9\131\0\2\u02da\113\0"+
    "\2\u02db\113\0\2\u02dc\105\0\2\u02dd\2\0\2\u02de\46\0"+
    "\2\u02df\3\0\1\u02e0\5\0\1\u02df\15\0\2\u02e1\15\0"+
    "\3\u02df\2\0\1\u02e2\2\0\4\u02e2\2\0\2\u02e3\6\0"+
    "\1\u02df\12\0\1\u02df\51\0\3\u0196\77\0\2\u0196\51\0"+
    "\1\u0115\1\u02ab\1\u02ac\2\u011d\1\u0115\1\u02ad\1\u02ae\1\0"+
    "\1\u02af\1\0\1\u0115\1\u02ac\1\u011d\1\u02b0\1\u0115\1\0"+
    "\1\u02ae\1\0\1\u018f\2\0\1\u018f\7\0\2\u0222\2\u0120"+
    "\7\0\1\u0115\5\0\2\u0115\14\0\2\u0223\1\u02e4\1\u0115"+
    "\2\0\2\u0115\3\0\2\u0115\1\u02ac\46\0\2\u0122\52\0"+
    "\1\u02e5\11\0\1\u02e5\142\0\3\u02a8\47\0\1\u02e6\11\0"+
    "\1\u02e6\141\0\3\u0198\40\0\2\u022a\2\u022b\1\0\1\u022c"+
    "\1\u022d\1\u022e\1\u022f\2\0\1\u022a\4\0\1\u022d\1\u022e"+
    "\1\u022f\2\0\1\u022f\1\0\2\u0230\4\0\2\u0231\4\0"+
    "\2\u0232\2\u0233\4\0\2\u0234\13\0\2\u0235\2\0\2\u0236"+
    "\1\u022a\12\0\1\u022a\1\0\2\u022b\3\0\1\u02e7\1\u022d"+
    "\1\u022e\1\u022f\2\0\1\u022b\4\0\1\u022d\1\u022e\1\u022f"+
    "\2\0\1\u022f\7\0\2\u0231\4\0\2\u0232\2\u0233\4\0"+
    "\2\u0234\13\0\2\u0235\2\0\2\u0236\1\u022b\12\0\1\u022b"+
    "\7\0\1\u02e8\11\0\1\u02e8\145\0\2\u02e9\106\0\3\u02ea"+
    "\77\0\2\u02eb\52\0\2\u02ec\3\0\1\u02ed\5\0\1\u02ec"+
    "\15\0\2\u02ee\15\0\3\u02ec\2\0\1\324\2\0\4\324"+
    "\2\0\2\u02ef\6\0\1\u02ec\12\0\1\u02ec\51\0\3\u02f0"+
    "\46\0\1\u02f1\11\0\1\u02f1\131\0\2\u02f2\113\0\2\u02f3"+
    "\113\0\2\u02f4\105\0\2\u02f5\2\0\2\u02f6\52\0\1\u0198"+
    "\22\0\2\u0198\6\0\2\u0198\12\0\2\u0198\50\0\1\124"+
    "\155\0\1\u02f7\2\0\4\u02f7\41\0\1\222\127\0\2\u02f8"+
    "\2\u02f9\71\0\1\u02fa\11\0\1\u02fa\77\0\1\u02fb\11\0"+
    "\1\u02fb\2\0\1\u02fb\64\0\1\351\2\0\106\351\42\0"+
    "\2\u02fc\111\0\2\u02fd\115\0\2\u02fe\46\0\2\343\3\0"+
    "\1\344\1\345\1\62\1\u023f\2\0\1\343\1\0\1\346"+
    "\2\0\1\345\1\62\1\u023f\2\0\1\u023f\11\0\2\65"+
    "\4\0\2\u0240\21\0\2\u0241\4\0\1\343\12\0\1\343"+
    "\40\0\2\u02ff\146\0\2\363\54\0\2\u0300\62\0\1\u0301"+
    "\11\0\1\u0301\2\0\1\u0301\75\0\1\u0302\11\0\1\u0302"+
    "\2\0\1\u0302\151\0\2\u0303\60\0\2\u0304\105\0\2\u0305"+
    "\17\0\3\u0306\50\0\1\u0304\11\0\1\u0304\2\0\1\u0304"+
    "\75\0\1\u0307\11\0\1\u0307\2\0\1\u0307\124\0\2\u0308"+
    "\113\0\2\u0309\111\0\2\u030a\107\0\2\u030b\62\0\1\u030c"+
    "\11\0\1\u030c\2\0\1\u030c\124\0\2\u030d\62\0\1\u030e"+
    "\11\0\1\u030e\2\0\1\u030e\76\0\1\u030f\11\0\1\u030f"+
    "\140\0\1\u0107\1\0\1\u0107\46\0\1\u0310\11\0\1\u0310"+
    "\77\0\1\u027b\11\0\1\u027b\14\0\2\u025d\65\0\1\u025f"+
    "\11\0\1\u025f\40\0\2\u0261\4\0\2\u0262\27\0\1\u0311"+
    "\11\0\1\u0311\2\0\1\u0311\126\0\2\u0312\5\0\3\u0313"+
    "\110\0\3\u0314\2\u0315\36\0\2\u0316\2\u0158\1\0\1\u0317"+
    "\1\u0318\1\0\1\u01d4\2\0\1\u0316\1\u0158\1\u0319\2\0"+
    "\1\u0318\1\0\1\u01d4\2\0\1\u01d4\11\0\2\u015a\35\0"+
    "\1\u0316\12\0\1\u0316\46\0\2\u0262\75\0\2\u031a\10\0"+
    "\2\u031b\11\0\1\u031c\73\0\2\u031d\122\0\3\u0314\21\0"+
    "\2\u0277\24\0\1\u031e\11\0\1\u031e\141\0\3\u031f\67\0"+
    "\2\u0275\71\0\1\u0320\11\0\1\u0320\122\0\2\u0260\60\0"+
    "\2\u0268\2\u0269\1\0\1\u026a\1\u026b\1\u026c\1\u026d\2\0"+
    "\1\u0268\4\0\1\u026b\1\u026c\1\u026d\2\0\1\u026d\7\0"+
    "\2\u026e\2\u026f\2\0\2\u0270\2\u0271\4\0\2\u0272\13\0"+
    "\2\u0273\2\0\2\u0274\1\u0268\12\0\1\u0268\1\0\2\u0269"+
    "\3\0\1\u0321\1\u0322\1\u026c\1\u0323\2\0\1\u0269\4\0"+
    "\1\u0322\1\u026c\1\u0323\2\0\1\u0323\7\0\2\u026e\4\0"+
    "\2\u0270\2\u0271\4\0\2\u0272\13\0\2\u0273\2\0\2\u0274"+
    "\1\u0269\12\0\1\u0269\7\0\1\u0324\11\0\1\u0324\145\0"+
    "\2\u0325\106\0\3\u0326\77\0\2\u0327\122\0\3\u0328\40\0"+
    "\2\u0329\3\0\1\u032a\2\0\1\u01d4\2\0\1\u0329\6\0"+
    "\1\u01d4\2\0\1\u01d4\46\0\3\u0329\12\0\1\u0329\7\0"+
    "\1\u032b\11\0\1\u032b\131\0\2\u032c\113\0\2\u032d\113\0"+
    "\2\u032e\105\0\2\u032f\2\0\2\u0330\46\0\2\u0331\3\0"+
    "\1\u0332\5\0\1\u0331\15\0\2\u0333\15\0\3\u0331\2\0"+
    "\1\u0334\2\0\4\u0334\2\0\2\u0335\6\0\1\u0331\12\0"+
    "\1\u0331\51\0\3\u01db\77\0\2\u01db\52\0\2\u0316\2\u0158"+
    "\1\0\1\u0317\1\u0318\1\0\1\u01d4\2\0\1\u0316\1\u0158"+
    "\1\u0319\2\0\1\u0318\1\0\1\u01d4\2\0\1\u01d4\7\0"+
    "\2\u0276\2\u015a\33\0\2\u0277\1\u0336\12\0\1\u0316\46\0"+
    "\2\u015c\52\0\1\u0337\11\0\1\u0337\142\0\3\u0313\47\0"+
    "\1\u0338\11\0\1\u0338\141\0\3\u01dd\40\0\2\u027e\2\u027f"+
    "\1\0\1\u0280\1\u0281\1\u0282\1\u0283\2\0\1\u027e\4\0"+
    "\1\u0281\1\u0282\1\u0283\2\0\1\u0283\1\0\2\u0284\4\0"+
    "\2\u0285\4\0\2\u0286\2\u0287\4\0\2\u0288\13\0\2\u0289"+
    "\2\0\2\u028a\1\u027e\12\0\1\u027e\1\0\2\u027f\3\0"+
    "\1\u0339\1\u0281\1\u0282\1\u0283\2\0\1\u027f\4\0\1\u0281"+
    "\1\u0282\1\u0283\2\0\1\u0283\7\0\2\u0285\4\0\2\u0286"+
    "\2\u0287\4\0\2\u0288\13\0\2\u0289\2\0\2\u028a\1\u027f"+
    "\12\0\1\u027f\7\0\1\u033a\11\0\1\u033a\145\0\2\u033b"+
    "\106\0\3\u033c\77\0\2\u033d\52\0\2\u033e\3\0\1\u033f"+
    "\5\0\1\u033e\15\0\2\u0340\15\0\3\u033e\2\0\1\u010b"+
    "\2\0\4\u010b\2\0\2\u0341\6\0\1\u033e\12\0\1\u033e"+
    "\51\0\3\u0342\46\0\1\u0343\11\0\1\u0343\131\0\2\u0344"+
    "\113\0\2\u0345\113\0\2\u0346\105\0\2\u0347\2\0\2\u0348"+
    "\52\0\1\u01dd\22\0\2\u01dd\6\0\2\u01dd\12\0\2\u01dd"+
    "\50\0\1\201\106\0\1\u01ea\11\0\1\u01ea\121\0\2\u0349"+
    "\70\0\1\u034a\11\0\1\u034a\100\0\1\u034b\11\0\1\u034b"+
    "\12\0\2\u034c\2\0\2\u034d\12\0\2\u0111\106\0\3\u034e"+
    "\75\0\2\214\64\0\1\u034f\11\0\1\u034f\2\0\1\u034f"+
    "\135\0\3\u0350\52\0\1\320\77\0\1\u01f7\2\0\37\u01f7"+
    "\2\u0351\5\u01f7\3\u0352\35\u01f7\50\0\2\u02b8\117\0\2\u0353"+
    "\103\0\2\u01f1\114\0\3\u0354\124\0\2\u02b8\72\0\2\u0355"+
    "\103\0\2\u0196\7\0\3\u0354\37\0\1\u0115\1\u02ab\1\u02ac"+
    "\2\u011d\1\u0115\1\u02ad\1\u02ae\1\0\1\u02af\1\0\1\u0115"+
    "\1\u02ac\1\u011d\1\u02b0\1\u0115\1\u02b8\1\u02ae\1\0\1\u018f"+
    "\1\0\1\u02b8\1\u018f\7\0\2\u0222\2\u0120\7\0\1\u0115"+
    "\5\0\2\u0115\14\0\2\u0223\1\u02e4\1\u0115\2\0\2\u0115"+
    "\3\0\2\u0115\1\u02ac\30\0\2\u0356\115\0\2\u0297\10\0"+
    "\2\u0357\52\0\1\u0358\11\0\1\u0358\142\0\3\u0359\110\0"+
    "\3\u035a\50\0\1\u035b\11\0\1\u035b\2\0\1\u035b\64\0"+
    "\1\u01f7\2\0\46\u01f7\3\u0352\35\u01f7\14\0\1\u035c\11\0"+
    "\1\u035c\174\0\2\u035d\43\0\2\u0181\111\0\2\u035e\146\0"+
    "\2\u0223\15\0\1\u035f\1\u02ac\2\u0172\1\0\1\u0360\1\u0361"+
    "\1\0\1\u0362\1\u0171\1\0\1\u035f\1\u0172\1\u0363\2\0"+
    "\1\u0361\1\0\1\u0362\1\u0171\1\0\1\u0362\7\0\2\u0186"+
    "\2\u0120\2\0\2\u0187\2\u0188\4\0\2\u0189\1\u0177\2\0"+
    "\1\u0178\1\u0177\1\u0179\1\324\4\0\2\u018a\2\0\2\u018b"+
    "\1\u035f\12\0\1\u035f\1\0\2\u035f\2\u0172\1\0\1\u0360"+
    "\1\u0361\1\0\1\u0362\1\u0171\1\0\1\u035f\1\u0172\1\u0363"+
    "\2\0\1\u0361\1\0\1\u0362\1\u0171\1\0\1\u0362\7\0"+
    "\2\u0186\2\u0120\2\0\2\u0187\2\u0188\4\0\2\u0189\1\u0177"+
    "\2\0\1\u0178\1\u0177\1\u0179\1\324\4\0\2\u018a\2\0"+
    "\2\u018b\1\u035f\12\0\1\u035f\7\0\1\u0364\11\0\1\u0364"+
    "\145\0\2\u0365\35\0\1\u0115\1\u0366\1\u0367\2\u011d\1\u0115"+
    "\1\u0368\1\u02ae\1\0\1\u02af\1\0\1\u0115\1\u0367\1\u011d"+
    "\2\u0115\1\0\1\u02ae\1\0\1\u018f\2\0\1\u018f\11\0"+
    "\2\u0120\7\0\1\u0115\5\0\2\u0115\16\0\1\u0367\1\u0115"+
    "\2\0\2\u0115\3\0\2\u0115\1\u0367\1\0\1\u02c3\1\u0218"+
    "\2\u02c3\1\0\1\u02d4\1\u0184\1\0\1\u0185\1\u0171\1\0"+
    "\2\u02c3\3\0\1\u0184\1\0\1\u0185\1\u0171\1\0\1\u0185"+
    "\7\0\2\u0186\4\0\2\u0187\2\u0188\4\0\2\u0189\1\u02c8"+
    "\2\0\1\u02c9\1\u02c8\1\u02ca\5\0\2\u018a\2\0\2\u02d5"+
    "\1\u02c3\12\0\1\u02c3\7\0\1\u0369\11\0\1\u0369\71\0"+
    "\1\u0115\1\u02b1\3\u0218\1\u0115\1\u02b2\2\0\1\u0115\1\0"+
    "\1\u0115\2\u0218\2\u0115\31\0\1\u0115\5\0\1\u02b5\1\u0115"+
    "\16\0\1\u0218\1\u0115\2\0\2\u0115\3\0\2\u0115\1\u0218"+
    "\40\0\2\u036a\51\0\1\u0115\1\u02b1\3\u0218\1\u0115\1\u02b2"+
    "\2\0\1\u0115\1\0\1\u0115\2\u0218\2\u0115\31\0\1\u0115"+
    "\5\0\2\u0115\16\0\1\u0218\1\u0115\2\0\2\u0115\3\0"+
    "\2\u0115\1\u0218\67\0\2\u0202\33\0\1\u036b\11\0\1\u036b"+
    "\2\0\1\u036b\64\0\1\u01f7\2\0\106\u01f7\22\0\1\u02b8"+
    "\4\0\1\u02b8\121\0\2\u0297\10\0\2\u036c\52\0\1\u036d"+
    "\11\0\1\u036d\131\0\2\u036e\62\0\1\u036f\11\0\1\u036f"+
    "\2\0\1\u036f\140\0\2\u0370\75\0\2\u0371\111\0\2\u01f2"+
    "\7\0\3\u02d6\46\0\1\u0372\11\0\1\u0372\125\0\2\u01f4"+
    "\2\0\2\u0373\113\0\2\u02db\2\0\2\u01f6\73\0\1\u01f7"+
    "\57\0\1\u01f7\32\0\1\u01f7\25\0\1\u02c8\2\0\4\u02c8"+
    "\23\0\1\u01f7\32\0\1\u01f7\25\0\1\u02c8\2\0\1\u02c8"+
    "\1\0\2\u02c8\23\0\1\u01f7\46\0\2\u0374\105\0\2\u0375"+
    "\2\0\2\u02de\3\0\3\u01fa\2\u01fb\44\0\1\u0376\11\0"+
    "\1\u0376\145\0\2\u0377\75\0\2\u0378\61\0\1\u0379\11\0"+
    "\1\u0379\77\0\1\u037a\11\0\1\u037a\14\0\2\u037b\64\0"+
    "\1\u037c\11\0\1\u037c\2\0\1\u037c\76\0\1\u037d\11\0"+
    "\1\u037d\5\0\2\u0204\31\0\2\u037e\4\0\2\u037f\56\0"+
    "\2\u020c\7\0\3\u01fa\2\u01fb\77\0\2\u0380\50\0\2\u02d7"+
    "\3\0\1\u02d8\2\0\1\u018f\2\0\1\u02d7\6\0\1\u018f"+
    "\2\0\1\u018f\50\0\1\u02d7\12\0\1\u02d7\7\0\1\u0381"+
    "\11\0\1\u0381\127\0\2\u0382\35\0\2\u0383\50\0\2\u0384"+
    "\123\0\2\u037b\73\0\2\u0385\17\0\3\u0386\101\0\2\u0387"+
    "\123\0\2\u02d9\36\0\2\u02df\3\0\1\u02e0\5\0\1\u02df"+
    "\41\0\1\u02e2\2\0\4\u02e2\12\0\1\u02df\12\0\1\u02df"+
    "\7\0\1\u0388\11\0\1\u0388\160\0\2\u0389\23\0\2\u038a"+
    "\2\u038b\1\0\1\u038c\1\u038d\1\u038e\1\u038f\2\0\1\u038a"+
    "\4\0\1\u038d\1\u038e\1\u038f\2\0\1\u038f\1\0\2\u0390"+
    "\4\0\2\u0391\4\0\2\u0392\2\u0393\4\0\2\u0394\1\u02e2"+
    "\2\0\4\u02e2\4\0\2\u0395\2\0\2\u0396\1\u038a\12\0"+
    "\1\u038a\1\0\2\u02df\3\0\1\u02e0\5\0\1\u02df\41\0"+
    "\1\u02e2\2\0\4\u02e2\2\0\2\u0397\6\0\1\u02df\12\0"+
    "\1\u02df\1\0\2\u035f\2\u0172\1\0\1\u0360\1\u0361\1\0"+
    "\1\u0362\1\u0171\1\0\1\u035f\1\u0172\1\u0363\2\0\1\u0361"+
    "\1\0\1\u0362\1\u0171\1\0\1\u0362\7\0\2\u0186\2\u0120"+
    "\2\0\2\u0187\2\u0188\4\0\2\u0189\1\u0177\2\0\1\u0178"+
    "\1\u0177\1\u0179\1\324\4\0\2\u018a\2\0\2\u0398\1\u035f"+
    "\12\0\1\u035f\36\0\2\u0222\31\0\2\u0399\2\0\2\u0223"+
    "\25\0\1\u039a\11\0\1\u039a\2\0\1\u039a\73\0\1\u039b"+
    "\11\0\1\u039b\101\0\1\u039c\11\0\1\u039c\77\0\1\u039d"+
    "\11\0\1\u039d\14\0\2\u039e\64\0\1\u039f\11\0\1\u039f"+
    "\2\0\1\u039f\76\0\1\u03a0\11\0\1\u03a0\40\0\2\u03a1"+
    "\4\0\2\u03a2\17\0\2\u02ec\3\0\1\u02ed\5\0\1\u02ec"+
    "\41\0\1\324\2\0\4\324\12\0\1\u02ec\12\0\1\u02ec"+
    "\7\0\1\u03a3\11\0\1\u03a3\160\0\2\u03a4\23\0\2\u02ec"+
    "\3\0\1\u02ed\5\0\1\u02ec\41\0\1\324\2\0\4\324"+
    "\2\0\2\u03a5\6\0\1\u02ec\12\0\1\u02ec\42\0\2\u03a6"+
    "\105\0\2\u03a7\35\0\2\u03a8\50\0\2\u03a9\123\0\2\u039e"+
    "\73\0\2\u03aa\17\0\3\u03ab\101\0\2\u039d\123\0\2\u02f1"+
    "\113\0\1\u02f7\2\0\4\u02f7\17\0\1\u03ac\50\0\2\u03ad"+
    "\103\0\2\u03ae\70\0\1\343\111\0\1\u03af\11\0\1\u03af"+
    "\120\0\2\240\31\0\2\241\60\0\2\236\105\0\2\u03b0"+
    "\17\0\3\u03b1\50\0\1\u03b2\11\0\1\u03b2\2\0\1\u03b2"+
    "\75\0\1\u03b3\11\0\1\u03b3\2\0\1\u03b3\124\0\2\u03b4"+
    "\117\0\2\u03b5\52\0\1\u03b6\11\0\1\u03b6\102\0\1\u03b7"+
    "\11\0\1\u03b7\2\0\1\u03b7\135\0\3\u03b8\110\0\3\u03b9"+
    "\50\0\1\u03ba\11\0\1\u03ba\2\0\1\u03ba\161\0\2\u0103"+
    "\1\u03bb\24\0\1\u03bc\11\0\1\u03bc\2\0\1\u03bc\77\0"+
    "\1\u0107\110\0\1\u03bd\11\0\1\u03bd\2\0\1\u03bd\76\0"+
    "\1\u03be\11\0\1\u03be\174\0\2\u03bf\43\0\2\u01ce\111\0"+
    "\2\u03c0\146\0\2\u0277\15\0\2\u0316\2\u0158\1\0\1\u0317"+
    "\1\u0318\1\0\1\u01d4\2\0\1\u0316\1\u0158\1\u0319\2\0"+
    "\1\u0318\1\0\1\u01d4\2\0\1\u01d4\11\0\2\u015a\14\0"+
    "\1\u010b\2\0\4\u010b\10\0\2\u010c\1\u0316\12\0\1\u0316"+
    "\7\0\1\u03c1\11\0\1\u03c1\145\0\2\u03c2\36\0\2\u03c3"+
    "\2\u0158\1\0\1\u03c4\1\u0318\1\0\1\u01d4\2\0\1\u03c3"+
    "\1\u0158\3\0\1\u0318\1\0\1\u01d4\2\0\1\u01d4\11\0"+
    "\2\u015a\35\0\1\u03c3\12\0\1\u03c3\57\0\1\u031c\73\0"+
    "\2\u03c5\140\0\2\u025e\33\0\1\u03c6\11\0\1\u03c6\2\0"+
    "\1\u03c6\124\0\2\u03c7\62\0\1\u03c8\11\0\1\u03c8\2\0"+
    "\1\u03c8\73\0\1\u03c9\11\0\1\u03c9\145\0\2\u03ca\75\0"+
    "\2\u03cb\61\0\1\u03cc\11\0\1\u03cc\77\0\1\u03cd\11\0"+
    "\1\u03cd\14\0\2\u03ce\64\0\1\u03cf\11\0\1\u03cf\2\0"+
    "\1\u03cf\76\0\1\u03d0\11\0\1\u03d0\5\0\2\u0260\31\0"+
    "\2\u03d1\4\0\2\u03d2\60\0\2\u03d3\50\0\2\u0329\3\0"+
    "\1\u032a\2\0\1\u01d4\2\0\1\u0329\6\0\1\u01d4\2\0"+
    "\1\u01d4\50\0\1\u0329\12\0\1\u0329\7\0\1\u03d4\11\0"+
    "\1\u03d4\127\0\2\u03d5\35\0\2\u03d6\50\0\2\u03d7\123\0"+
    "\2\u03ce\73\0\2\u03d8\17\0\3\u03d9\101\0\2\u03da\123\0"+
    "\2\u032b\36\0\2\u0331\3\0\1\u0332\5\0\1\u0331\41\0"+
    "\1\u0334\2\0\4\u0334\12\0\1\u0331\12\0\1\u0331\7\0"+
    "\1\u03db\11\0\1\u03db\160\0\2\u03dc\23\0\2\u03dd\2\u03de"+
    "\1\0\1\u03df\1\u03e0\1\u03e1\1\u03e2\2\0\1\u03dd\4\0"+
    "\1\u03e0\1\u03e1\1\u03e2\2\0\1\u03e2\1\0\2\u03e3\4\0"+
    "\2\u03e4\4\0\2\u03e5\2\u03e6\4\0\2\u03e7\1\u0334\2\0"+
    "\4\u0334\4\0\2\u03e8\2\0\2\u03e9\1\u03dd\12\0\1\u03dd"+
    "\1\0\2\u0331\3\0\1\u0332\5\0\1\u0331\41\0\1\u0334"+
    "\2\0\4\u0334\2\0\2\u03ea\6\0\1\u0331\12\0\1\u0331"+
    "\1\0\2\u0316\2\u0158\1\0\1\u0317\1\u0318\1\0\1\u01d4"+
    "\2\0\1\u0316\1\u0158\1\u0319\2\0\1\u0318\1\0\1\u01d4"+
    "\2\0\1\u01d4\11\0\2\u015a\14\0\1\u010b\2\0\4\u010b"+
    "\10\0\2\u03eb\1\u0316\12\0\1\u0316\36\0\2\u0276\31\0"+
    "\2\u03ec\2\0\2\u0277\25\0\1\u03ed\11\0\1\u03ed\2\0"+
    "\1\u03ed\73\0\1\u03ee\11\0\1\u03ee\101\0\1\u03ef\11\0"+
    "\1\u03ef\77\0\1\u03f0\11\0\1\u03f0\14\0\2\u03f1\64\0"+
    "\1\u03f2\11\0\1\u03f2\2\0\1\u03f2\76\0\1\u03f3\11\0"+
    "\1\u03f3\40\0\2\u03f4\4\0\2\u03f5\17\0\2\u033e\3\0"+
    "\1\u033f\5\0\1\u033e\41\0\1\u010b\2\0\4\u010b\12\0"+
    "\1\u033e\12\0\1\u033e\7\0\1\u03f6\11\0\1\u03f6\160\0"+
    "\2\u03f7\23\0\2\u033e\3\0\1\u033f\5\0\1\u033e\41\0"+
    "\1\u010b\2\0\4\u010b\2\0\2\u03f8\6\0\1\u033e\12\0"+
    "\1\u033e\42\0\2\u03f9\105\0\2\u03fa\35\0\2\u03fb\50\0"+
    "\2\u03fc\123\0\2\u03f1\73\0\2\u03fd\17\0\3\u03fe\101\0"+
    "\2\u03f0\123\0\2\u0343\101\0\2\u03ff\75\0\2\u0294\125\0"+
    "\2\214\3\0\3\310\113\0\2\u0400\46\0\1\214\11\0"+
    "\1\214\2\0\1\214\5\0\2\306\117\0\2\u01e9\60\0"+
    "\1\u034a\11\0\1\u034a\2\0\1\u034a\126\0\2\u0401\56\0"+
    "\1\u0402\11\0\1\u0402\133\0\2\u0403\107\0\2\u0404\2\0"+
    "\2\u0405\3\0\3\u0406\75\0\2\u02b8\113\0\2\u0193\4\0"+
    "\2\u0407\101\0\2\u0222\6\0\2\u02b8\21\0\2\u0399\2\0"+
    "\2\u029d\54\0\2\u0181\23\0\2\u02b8\54\0\2\u0408\22\0"+
    "\2\u0409\47\0\1\u040a\11\0\1\u040a\101\0\1\u016c\105\0"+
    "\1\u040b\31\0\2\u040c\6\0\1\u018d\53\0\1\u040d\11\0"+
    "\1\u040d\2\0\1\u040d\140\0\2\u040e\75\0\2\u040f\61\0"+
    "\1\u0410\11\0\1\u0410\77\0\1\u0411\11\0\1\u0411\72\0"+
    "\1\u0412\1\u0367\2\u0172\1\0\1\u0413\1\u0361\1\0\1\u0362"+
    "\1\u0171\1\0\1\u0412\1\u0172\3\0\1\u0361\1\0\1\u0362"+
    "\1\u0171\1\0\1\u0362\7\0\2\u0186\2\u0120\2\0\2\u0187"+
    "\2\u0188\4\0\2\u0189\1\u0177\2\0\1\u0178\1\u0177\1\u0179"+
    "\1\324\4\0\2\u018a\2\0\2\u018b\1\u0412\12\0\1\u0412"+
    "\1\0\2\u0412\2\u0172\1\0\1\u0413\1\u0361\1\0\1\u0362"+
    "\1\u0171\1\0\1\u0412\1\u0172\3\0\1\u0361\1\0\1\u0362"+
    "\1\u0171\1\0\1\u0362\7\0\2\u0186\2\u0120\2\0\2\u0187"+
    "\2\u0188\4\0\2\u0189\1\u0177\2\0\1\u0178\1\u0177\1\u0179"+
    "\1\324\4\0\2\u018a\2\0\2\u018b\1\u0412\12\0\1\u0412"+
    "\7\0\1\u0414\11\0\1\u0414\101\0\1\u0415\11\0\1\u0415"+
    "\77\0\1\u0416\11\0\1\u0416\103\0\1\u0417\11\0\1\u0417"+
    "\134\0\2\u0407\111\0\2\u02b8\25\0\2\u029a\25\0\1\u0418"+
    "\11\0\1\u0418\2\0\1\u0418\76\0\1\u0419\11\0\1\u0419"+
    "\75\0\1\u041a\11\0\1\u041a\14\0\2\u037b\64\0\1\u0297"+
    "\1\u037d\10\0\1\u0297\1\u037d\1\0\1\u0297\3\0\2\u0204"+
    "\6\0\2\u0298\2\0\2\u0299\15\0\2\u037e\4\0\2\u037f"+
    "\2\u029a\52\0\2\u0382\35\0\2\u041b\50\0\2\u041c\105\0"+
    "\2\u041d\17\0\3\u041e\101\0\2\u041f\57\0\1\u0420\11\0"+
    "\1\u0420\77\0\1\u0421\11\0\1\u0421\14\0\2\u037b\64\0"+
    "\1\u0297\1\u037d\10\0\1\u0297\1\u037d\1\0\1\u0297\13\0"+
    "\2\u0298\2\0\2\u0299\15\0\2\u037e\4\0\2\u037f\2\u029a"+
    "\25\0\1\u0422\11\0\1\u0422\2\0\1\u0422\126\0\2\u0423"+
    "\5\0\3\u0424\110\0\3\u0425\2\u0426\35\0\1\u0115\1\u0427"+
    "\1\u0428\2\u0218\1\u0115\1\u0429\1\u042a\1\0\1\u02af\1\0"+
    "\1\u0115\1\u0428\1\u0218\1\u042b\1\u0115\1\0\1\u042a\1\0"+
    "\1\u018f\2\0\1\u018f\11\0\2\u021b\7\0\1\u0115\5\0"+
    "\2\u0115\16\0\1\u0428\1\u0115\2\0\2\u0115\3\0\2\u0115"+
    "\1\u0428\46\0\2\u037f\103\0\2\u042c\122\0\3\u0425\21\0"+
    "\2\u0383\65\0\3\u042d\47\0\1\u042e\11\0\1\u042e\141\0"+
    "\3\u02dd\77\0\2\u02dd\51\0\1\u0115\1\u0427\1\u0428\2\u0218"+
    "\1\u0115\1\u0429\1\u042a\1\0\1\u02af\1\0\1\u0115\1\u0428"+
    "\1\u0218\1\u042b\1\u0115\1\0\1\u042a\1\0\1\u018f\2\0"+
    "\1\u018f\7\0\2\u0382\2\u021b\7\0\1\u0115\5\0\2\u0115"+
    "\14\0\2\u0383\1\u042f\1\u0115\2\0\2\u0115\3\0\2\u0115"+
    "\1\u0428\46\0\2\u021d\52\0\1\u0430\11\0\1\u0430\142\0"+
    "\3\u0424\47\0\1\u0431\11\0\1\u0431\141\0\3\u02df\40\0"+
    "\2\u038a\2\u038b\1\0\1\u038c\1\u038d\1\u038e\1\u038f\2\0"+
    "\1\u038a\4\0\1\u038d\1\u038e\1\u038f\2\0\1\u038f\1\0"+
    "\2\u0390\4\0\2\u0391\4\0\2\u0392\2\u0393\4\0\2\u0394"+
    "\13\0\2\u0395\2\0\2\u0396\1\u038a\12\0\1\u038a\1\0"+
    "\2\u038b\3\0\1\u0432\1\u038d\1\u038e\1\u038f\2\0\1\u038b"+
    "\4\0\1\u038d\1\u038e\1\u038f\2\0\1\u038f\7\0\2\u0391"+
    "\4\0\2\u0392\2\u0393\4\0\2\u0394\13\0\2\u0395\2\0"+
    "\2\u0396\1\u038b\12\0\1\u038b\7\0\1\u0433\11\0\1\u0433"+
    "\145\0\2\u0434\106\0\3\u0435\77\0\2\u0436\52\0\2\u0437"+
    "\3\0\1\u0438\5\0\1\u0437\15\0\2\u0439\15\0\3\u0437"+
    "\2\0\1\u0190\2\0\4\u0190\2\0\2\u043a\6\0\1\u0437"+
    "\12\0\1\u0437\51\0\3\u043b\46\0\1\u043c\11\0\1\u043c"+
    "\131\0\2\u043d\113\0\2\u043e\113\0\2\u043f\105\0\2\u0440"+
    "\2\0\2\u0441\52\0\1\u02df\22\0\2\u02df\6\0\2\u02df"+
    "\12\0\2\u02df\65\0\2\u0126\6\0\2\u01f9\7\0\3\u01fa"+
    "\2\u01fb\101\0\2\u0442\57\0\1\u0443\11\0\1\u0443\76\0"+
    "\1\u0444\11\0\1\u0444\101\0\1\u0445\11\0\1\u0445\2\0"+
    "\1\u0445\135\0\3\u0446\110\0\3\u0447\2\u0448\36\0\2\u039f"+
    "\3\0\1\u0449\5\0\1\u039f\1\0\1\u044a\11\0\2\u0230"+
    "\45\0\1\u039f\12\0\1\u039f\46\0\2\u03a2\103\0\2\u044b"+
    "\122\0\3\u0447\21\0\2\u03a8\24\0\1\u044c\11\0\1\u044c"+
    "\141\0\3\u02ec\44\0\1\u02ec\22\0\2\u02ec\6\0\2\u02ec"+
    "\12\0\2\u02ec\106\0\3\u044d\110\0\3\u02f5\77\0\2\u02f5"+
    "\52\0\2\u039f\3\0\1\u0449\5\0\1\u039f\1\0\1\u044a"+
    "\11\0\2\u0230\4\0\2\u03a7\35\0\2\u03a8\1\u044e\12\0"+
    "\1\u039f\46\0\2\u0233\52\0\1\u044f\11\0\1\u044f\135\0"+
    "\2\u0450\75\0\2\u0451\74\0\1\u0133\145\0\2\u0240\52\0"+
    "\1\u0452\11\0\1\u0452\160\0\2\u024b\62\0\2\u0453\142\0"+
    "\2\u0454\60\0\2\u0455\111\0\2\u0456\146\0\2\u0103\26\0"+
    "\1\u0457\11\0\1\u0457\101\0\1\u0152\105\0\1\u0458\31\0"+
    "\2\u0459\6\0\1\u01d2\53\0\1\u045a\11\0\1\u045a\2\0"+
    "\1\u045a\74\0\1\u045b\11\0\1\u045b\77\0\1\u045c\11\0"+
    "\1\u045c\72\0\2\u03c3\2\u0158\1\0\1\u03c4\1\u0318\1\0"+
    "\1\u01d4\2\0\1\u03c3\1\u0158\3\0\1\u0318\1\0\1\u01d4"+
    "\2\0\1\u01d4\11\0\2\u015a\14\0\1\u010b\2\0\4\u010b"+
    "\10\0\2\u010c\1\u03c3\12\0\1\u03c3\7\0\1\u045d\11\0"+
    "\1\u045d\100\0\1\u045e\11\0\1\u045e\103\0\1\u045f\11\0"+
    "\1\u045f\77\0\1\u0460\11\0\1\u0460\2\0\1\u0460\76\0"+
    "\1\u0461\11\0\1\u0461\76\0\1\u0462\11\0\1\u0462\77\0"+
    "\1\u03da\11\0\1\u03da\14\0\2\u03ce\65\0\1\u03d0\11\0"+
    "\1\u03d0\40\0\2\u03d1\4\0\2\u03d2\27\0\1\u0463\11\0"+
    "\1\u0463\2\0\1\u0463\126\0\2\u0464\5\0\3\u0465\110\0"+
    "\3\u0466\2\u0467\36\0\2\u0468\3\0\1\u0469\1\u046a\1\0"+
    "\1\u01d4\2\0\1\u0468\1\0\1\u046b\2\0\1\u046a\1\0"+
    "\1\u01d4\2\0\1\u01d4\11\0\2\u026f\35\0\1\u0468\12\0"+
    "\1\u0468\46\0\2\u03d2\103\0\2\u046c\122\0\3\u0466\21\0"+
    "\2\u03d6\65\0\3\u046d\47\0\1\u046e\11\0\1\u046e\141\0"+
    "\3\u032f\77\0\2\u032f\52\0\2\u0468\3\0\1\u0469\1\u046a"+
    "\1\0\1\u01d4\2\0\1\u0468\1\0\1\u046b\2\0\1\u046a"+
    "\1\0\1\u01d4\2\0\1\u01d4\7\0\2\u03d5\2\u026f\33\0"+
    "\2\u03d6\1\u046f\12\0\1\u0468\46\0\2\u0271\52\0\1\u0470"+
    "\11\0\1\u0470\142\0\3\u0465\47\0\1\u0471\11\0\1\u0471"+
    "\141\0\3\u0331\40\0\2\u03dd\2\u03de\1\0\1\u03df\1\u03e0"+
    "\1\u03e1\1\u03e2\2\0\1\u03dd\4\0\1\u03e0\1\u03e1\1\u03e2"+
    "\2\0\1\u03e2\1\0\2\u03e3\4\0\2\u03e4\4\0\2\u03e5"+
    "\2\u03e6\4\0\2\u03e7\13\0\2\u03e8\2\0\2\u03e9\1\u03dd"+
    "\12\0\1\u03dd\1\0\2\u03de\3\0\1\u0472\1\u03e0\1\u03e1"+
    "\1\u03e2\2\0\1\u03de\4\0\1\u03e0\1\u03e1\1\u03e2\2\0"+
    "\1\u03e2\7\0\2\u03e4\4\0\2\u03e5\2\u03e6\4\0\2\u03e7"+
    "\13\0\2\u03e8\2\0\2\u03e9\1\u03de\12\0\1\u03de\7\0"+
    "\1\u0473\11\0\1\u0473\145\0\2\u0474\106\0\3\u0475\77\0"+
    "\2\u0476\52\0\2\u0477\3\0\1\u0478\5\0\1\u0477\15\0"+
    "\2\u0479\15\0\3\u0477\2\0\1\u01d5\2\0\4\u01d5\2\0"+
    "\2\u047a\6\0\1\u0477\12\0\1\u0477\51\0\3\u047b\46\0"+
    "\1\u047c\11\0\1\u047c\131\0\2\u047d\113\0\2\u047e\113\0"+
    "\2\u047f\105\0\2\u0480\2\0\2\u0481\52\0\1\u0331\22\0"+
    "\2\u0331\6\0\2\u0331\12\0\2\u0331\65\0\2\u0160\6\0"+
    "\2\u01db\115\0\2\u0482\57\0\1\u0483\11\0\1\u0483\76\0"+
    "\1\u0484\11\0\1\u0484\101\0\1\u0485\11\0\1\u0485\2\0"+
    "\1\u0485\135\0\3\u0486\110\0\3\u0487\2\u0488\36\0\2\u03f2"+
    "\3\0\1\u0489\5\0\1\u03f2\1\0\1\u048a\11\0\2\u0284"+
    "\45\0\1\u03f2\12\0\1\u03f2\46\0\2\u03f5\103\0\2\u048b"+
    "\122\0\3\u0487\21\0\2\u03fb\24\0\1\u048c\11\0\1\u048c"+
    "\141\0\3\u033e\44\0\1\u033e\22\0\2\u033e\6\0\2\u033e"+
    "\12\0\2\u033e\106\0\3\u048d\110\0\3\u0347\77\0\2\u0347"+
    "\52\0\2\u03f2\3\0\1\u0489\5\0\1\u03f2\1\0\1\u048a"+
    "\11\0\2\u0284\4\0\2\u03fa\35\0\2\u03fb\1\u048e\12\0"+
    "\1\u03f2\46\0\2\u0287\52\0\1\u048f\11\0\1\u048f\162\0"+
    "\2\u01e9\66\0\2\u0490\114\0\3\u0111\134\0\2\u02b8\54\0"+
    "\2\u0404\62\0\1\u01f1\11\0\1\u01f1\2\0\1\u01f1\73\0"+
    "\1\u0403\11\0\1\u0403\133\0\2\u0491\2\0\2\u0492\21\0"+
    "\2\u0493\2\0\2\u0494\70\0\2\u0495\44\0\1\u0496\1\0"+
    "\1\u0497\7\0\1\u0496\1\0\1\u0497\2\0\1\u0497\132\0"+
    "\2\u0498\56\0\1\u016d\137\0\2\u0499\52\0\2\u018d\2\0"+
    "\1\u018d\1\u018e\2\0\1\u018f\2\0\1\u018d\6\0\1\u018f"+
    "\2\0\1\u018f\27\0\1\u0190\2\0\4\u0190\10\0\2\u020e"+
    "\1\u018d\12\0\1\u018d\1\u0115\1\u02ab\1\u02ac\2\u011d\1\u0115"+
    "\1\u02ad\1\u02ae\1\0\1\u02af\1\0\1\u0115\1\u02ac\1\u011d"+
    "\1\u02b0\1\u0115\1\0\1\u02ae\1\0\1\u018f\2\0\1\u018f"+
    "\11\0\2\u0120\7\0\1\u0115\5\0\2\u0115\14\0\2\u0223"+
    "\1\u02e4\1\u0115\2\0\2\u0115\3\0\2\u0115\1\u02ac\7\0"+
    "\1\u049a\11\0\1\u049a\102\0\1\u0297\11\0\1\u0297\2\0"+
    "\1\u0297\3\0\2\u0204\6\0\2\u0298\2\0\2\u0299\25\0"+
    "\2\u029a\25\0\1\u049b\11\0\1\u049b\2\0\1\u049b\126\0"+
    "\2\u02a7\57\0\1\u049c\11\0\1\u049c\101\0\1\u049d\11\0"+
    "\1\u049d\2\0\1\u049d\132\0\2\u049e\56\0\1\u0172\77\0"+
    "\1\u0115\1\u02ab\1\u02ac\2\u011d\1\u0115\1\u02ad\1\u02ae\1\u011b"+
    "\1\u049f\1\0\1\u0115\1\u02ac\1\u011d\1\u02b0\1\u0115\1\0"+
    "\1\u02ae\1\u011b\1\u04a0\2\0\1\u04a0\11\0\2\u0120\4\0"+
    "\2\u04a1\1\0\1\u0115\5\0\2\u0115\10\0\2\u04a2\4\0"+
    "\1\u04a3\1\u0115\2\0\2\u0115\3\0\2\u0115\1\u02ac\13\0"+
    "\1\u018d\77\0\1\u01f7\2\0\37\u01f7\2\u04a4\5\u01f7\3\u04a5"+
    "\35\u01f7\42\0\2\u02dd\7\0\3\u0354\37\0\1\u0115\1\u0427"+
    "\1\u0428\2\u0218\1\u0115\1\u0429\1\u042a\1\0\1\u02af\1\0"+
    "\1\u0115\1\u0428\1\u0218\1\u042b\1\u0115\1\u02b8\1\u042a\1\0"+
    "\1\u018f\1\0\1\u02b8\1\u018f\7\0\2\u0382\2\u021b\7\0"+
    "\1\u0115\5\0\2\u0115\14\0\2\u0383\1\u042f\1\u0115\2\0"+
    "\2\u0115\3\0\2\u0115\1\u0428\34\0\2\u0297\10\0\2\u04a6"+
    "\52\0\1\u04a7\11\0\1\u04a7\142\0\3\u04a8\50\0\1\u04a9"+
    "\11\0\1\u04a9\2\0\1\u04a9\64\0\1\u01f7\2\0\46\u01f7"+
    "\3\u04a5\35\u01f7\14\0\1\u04aa\11\0\1\u04aa\174\0\2\u04ab"+
    "\43\0\2\u02d2\111\0\2\u04ac\146\0\2\u0383\15\0\1\u04ad"+
    "\1\u0428\2\u02c3\1\0\1\u04ae\1\u04af\1\0\1\u0362\1\u0171"+
    "\1\0\1\u04ad\1\u02c3\1\u04b0\2\0\1\u04af\1\0\1\u0362"+
    "\1\u0171\1\0\1\u0362\7\0\2\u0186\2\u021b\2\0\2\u0187"+
    "\2\u0188\4\0\2\u0189\1\u02c8\2\0\1\u02c9\1\u02c8\1\u02ca"+
    "\5\0\2\u018a\2\0\2\u02d5\1\u04ad\12\0\1\u04ad\1\0"+
    "\2\u04ad\2\u02c3\1\0\1\u04ae\1\u04af\1\0\1\u0362\1\u0171"+
    "\1\0\1\u04ad\1\u02c3\1\u04b0\2\0\1\u04af\1\0\1\u0362"+
    "\1\u0171\1\0\1\u0362\7\0\2\u0186\2\u021b\2\0\2\u0187"+
    "\2\u0188\4\0\2\u0189\1\u02c8\2\0\1\u02c9\1\u02c8\1\u02ca"+
    "\5\0\2\u018a\2\0\2\u02d5\1\u04ad\12\0\1\u04ad\7\0"+
    "\1\u04b1\11\0\1\u04b1\145\0\2\u04b2\35\0\1\u0115\1\u04b3"+
    "\1\u04b4\2\u0218\1\u0115\1\u04b5\1\u042a\1\0\1\u02af\1\0"+
    "\1\u0115\1\u04b4\1\u0218\2\u0115\1\0\1\u042a\1\0\1\u018f"+
    "\2\0\1\u018f\11\0\2\u021b\7\0\1\u0115\5\0\2\u0115"+
    "\16\0\1\u04b4\1\u0115\2\0\2\u0115\3\0\2\u0115\1\u04b4"+
    "\67\0\2\u037c\62\0\2\u04b6\62\0\1\u04b7\11\0\1\u04b7"+
    "\2\0\1\u04b7\65\0\2\u04ad\2\u02c3\1\0\1\u04ae\1\u04af"+
    "\1\0\1\u0362\1\u0171\1\0\1\u04ad\1\u02c3\1\u04b0\2\0"+
    "\1\u04af\1\0\1\u0362\1\u0171\1\0\1\u0362\7\0\2\u0186"+
    "\2\u021b\2\0\2\u0187\2\u0188\4\0\2\u0189\1\u02c8\2\0"+
    "\1\u02c9\1\u02c8\1\u02ca\5\0\2\u018a\2\0\2\u04b8\1\u04ad"+
    "\12\0\1\u04ad\36\0\2\u0382\31\0\2\u04b9\2\0\2\u0383"+
    "\25\0\1\u04ba\11\0\1\u04ba\2\0\1\u04ba\73\0\1\u04bb"+
    "\11\0\1\u04bb\101\0\1\u04bc\11\0\1\u04bc\77\0\1\u04bd"+
    "\11\0\1\u04bd\14\0\2\u04be\64\0\1\u04bf\11\0\1\u04bf"+
    "\2\0\1\u04bf\76\0\1\u04c0\11\0\1\u04c0\40\0\2\u04c1"+
    "\4\0\2\u04c2\17\0\2\u0437\3\0\1\u0438\5\0\1\u0437"+
    "\41\0\1\u0190\2\0\4\u0190\12\0\1\u0437\12\0\1\u0437"+
    "\7\0\1\u04c3\11\0\1\u04c3\160\0\2\u04c4\23\0\2\u0437"+
    "\3\0\1\u0438\5\0\1\u0437\41\0\1\u0190\2\0\4\u0190"+
    "\2\0\2\u04c5\6\0\1\u0437\12\0\1\u0437\42\0\2\u04c6"+
    "\105\0\2\u04c7\35\0\2\u04c8\50\0\2\u04c9\123\0\2\u04be"+
    "\73\0\2\u04ca\17\0\3\u04cb\101\0\2\u04bd\123\0\2\u043c"+
    "\106\0\3\u02a9\52\0\1\u0198\110\0\1\u04cc\11\0\1\u04cc"+
    "\2\0\1\u04cc\76\0\1\u04cd\11\0\1\u04cd\126\0\2\u02ea"+
    "\111\0\2\u04ce\146\0\2\u03a8\23\0\1\u04cf\11\0\1\u04cf"+
    "\72\0\2\u044a\3\0\1\u04d0\5\0\1\u044a\13\0\2\u0230"+
    "\45\0\1\u044a\12\0\1\u044a\67\0\2\u039f\33\0\1\u04d1"+
    "\11\0\1\u04d1\2\0\1\u04d1\124\0\2\u04d2\52\0\2\u039f"+
    "\3\0\1\u0449\5\0\1\u039f\1\0\1\u044a\11\0\2\u0230"+
    "\43\0\2\u03a8\1\u039f\12\0\1\u039f\36\0\2\u03a7\31\0"+
    "\2\u04d3\2\0\2\u03a8\62\0\2\u04d4\101\0\2\u04d4\144\0"+
    "\2\u04d5\54\0\2\u04d6\121\0\2\u01c1\56\0\1\u04d6\11\0"+
    "\1\u04d6\2\0\1\u04d6\75\0\1\u04d7\11\0\1\u04d7\2\0"+
    "\1\u04d7\77\0\1\u0153\137\0\2\u04d8\52\0\2\u01d2\2\0"+
    "\1\u01d2\1\u01d3\2\0\1\u01d4\2\0\1\u01d2\6\0\1\u01d4"+
    "\2\0\1\u01d4\27\0\1\u01d5\2\0\4\u01d5\10\0\2\u0265"+
    "\1\u01d2\12\0\1\u01d2\1\0\2\u0316\2\u0158\1\0\1\u0317"+
    "\1\u0318\1\0\1\u01d4\2\0\1\u0316\1\u0158\1\u0319\2\0"+
    "\1\u0318\1\0\1\u01d4\2\0\1\u01d4\11\0\2\u015a\33\0"+
    "\2\u0277\1\u0336\12\0\1\u0316\11\0\1\u04d9\11\0\1\u04d9"+
    "\2\0\1\u04d9\126\0\2\u0312\57\0\1\u04da\11\0\1\u04da"+
    "\136\0\2\u04db\56\0\1\u0158\100\0\2\u0316\2\u0158\1\0"+
    "\1\u0317\1\u0318\1\u0156\1\u04dc\2\0\1\u0316\1\u0158\1\u0319"+
    "\2\0\1\u0318\1\u0156\1\u04dc\2\0\1\u04dc\11\0\2\u015a"+
    "\4\0\2\u04dd\21\0\2\u04de\4\0\1\u04df\12\0\1\u0316"+
    "\13\0\1\u01d2\110\0\1\u04e0\11\0\1\u04e0\2\0\1\u04e0"+
    "\76\0\1\u04e1\11\0\1\u04e1\174\0\2\u04e2\43\0\2\u0326"+
    "\111\0\2\u04e3\146\0\2\u03d6\23\0\1\u04e4\11\0\1\u04e4"+
    "\145\0\2\u04e5\36\0\2\u04e6\3\0\1\u04e7\1\u046a\1\0"+
    "\1\u01d4\2\0\1\u04e6\4\0\1\u046a\1\0\1\u01d4\2\0"+
    "\1\u01d4\11\0\2\u026f\35\0\1\u04e6\12\0\1\u04e6\67\0"+
    "\2\u03cf\62\0\2\u04e8\62\0\1\u04e9\11\0\1\u04e9\2\0"+
    "\1\u04e9\65\0\2\u0468\3\0\1\u0469\1\u046a\1\0\1\u01d4"+
    "\2\0\1\u0468\1\0\1\u046b\2\0\1\u046a\1\0\1\u01d4"+
    "\2\0\1\u01d4\11\0\2\u026f\33\0\2\u03d6\1\u0468\12\0"+
    "\1\u0468\36\0\2\u03d5\31\0\2\u04ea\2\0\2\u03d6\25\0"+
    "\1\u04eb\11\0\1\u04eb\2\0\1\u04eb\73\0\1\u04ec\11\0"+
    "\1\u04ec\101\0\1\u04ed\11\0\1\u04ed\77\0\1\u04ee\11\0"+
    "\1\u04ee\14\0\2\u04ef\64\0\1\u04f0\11\0\1\u04f0\2\0"+
    "\1\u04f0\76\0\1\u04f1\11\0\1\u04f1\40\0\2\u04f2\4\0"+
    "\2\u04f3\17\0\2\u0477\3\0\1\u0478\5\0\1\u0477\41\0"+
    "\1\u01d5\2\0\4\u01d5\12\0\1\u0477\12\0\1\u0477\7\0"+
    "\1\u04f4\11\0\1\u04f4\160\0\2\u04f5\23\0\2\u0477\3\0"+
    "\1\u0478\5\0\1\u0477\41\0\1\u01d5\2\0\4\u01d5\2\0"+
    "\2\u04f6\6\0\1\u0477\12\0\1\u0477\42\0\2\u04f7\105\0"+
    "\2\u04f8\35\0\2\u04f9\50\0\2\u04fa\123\0\2\u04ef\73\0"+
    "\2\u04fb\17\0\3\u04fc\101\0\2\u04ee\123\0\2\u047c\106\0"+
    "\3\u0314\52\0\1\u01dd\110\0\1\u04fd\11\0\1\u04fd\2\0"+
    "\1\u04fd\76\0\1\u04fe\11\0\1\u04fe\126\0\2\u033c\111\0"+
    "\2\u04ff\146\0\2\u03fb\23\0\1\u0500\11\0\1\u0500\72\0"+
    "\2\u048a\3\0\1\u0501\5\0\1\u048a\13\0\2\u0284\45\0"+
    "\1\u048a\12\0\1\u048a\67\0\2\u03f2\33\0\1\u0502\11\0"+
    "\1\u0502\2\0\1\u0502\124\0\2\u0503\52\0\2\u03f2\3\0"+
    "\1\u0489\5\0\1\u03f2\1\0\1\u048a\11\0\2\u0284\43\0"+
    "\2\u03fb\1\u03f2\12\0\1\u03f2\36\0\2\u03fa\31\0\2\u0504"+
    "\2\0\2\u03fb\62\0\2\207\114\0\3\u0505\73\0\2\u0506"+
    "\121\0\2\u0507\111\0\2\u0403\101\0\2\u01fb\64\0\1\u0508"+
    "\11\0\1\u0508\102\0\1\u0509\11\0\1\u0509\2\0\1\u0509"+
    "\132\0\2\u0403\73\0\2\u050a\2\u050b\57\0\1\u01f7\2\0"+
    "\37\u01f7\2\u0351\45\u01f7\14\0\1\u050c\11\0\1\u050c\77\0"+
    "\1\u050d\11\0\1\u050d\2\0\1\u050d\76\0\1\u050e\11\0"+
    "\1\u050e\66\0\1\u050f\2\0\106\u050f\42\0\2\u0510\111\0"+
    "\2\u0511\115\0\2\u0512\46\0\2\u035f\2\u0172\1\0\1\u0360"+
    "\1\u0361\1\u011b\1\u0513\1\u0171\1\0\1\u035f\1\u0172\1\u0363"+
    "\2\0\1\u0361\1\u011b\1\u0513\1\u0171\1\0\1\u0513\7\0"+
    "\2\u0186\2\u0120\2\0\2\u0187\2\u0514\4\0\2\u0189\1\u0177"+
    "\2\0\1\u0178\1\u0177\1\u0179\1\324\4\0\2\u0515\2\0"+
    "\2\u018b\1\u035f\12\0\1\u035f\40\0\2\u02da\4\0\2\u0407"+
    "\101\0\2\u0382\6\0\2\u02b8\21\0\2\u04b9\2\0\2\u041b"+
    "\54\0\2\u02d2\23\0\2\u02b8\36\0\1\u0516\11\0\1\u0516"+
    "\101\0\1\u02be\105\0\1\u0517\31\0\2\u0518\6\0\1\u02d7"+
    "\53\0\1\u0519\11\0\1\u0519\2\0\1\u0519\140\0\2\u051a"+
    "\45\0\1\u051b\11\0\1\u051b\77\0\1\u051c\11\0\1\u051c"+
    "\72\0\1\u051d\1\u04b4\2\u02c3\1\0\1\u051e\1\u04af\1\0"+
    "\1\u0362\1\u0171\1\0\1\u051d\1\u02c3\3\0\1\u04af\1\0"+
    "\1\u0362\1\u0171\1\0\1\u0362\7\0\2\u0186\2\u021b\2\0"+
    "\2\u0187\2\u0188\4\0\2\u0189\1\u02c8\2\0\1\u02c9\1\u02c8"+
    "\1\u02ca\5\0\2\u018a\2\0\2\u02d5\1\u051d\12\0\1\u051d"+
    "\1\0\2\u051d\2\u02c3\1\0\1\u051e\1\u04af\1\0\1\u0362"+
    "\1\u0171\1\0\1\u051d\1\u02c3\3\0\1\u04af\1\0\1\u0362"+
    "\1\u0171\1\0\1\u0362\7\0\2\u0186\2\u021b\2\0\2\u0187"+
    "\2\u0188\4\0\2\u0189\1\u02c8\2\0\1\u02c9\1\u02c8\1\u02ca"+
    "\5\0\2\u018a\2\0\2\u02d5\1\u051d\12\0\1\u051d\7\0"+
    "\1\u051f\11\0\1\u051f\102\0\1\u0520\11\0\1\u0520\2\0"+
    "\1\u0520\76\0\1\u0521\11\0\1\u0521\126\0\2\u0375\7\0"+
    "\3\u01fa\2\u01fb\101\0\2\u0522\57\0\1\u0523\11\0\1\u0523"+
    "\76\0\1\u0524\11\0\1\u0524\101\0\1\u0525\11\0\1\u0525"+
    "\2\0\1\u0525\135\0\3\u0526\110\0\3\u0527\2\u0528\36\0"+
    "\2\u04bf\3\0\1\u0529\5\0\1\u04bf\1\0\1\u052a\11\0"+
    "\2\u0390\45\0\1\u04bf\12\0\1\u04bf\46\0\2\u04c2\103\0"+
    "\2\u052b\122\0\3\u0527\21\0\2\u04c8\24\0\1\u052c\11\0"+
    "\1\u052c\141\0\3\u0437\44\0\1\u0437\22\0\2\u0437\6\0"+
    "\2\u0437\12\0\2\u0437\106\0\3\u052d\110\0\3\u0440\77\0"+
    "\2\u0440\52\0\2\u04bf\3\0\1\u0529\5\0\1\u04bf\1\0"+
    "\1\u052a\11\0\2\u0390\4\0\2\u04c7\35\0\2\u04c8\1\u052e"+
    "\12\0\1\u04bf\46\0\2\u0393\52\0\1\u052f\11\0\1\u052f"+
    "\103\0\1\u0530\11\0\1\u0530\101\0\1\u022a\110\0\1\u0531"+
    "\11\0\1\u0531\2\0\1\u0531\74\0\1\u0532\11\0\1\u0532"+
    "\77\0\1\u0533\11\0\1\u0533\103\0\1\u0534\11\0\1\u0534"+
    "\77\0\1\u0535\11\0\1\u0535\2\0\1\u0535\130\0\2\u0536"+
    "\105\0\2\u01ab\115\0\2\253\75\0\2\u0537\2\u0538\71\0"+
    "\1\u0539\11\0\1\u0539\77\0\1\u053a\11\0\1\u053a\2\0"+
    "\1\u053a\64\0\1\u031c\2\0\106\u031c\42\0\2\u053b\111\0"+
    "\2\u053c\115\0\2\u053d\46\0\2\u0316\2\u0158\1\0\1\u0317"+
    "\1\u0318\1\u0156\1\u04dc\2\0\1\u0316\1\u0158\1\u0319\2\0"+
    "\1\u0318\1\u0156\1\u04dc\2\0\1\u04dc\11\0\2\u015a\4\0"+
    "\2\u04dd\6\0\1\u010b\2\0\4\u010b\4\0\2\u04de\2\0"+
    "\2\u010c\1\u0316\12\0\1\u0316\12\0\1\u053e\11\0\1\u053e"+
    "\101\0\1\u0268\105\0\1\u053f\31\0\2\u0540\6\0\1\u0329"+
    "\53\0\1\u0541\11\0\1\u0541\2\0\1\u0541\74\0\1\u0542"+
    "\11\0\1\u0542\77\0\1\u0543\11\0\1\u0543\100\0\1\u0544"+
    "\11\0\1\u0544\102\0\1\u0545\11\0\1\u0545\2\0\1\u0545"+
    "\76\0\1\u0546\11\0\1\u0546\132\0\2\u0547\57\0\1\u0548"+
    "\11\0\1\u0548\76\0\1\u0549\11\0\1\u0549\101\0\1\u054a"+
    "\11\0\1\u054a\2\0\1\u054a\135\0\3\u054b\110\0\3\u054c"+
    "\2\u054d\36\0\2\u04f0\3\0\1\u054e\5\0\1\u04f0\1\0"+
    "\1\u054f\11\0\2\u03e3\45\0\1\u04f0\12\0\1\u04f0\46\0"+
    "\2\u04f3\103\0\2\u0550\122\0\3\u054c\21\0\2\u04f9\24\0"+
    "\1\u0551\11\0\1\u0551\141\0\3\u0477\44\0\1\u0477\22\0"+
    "\2\u0477\6\0\2\u0477\12\0\2\u0477\106\0\3\u0552\110\0"+
    "\3\u0480\77\0\2\u0480\52\0\2\u04f0\3\0\1\u054e\5\0"+
    "\1\u04f0\1\0\1\u054f\11\0\2\u03e3\4\0\2\u04f8\35\0"+
    "\2\u04f9\1\u0553\12\0\1\u04f0\46\0\2\u03e6\52\0\1\u0554"+
    "\11\0\1\u0554\103\0\1\u0555\11\0\1\u0555\101\0\1\u027e"+
    "\110\0\1\u0556\11\0\1\u0556\2\0\1\u0556\74\0\1\u0557"+
    "\11\0\1\u0557\77\0\1\u0558\11\0\1\u0558\103\0\1\u0559"+
    "\11\0\1\u0559\77\0\1\u055a\11\0\1\u055a\2\0\1\u055a"+
    "\130\0\2\u055b\54\0\1\u055c\11\0\1\u055c\131\0\2\u0403"+
    "\101\0\2\u055d\135\0\2\u055e\75\0\2\u0409\113\0\2\u055f"+
    "\103\0\2\u0560\70\0\1\u035f\111\0\1\u0561\11\0\1\u0561"+
    "\101\0\1\u02c3\131\0\2\u0204\31\0\2\u0205\60\0\2\u0202"+
    "\105\0\2\u0562\17\0\3\u0563\77\0\2\u0564\105\0\2\u01f4"+
    "\2\0\2\u0565\115\0\2\u0566\60\0\1\u02bf\137\0\2\u0567"+
    "\52\0\2\u02d7\2\0\1\u02d7\1\u02d8\2\0\1\u018f\2\0"+
    "\1\u02d7\6\0\1\u018f\2\0\1\u018f\50\0\1\u02d7\12\0"+
    "\1\u02d7\1\u0115\1\u0427\1\u0428\2\u0218\1\u0115\1\u0429\1\u042a"+
    "\1\0\1\u02af\1\0\1\u0115\1\u0428\1\u0218\1\u042b\1\u0115"+
    "\1\0\1\u042a\1\0\1\u018f\2\0\1\u018f\11\0\2\u021b"+
    "\7\0\1\u0115\5\0\2\u0115\14\0\2\u0383\1\u042f\1\u0115"+
    "\2\0\2\u0115\3\0\2\u0115\1\u0428\7\0\1\u0568\11\0"+
    "\1\u0568\102\0\1\u0569\11\0\1\u0569\2\0\1\u0569\126\0"+
    "\2\u0423\57\0\1\u056a\11\0\1\u056a\70\0\1\u0115\1\u0427"+
    "\1\u0428\2\u0218\1\u0115\1\u0429\1\u042a\1\u0216\1\u056b\1\0"+
    "\1\u0115\1\u0428\1\u0218\1\u042b\1\u0115\1\0\1\u042a\1\u0216"+
    "\1\u056c\2\0\1\u056c\11\0\2\u021b\4\0\2\u056d\1\0"+
    "\1\u0115\5\0\2\u0115\10\0\2\u056e\4\0\1\u056f\1\u0115"+
    "\2\0\2\u0115\3\0\2\u0115\1\u0428\13\0\1\u02d7\150\0"+
    "\3\u0425\52\0\1\u02df\110\0\1\u0570\11\0\1\u0570\2\0"+
    "\1\u0570\76\0\1\u0571\11\0\1\u0571\126\0\2\u0435\111\0"+
    "\2\u0572\146\0\2\u04c8\23\0\1\u0573\11\0\1\u0573\72\0"+
    "\2\u052a\3\0\1\u0574\5\0\1\u052a\13\0\2\u0390\45\0"+
    "\1\u052a\12\0\1\u052a\67\0\2\u04bf\33\0\1\u0575\11\0"+
    "\1\u0575\2\0\1\u0575\124\0\2\u0576\52\0\2\u04bf\3\0"+
    "\1\u0529\5\0\1\u04bf\1\0\1\u052a\11\0\2\u0390\43\0"+
    "\2\u04c8\1\u04bf\12\0\1\u04bf\36\0\2\u04c7\31\0\2\u0577"+
    "\2\0\2\u04c8\27\0\1\u022b\100\0\2\u039f\3\0\1\u0449"+
    "\5\0\1\u039f\1\0\1\u044a\11\0\2\u0230\43\0\2\u03a8"+
    "\1\u044e\12\0\1\u039f\11\0\1\u0578\11\0\1\u0578\2\0"+
    "\1\u0578\74\0\1\u0579\11\0\1\u0579\103\0\1\u02ec\100\0"+
    "\2\u039f\3\0\1\u0449\1\0\1\u022e\1\u057a\2\0\1\u039f"+
    "\1\0\1\u044a\3\0\1\u022e\1\u057a\2\0\1\u057a\1\0"+
    "\2\u0230\14\0\2\u057b\21\0\2\u057c\4\0\1\u057d\12\0"+
    "\1\u039f\51\0\3\u0447\101\0\2\u057e\103\0\2\u057f\70\0"+
    "\1\u0316\111\0\1\u0580\11\0\1\u0580\120\0\2\u0260\31\0"+
    "\2\u0261\60\0\2\u025e\105\0\2\u0581\17\0\3\u0582\52\0"+
    "\1\u0269\137\0\2\u0583\52\0\2\u0329\2\0\1\u0329\1\u032a"+
    "\2\0\1\u01d4\2\0\1\u0329\6\0\1\u01d4\2\0\1\u01d4"+
    "\50\0\1\u0329\12\0\1\u0329\1\0\2\u0468\3\0\1\u0469"+
    "\1\u046a\1\0\1\u01d4\2\0\1\u0468\1\0\1\u046b\2\0"+
    "\1\u046a\1\0\1\u01d4\2\0\1\u01d4\11\0\2\u026f\33\0"+
    "\2\u03d6\1\u046f\12\0\1\u0468\11\0\1\u0584\11\0\1\u0584"+
    "\2\0\1\u0584\126\0\2\u0464\57\0\1\u0585\11\0\1\u0585"+
    "\71\0\2\u0468\3\0\1\u0469\1\u046a\1\u026c\1\u0586\2\0"+
    "\1\u0468\1\0\1\u046b\2\0\1\u046a\1\u026c\1\u0586\2\0"+
    "\1\u0586\11\0\2\u026f\4\0\2\u0587\21\0\2\u0588\4\0"+
    "\1\u0589\12\0\1\u0468\13\0\1\u0329\150\0\3\u0466\52\0"+
    "\1\u0331\110\0\1\u058a\11\0\1\u058a\2\0\1\u058a\76\0"+
    "\1\u058b\11\0\1\u058b\126\0\2\u0475\111\0\2\u058c\146\0"+
    "\2\u04f9\23\0\1\u058d\11\0\1\u058d\72\0\2\u054f\3\0"+
    "\1\u058e\5\0\1\u054f\13\0\2\u03e3\45\0\1\u054f\12\0"+
    "\1\u054f\67\0\2\u04f0\33\0\1\u058f\11\0\1\u058f\2\0"+
    "\1\u058f\124\0\2\u0590\52\0\2\u04f0\3\0\1\u054e\5\0"+
    "\1\u04f0\1\0\1\u054f\11\0\2\u03e3\43\0\2\u04f9\1\u04f0"+
    "\12\0\1\u04f0\36\0\2\u04f8\31\0\2\u0591\2\0\2\u04f9"+
    "\27\0\1\u027f\100\0\2\u03f2\3\0\1\u0489\5\0\1\u03f2"+
    "\1\0\1\u048a\11\0\2\u0284\43\0\2\u03fb\1\u048e\12\0"+
    "\1\u03f2\11\0\1\u0592\11\0\1\u0592\2\0\1\u0592\74\0"+
    "\1\u0593\11\0\1\u0593\103\0\1\u033e\100\0\2\u03f2\3\0"+
    "\1\u0489\1\0\1\u0282\1\u0594\2\0\1\u03f2\1\0\1\u048a"+
    "\3\0\1\u0282\1\u0594\2\0\1\u0594\1\0\2\u0284\14\0"+
    "\2\u0595\21\0\2\u0596\4\0\1\u0597\12\0\1\u03f2\51\0"+
    "\3\u0487\130\0\2\u0494\66\0\2\u0598\101\0\2\u0403\117\0"+
    "\2\u0599\75\0\2\u059a\74\0\1\u0412\145\0\2\u04a1\52\0"+
    "\1\u059b\11\0\1\u059b\102\0\1\u0297\11\0\1\u0297\2\0"+
    "\1\u0297\3\0\2\u0204\6\0\2\u0298\2\0\2\u0299\15\0"+
    "\2\u0205\6\0\2\u029a\50\0\2\u059c\105\0\2\u059d\17\0"+
    "\3\u059e\67\0\2\u059f\2\u05a0\57\0\1\u01f7\2\0\37\u01f7"+
    "\2\u04a4\45\u01f7\14\0\1\u05a1\11\0\1\u05a1\77\0\1\u05a2"+
    "\11\0\1\u05a2\2\0\1\u05a2\124\0\2\u05a3\111\0\2\u05a4"+
    "\115\0\2\u05a5\46\0\2\u04ad\2\u02c3\1\0\1\u04ae\1\u04af"+
    "\1\u0216\1\u05a6\1\u0171\1\0\1\u04ad\1\u02c3\1\u04b0\2\0"+
    "\1\u04af\1\u0216\1\u05a6\1\u0171\1\0\1\u05a6\7\0\2\u0186"+
    "\2\u021b\2\0\2\u0187\2\u05a7\4\0\2\u0189\1\u02c8\2\0"+
    "\1\u02c9\1\u02c8\1\u02ca\5\0\2\u05a8\2\0\2\u02d5\1\u04ad"+
    "\12\0\1\u04ad\12\0\1\u05a9\11\0\1\u05a9\101\0\1\u038a"+
    "\110\0\1\u05aa\11\0\1\u05aa\2\0\1\u05aa\74\0\1\u05ab"+
    "\11\0\1\u05ab\77\0\1\u05ac\11\0\1\u05ac\103\0\1\u05ad"+
    "\11\0\1\u05ad\77\0\1\u05ae\11\0\1\u05ae\2\0\1\u05ae"+
    "\130\0\2\u05af\57\0\1\u05b0\11\0\1\u05b0\77\0\1\u05b1"+
    "\11\0\1\u05b1\2\0\1\u05b1\124\0\2\u05b2\111\0\2\u05b3"+
    "\115\0\2\u05b4\46\0\2\u039f\3\0\1\u0449\1\0\1\u022e"+
    "\1\u057a\2\0\1\u039f\1\0\1\u044a\3\0\1\u022e\1\u057a"+
    "\2\0\1\u057a\1\0\2\u0230\14\0\2\u057b\21\0\2\u057c"+
    "\4\0\1\u039f\12\0\1\u039f\44\0\2\u05b5\75\0\2\u05b6"+
    "\74\0\1\u03c3\145\0\2\u04dd\52\0\1\u05b7\11\0\1\u05b7"+
    "\121\0\2\u05b8\2\u05b9\71\0\1\u05ba\11\0\1\u05ba\77\0"+
    "\1\u05bb\11\0\1\u05bb\2\0\1\u05bb\124\0\2\u05bc\111\0"+
    "\2\u05bd\115\0\2\u05be\46\0\2\u0468\3\0\1\u0469\1\u046a"+
    "\1\u026c\1\u0586\2\0\1\u0468\1\0\1\u046b\2\0\1\u046a"+
    "\1\u026c\1\u0586\2\0\1\u0586\11\0\2\u026f\4\0\2\u0587"+
    "\21\0\2\u0588\4\0\1\u0468\12\0\1\u0468\12\0\1\u05bf"+
    "\11\0\1\u05bf\101\0\1\u03dd\110\0\1\u05c0\11\0\1\u05c0"+
    "\2\0\1\u05c0\74\0\1\u05c1\11\0\1\u05c1\77\0\1\u05c2"+
    "\11\0\1\u05c2\103\0\1\u05c3\11\0\1\u05c3\77\0\1\u05c4"+
    "\11\0\1\u05c4\2\0\1\u05c4\130\0\2\u05c5\57\0\1\u05c6"+
    "\11\0\1\u05c6\77\0\1\u05c7\11\0\1\u05c7\2\0\1\u05c7"+
    "\124\0\2\u05c8\111\0\2\u05c9\115\0\2\u05ca\46\0\2\u03f2"+
    "\3\0\1\u0489\1\0\1\u0282\1\u0594\2\0\1\u03f2\1\0"+
    "\1\u048a\3\0\1\u0282\1\u0594\2\0\1\u0594\1\0\2\u0284"+
    "\14\0\2\u0595\21\0\2\u0596\4\0\1\u03f2\12\0\1\u03f2"+
    "\46\0\2\u05cb\111\0\2\u05cc\101\0\2\u05cc\144\0\2\u05cd"+
    "\20\0\1\u0115\1\u02ab\1\u02ac\2\u011d\1\u0115\1\u02ad\1\u02ae"+
    "\1\0\1\u02af\1\0\1\u0115\1\u02ac\1\u011d\1\u02b0\1\u0115"+
    "\1\u02b8\1\u02ae\1\0\1\u018f\1\0\1\u02b8\1\u018f\11\0"+
    "\2\u0120\7\0\1\u0115\5\0\2\u0115\16\0\1\u02ac\1\u0115"+
    "\2\0\2\u0115\3\0\2\u0115\1\u02ac\34\0\2\u0297\10\0"+
    "\2\u05ce\52\0\1\u05cf\11\0\1\u05cf\133\0\2\u05d0\103\0"+
    "\2\u05d1\70\0\1\u04ad\111\0\1\u05d2\11\0\1\u05d2\120\0"+
    "\2\u0204\31\0\2\u037e\60\0\2\u037c\105\0\2\u05d3\17\0"+
    "\3\u05d4\77\0\2\u05d5\105\0\2\u01f4\2\0\2\u05d6\115\0"+
    "\2\u05d7\60\0\1\u038b\100\0\2\u04bf\3\0\1\u0529\5\0"+
    "\1\u04bf\1\0\1\u052a\11\0\2\u0390\43\0\2\u04c8\1\u052e"+
    "\12\0\1\u04bf\11\0\1\u05d8\11\0\1\u05d8\2\0\1\u05d8"+
    "\74\0\1\u05d9\11\0\1\u05d9\103\0\1\u0437\100\0\2\u04bf"+
    "\3\0\1\u0529\1\0\1\u038e\1\u05da\2\0\1\u04bf\1\0"+
    "\1\u052a\3\0\1\u038e\1\u05da\2\0\1\u05da\1\0\2\u0390"+
    "\14\0\2\u05db\21\0\2\u05dc\4\0\1\u05dd\12\0\1\u04bf"+
    "\51\0\3\u0527\52\0\1\u039f\111\0\1\u05de\11\0\1\u05de"+
    "\153\0\2\u03a1\60\0\2\u039f\105\0\2\u05df\17\0\3\u05e0"+
    "\105\0\2\u05e1\101\0\2\u05e1\144\0\2\u05e2\62\0\2\u05e3"+
    "\103\0\2\u05e4\70\0\1\u0468\111\0\1\u05e5\11\0\1\u05e5"+
    "\120\0\2\u0260\31\0\2\u03d1\60\0\2\u03cf\105\0\2\u05e6"+
    "\17\0\3\u05e7\52\0\1\u03de\100\0\2\u04f0\3\0\1\u054e"+
    "\5\0\1\u04f0\1\0\1\u054f\11\0\2\u03e3\43\0\2\u04f9"+
    "\1\u0553\12\0\1\u04f0\11\0\1\u05e8\11\0\1\u05e8\2\0"+
    "\1\u05e8\74\0\1\u05e9\11\0\1\u05e9\103\0\1\u0477\100\0"+
    "\2\u04f0\3\0\1\u054e\1\0\1\u03e1\1\u05ea\2\0\1\u04f0"+
    "\1\0\1\u054f\3\0\1\u03e1\1\u05ea\2\0\1\u05ea\1\0"+
    "\2\u03e3\14\0\2\u05eb\21\0\2\u05ec\4\0\1\u05ed\12\0"+
    "\1\u04f0\51\0\3\u054c\52\0\1\u03f2\111\0\1\u05ee\11\0"+
    "\1\u05ee\153\0\2\u03f4\60\0\2\u03f2\105\0\2\u05ef\17\0"+
    "\3\u05f0\73\0\2\u0403\115\0\2\u0419\115\0\2\u0227\105\0"+
    "\2\u0511\4\0\2\u0407\111\0\2\u02b8\21\0\2\u05cd\2\0"+
    "\2\u029a\60\0\2\u05f1\75\0\2\u05f2\74\0\1\u051d\145\0"+
    "\2\u056d\52\0\1\u05f3\11\0\1\u05f3\102\0\1\u0297\11\0"+
    "\1\u0297\2\0\1\u0297\3\0\2\u0204\6\0\2\u0298\2\0"+
    "\2\u0299\15\0\2\u037e\6\0\2\u029a\50\0\2\u05f4\105\0"+
    "\2\u05f5\17\0\3\u05f6\51\0\1\u05f7\11\0\1\u05f7\77\0"+
    "\1\u05f8\11\0\1\u05f8\2\0\1\u05f8\124\0\2\u05f9\111\0"+
    "\2\u05fa\115\0\2\u05fb\46\0\2\u04bf\3\0\1\u0529\1\0"+
    "\1\u038e\1\u05da\2\0\1\u04bf\1\0\1\u052a\3\0\1\u038e"+
    "\1\u05da\2\0\1\u05da\1\0\2\u0390\14\0\2\u05db\21\0"+
    "\2\u05dc\4\0\1\u04bf\12\0\1\u04bf\13\0\1\u044a\145\0"+
    "\2\u057b\52\0\1\u05fc\11\0\1\u05fc\131\0\2\u0461\115\0"+
    "\2\u027b\111\0\2\u05fd\75\0\2\u05fe\74\0\1\u04e6\145\0"+
    "\2\u0587\52\0\1\u05ff\11\0\1\u05ff\103\0\1\u0600\11\0"+
    "\1\u0600\77\0\1\u0601\11\0\1\u0601\2\0\1\u0601\124\0"+
    "\2\u0602\111\0\2\u0603\115\0\2\u0604\46\0\2\u04f0\3\0"+
    "\1\u054e\1\0\1\u03e1\1\u05ea\2\0\1\u04f0\1\0\1\u054f"+
    "\3\0\1\u03e1\1\u05ea\2\0\1\u05ea\1\0\2\u03e3\14\0"+
    "\2\u05eb\21\0\2\u05ec\4\0\1\u04f0\12\0\1\u04f0\13\0"+
    "\1\u048a\145\0\2\u0595\52\0\1\u0605\11\0\1\u0605\137\0"+
    "\2\u0606\101\0\2\u0606\144\0\2\u0607\20\0\1\u0115\1\u0427"+
    "\1\u0428\2\u0218\1\u0115\1\u0429\1\u042a\1\0\1\u02af\1\0"+
    "\1\u0115\1\u0428\1\u0218\1\u042b\1\u0115\1\u02b8\1\u042a\1\0"+
    "\1\u018f\1\0\1\u02b8\1\u018f\11\0\2\u021b\7\0\1\u0115"+
    "\5\0\2\u0115\16\0\1\u0428\1\u0115\2\0\2\u0115\3\0"+
    "\2\u0115\1\u0428\34\0\2\u0297\10\0\2\u0608\52\0\1\u0609"+
    "\11\0\1\u0609\104\0\1\u04bf\111\0\1\u060a\11\0\1\u060a"+
    "\153\0\2\u04c1\60\0\2\u04bf\105\0\2\u060b\17\0\3\u060c"+
    "\130\0\2\u060d\66\0\2\u060e\101\0\2\u060e\144\0\2\u060f"+
    "\33\0\1\u04f0\111\0\1\u0610\11\0\1\u0610\153\0\2\u04f2"+
    "\60\0\2\u04f0\105\0\2\u0611\17\0\3\u0612\130\0\2\u0613"+
    "\60\0\2\u0521\115\0\2\u0387\105\0\2\u05a4\4\0\2\u0407"+
    "\111\0\2\u02b8\21\0\2\u0607\2\0\2\u029a\27\0\1\u052a"+
    "\145\0\2\u05db\52\0\1\u0614\11\0\1\u0614\135\0\2\u039d"+
    "\105\0\2\u0546\115\0\2\u03da\60\0\1\u054f\145\0\2\u05eb"+
    "\52\0\1\u0615\11\0\1\u0615\135\0\2\u03f0\136\0\2\u0616"+
    "\111\0\2\u0617\64\0\2\u04bd\111\0\2\u04ee\45\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[112050];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\6\0\2\1\1\11\1\1\1\11\1\1\1\11\4\1"+
    "\1\11\14\1\121\0\1\11\3\0\1\1\5\0\1\1"+
    "\17\0\1\1\23\0\1\1\1\0\1\1\7\0\1\1"+
    "\12\0\1\1\1\0\1\11\42\0\1\11\15\0\2\1"+
    "\1\0\1\11\12\0\1\11\26\0\1\1\11\0\1\11"+
    "\4\1\2\0\2\1\33\0\1\11\1\1\3\0\1\1"+
    "\2\0\1\1\5\0\1\1\1\0\1\1\3\0\1\11"+
    "\127\0\1\1\4\0\1\1\3\0\1\1\46\0\1\1"+
    "\41\0\1\11\31\0\4\1\2\0\2\1\62\0\2\11"+
    "\21\0\1\1\1\0\1\1\27\0\1\1\62\0\3\1"+
    "\1\0\4\1\2\0\1\1\56\0\1\1\34\0\2\11"+
    "\1\0\1\11\2\0\1\11\4\0\1\1\1\0\1\11"+
    "\12\0\2\1\1\0\1\11\64\0\2\1\23\0\3\1"+
    "\103\0\1\11\5\0\2\11\3\0\1\11\2\0\1\11"+
    "\1\0\1\11\22\0\1\1\7\0\1\1\117\0\3\1"+
    "\1\0\1\1\3\0\1\1\52\0\1\1\5\0\1\1"+
    "\12\0\1\1\63\0\1\1\3\0\3\1\15\0\3\1"+
    "\40\0\2\11\151\0\1\1\3\0\1\1\45\0\1\1"+
    "\3\0\1\1\250\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1559];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** For the backwards DFA of general lookahead statements */
  private boolean [] zzFin = new boolean [ZZ_BUFFERSIZE+1];

  /* user code: */
	
	/* Custom java code */

    @Override
	public String language() { return "IT"; }

	@Override
	public String version() { return "0.1"; }


	/* An empty default constructor is required to comply with LinkolnService */
	
	public Articles() { }
	
	@Override
	public final boolean run() {
		
		try {
			
			yyreset(new StringReader(getInput()));
			yylex();
			
		} catch (IOException e) {

			e.printStackTrace();
			return false;
		}
		
		return true;
	}
	
	@Override
	protected void addValue() {
	
		//annotationEntity.setValue("value");
	}
	
	private int offsetValue = 0;
	private int lengthValue = 0;

	private boolean brackets = true;
	
	private int previousState = 0;
	
	private void readPartitionElement() {
	
		previousState = readPartitionElementState;
		
		addText(yytext().substring(0,1));
		position++;
	
		offset = 0;
		length = yylength()-1; //account for the left edge		
	
		yypushback(length);
		
		length = length-1; //account for the right edge
		
		yybegin(readPartitionElementState);	
	}
	
	private void readValue() {
	
		annotationEntity.setText(Util.removeAllAnnotations(yytext()));
		annotationEntity.setPosition(position);
		
		offset += yylength();
		position += yylength();
		
		offsetValue = 0;
		lengthValue = yylength();
		
		yypushback(lengthValue);
		yybegin(readValueState);	
	}
	


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Articles(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 382) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return YYEOF;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { addText(yytext());
	position++;
            } 
            // fall through
          case 37: break;
          case 2: 
            { addText(yytext());
		position++;
            } 
            // fall through
          case 38: break;
          case 3: 
            { offset++;
		position++;
		
		if(offset >= length) {
			
			if(offset > length) {
				yypushback(1);
				position--;
			}
			
			yybegin(0);
		}
		
		addText(yytext());
            } 
            // fall through
          case 39: break;
          case 4: 
            { annotationEntity = new Article();
		
		readValue();
            } 
            // fall through
          case 40: break;
          case 5: 
            { offsetValue++;
		
		if(offsetValue >= lengthValue ) {
			
			if(offsetValue > lengthValue) {
			
				yypushback(1);
			}
			
			addEntity(annotationEntity);
			
			yybegin(previousState);
		}
            } 
            // fall through
          case 41: break;
          case 6: 
            { if(annotationEntity.getValue().equals("")) annotationEntity.setValue(yytext()); offsetValue += yylength();
            } 
            // fall through
          case 42: break;
          case 7: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-BIS"); offsetValue += yylength();
            } 
            // fall through
          case 43: break;
          case 8: 
            { offsetValue += yylength();
            } 
            // fall through
          case 44: break;
          case 9: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-TER"); offsetValue += yylength();
            } 
            // fall through
          case 45: break;
          case 10: 
            { addText(yytext());
		position--; //account for the following {LKN_C} character
		yybegin(YYINITIAL);
            } 
            // fall through
          case 46: break;
          case 11: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-SEMEL"); offsetValue += yylength();
            } 
            // fall through
          case 47: break;
          case 12: 
            { annotationEntity = new Article();

	readPartitionElement();
            } 
            // fall through
          case 48: break;
          case 13: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-NOVIES"); offsetValue += yylength();
            } 
            // fall through
          case 49: break;
          case 14: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-SEXIES"); offsetValue += yylength();
            } 
            // fall through
          case 50: break;
          case 15: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-VICIES"); offsetValue += yylength();
            } 
            // fall through
          case 51: break;
          case 16: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-OCTIES"); offsetValue += yylength();
            } 
            // fall through
          case 52: break;
          case 17: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-QUATER"); offsetValue += yylength();
            } 
            // fall through
          case 53: break;
          case 18: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-DECIES"); offsetValue += yylength();
            } 
            // fall through
          case 54: break;
          case 19: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-SEPTIES"); offsetValue += yylength();
            } 
            // fall through
          case 55: break;
          case 20: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 4;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 5;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { /* Basta questo? */

	annotationEntity = new Article();

	readPartitionElement();
            } 
            // fall through
          case 56: break;
          case 21: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-UNVICIES"); offsetValue += yylength();
            } 
            // fall through
          case 57: break;
          case 22: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-UNDECIES"); offsetValue += yylength();
            } 
            // fall through
          case 58: break;
          case 23: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-SEXDECIES"); offsetValue += yylength();
            } 
            // fall through
          case 59: break;
          case 24: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-DUOVICIES"); offsetValue += yylength();
            } 
            // fall through
          case 60: break;
          case 25: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-TERVICIES"); offsetValue += yylength();
            } 
            // fall through
          case 61: break;
          case 26: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-TERDECIES"); offsetValue += yylength();
            } 
            // fall through
          case 62: break;
          case 27: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-QUINQUIES"); offsetValue += yylength();
            } 
            // fall through
          case 63: break;
          case 28: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-DUODECIES"); offsetValue += yylength();
            } 
            // fall through
          case 64: break;
          case 29: 
            { addText(yytext()); 
	yybegin(lkn);
            } 
            // fall through
          case 65: break;
          case 30: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-NOVODECIES"); offsetValue += yylength();
            } 
            // fall through
          case 66: break;
          case 31: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-SEPTDECIES"); offsetValue += yylength();
            } 
            // fall through
          case 67: break;
          case 32: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-OCTODECIES"); offsetValue += yylength();
            } 
            // fall through
          case 68: break;
          case 33: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-QUINVICIES"); offsetValue += yylength();
            } 
            // fall through
          case 69: break;
          case 34: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-QUINDECIES"); offsetValue += yylength();
            } 
            // fall through
          case 70: break;
          case 35: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-QUATERVICIES"); offsetValue += yylength();
            } 
            // fall through
          case 71: break;
          case 36: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-QUATERDECIES"); offsetValue += yylength();
            } 
            // fall through
          case 72: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Articles [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        Articles scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new Articles(reader);
          while ( !scanner.zzAtEOF ) scanner.yylex();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
