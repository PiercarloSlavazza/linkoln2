/*******************************************************************************
 * Copyright (c) 2016-2021 Institute of Legal Information and Judicial Systems IGSG-CNR (formerly ITTIG-CNR)
 * 
 * This program and the accompanying materials  are made available under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either version 3 of the License, or (at your option)
 * any later version. 
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at: https://www.gnu.org/licenses/gpl-3.0.txt
 * Unless required by applicable law or agreed to in writing, software distributed under the Licence is 
 * distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and limitations under the Licence.
 *  
 * Authors: Lorenzo Bacci (IGSG-CNR)
 ******************************************************************************/
/* The following code was generated by JFlex 1.6.1 */

package it.cnr.igsg.linkoln.service.impl.it;

import java.io.IOException;
import java.io.StringReader;

import it.cnr.igsg.linkoln.entity.*;
import it.cnr.igsg.linkoln.service.*;

import it.cnr.igsg.linkoln.service.impl.Util;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.1
 * from the specification file <tt>Articles.jflex</tt>
 */
public class Articles extends LinkolnAnnotationService {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int lkn = 2;
  public static final int readPartitionElementState = 4;
  public static final int readValueState = 6;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3, 3
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\14\1\2\1\111\1\112\1\1\22\0\1\77\5\0\1\6"+
    "\1\5\1\0\1\16\2\0\1\15\1\3\1\57\1\60\1\64\1\61"+
    "\1\63\1\56\1\56\1\56\1\62\1\62\1\62\1\62\1\17\1\13"+
    "\5\0\1\31\1\10\1\43\1\76\1\41\1\105\1\33\1\107\1\53"+
    "\1\105\1\102\1\70\1\66\1\7\1\55\1\12\1\72\1\35\1\26"+
    "\1\47\1\45\1\37\1\105\1\74\1\105\1\25\1\103\1\0\1\104"+
    "\1\110\1\4\1\5\1\30\1\22\1\42\1\75\1\40\1\27\1\32"+
    "\1\106\1\52\1\27\1\101\1\67\1\65\1\21\1\54\1\24\1\71"+
    "\1\34\1\23\1\46\1\44\1\36\1\27\1\73\1\27\1\20\12\0"+
    "\1\111\44\0\1\110\5\0\1\110\3\0\1\5\5\0\1\110\5\0"+
    "\1\27\1\27\4\27\1\0\1\27\1\50\1\50\2\27\1\27\1\27"+
    "\2\27\1\0\1\27\1\27\1\27\3\27\2\0\1\27\1\27\2\27"+
    "\3\0\1\27\1\27\4\27\1\0\1\27\1\50\1\50\2\27\1\27"+
    "\1\27\2\27\1\0\1\27\1\27\1\27\3\27\2\0\1\27\1\27"+
    "\2\27\53\0\1\27\1\27\6\0\2\51\66\0\1\27\1\27\4\0"+
    "\1\27\1\27\17\0\1\11\u1c88\0\1\27\1\27\216\0\2\27\42\0"+
    "\1\27\1\27\u0144\0\1\14\20\0\1\3\1\3\4\0\1\5\16\0"+
    "\1\111\1\111\u0100\0\1\100\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udee5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\6\0\4\1\2\2\3\3\1\4\1\3\12\5\1\6"+
    "\2\5\120\0\1\7\3\0\1\10\5\0\1\11\43\0"+
    "\1\4\1\0\1\4\7\0\1\4\11\0\1\10\1\0"+
    "\1\10\42\0\1\12\14\0\2\4\1\0\1\4\12\0"+
    "\1\13\40\0\5\14\2\0\2\14\33\0\1\15\3\0"+
    "\1\16\2\0\1\17\5\0\1\20\1\0\1\21\3\0"+
    "\1\22\127\0\1\4\3\0\1\4\3\0\1\23\110\0"+
    "\1\24\31\0\4\14\2\0\2\14\62\0\1\25\1\26"+
    "\135\0\3\14\1\0\4\14\2\0\1\14\55\0\1\14"+
    "\35\0\1\27\1\30\1\0\1\31\2\0\1\32\4\0"+
    "\1\33\1\0\1\34\102\0\1\24\23\0\3\14\103\0"+
    "\1\35\5\0\1\36\1\37\3\0\1\40\2\0\1\41"+
    "\1\0\1\42\147\0\3\14\1\0\1\14\3\0\1\14"+
    "\156\0\1\14\3\0\1\14\1\24\15\0\3\14\40\0"+
    "\1\43\1\44\220\0\1\14\3\0\1\14\250\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[1544];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\113\0\226\0\341\0\u012c\0\u0177\0\u01c2\0\u020d"+
    "\0\u0258\0\u02a3\0\u0258\0\u02ee\0\u0258\0\u0339\0\u0384\0\u03cf"+
    "\0\u041a\0\u0258\0\u0465\0\u04b0\0\u04fb\0\u0546\0\u0591\0\u05dc"+
    "\0\u0627\0\u0672\0\u06bd\0\u0708\0\u0753\0\u079e\0\u07e9\0\u0834"+
    "\0\u087f\0\u08ca\0\u0915\0\u0960\0\u01c2\0\u09ab\0\u09f6\0\u0a41"+
    "\0\u0a8c\0\u0ad7\0\u0b22\0\u0b6d\0\u0bb8\0\u0c03\0\u0c4e\0\u0c99"+
    "\0\u0ce4\0\u0d2f\0\u0d7a\0\u0dc5\0\u0e10\0\u0e5b\0\u0ea6\0\u0ef1"+
    "\0\u0f3c\0\u0f87\0\u0fd2\0\u101d\0\u1068\0\u10b3\0\u10fe\0\u1149"+
    "\0\u1194\0\u11df\0\u122a\0\u1275\0\u12c0\0\u130b\0\u1356\0\u13a1"+
    "\0\u13ec\0\u1437\0\u1482\0\u14cd\0\u1518\0\u1563\0\u15ae\0\u15f9"+
    "\0\u1644\0\u168f\0\u16da\0\u1725\0\u1770\0\u17bb\0\u1806\0\u1851"+
    "\0\u189c\0\u18e7\0\u1932\0\u197d\0\u19c8\0\u1a13\0\u1a5e\0\u1aa9"+
    "\0\u1af4\0\u1b3f\0\u1b8a\0\u1bd5\0\u1c20\0\u1c6b\0\u1cb6\0\u1d01"+
    "\0\u1d4c\0\u1d97\0\u1de2\0\u1e2d\0\u1e78\0\u1ec3\0\u0258\0\u1f0e"+
    "\0\u1f59\0\u1fa4\0\u1fef\0\u203a\0\u2085\0\u0546\0\u20d0\0\u211b"+
    "\0\u2166\0\u21b1\0\u21fc\0\u2247\0\u2292\0\u22dd\0\u2328\0\u2373"+
    "\0\u23be\0\u2409\0\u2454\0\u249f\0\u24ea\0\u2535\0\u2580\0\u25cb"+
    "\0\u2616\0\u2661\0\u2616\0\u26ac\0\u26f7\0\u2742\0\u278d\0\u27d8"+
    "\0\u2823\0\u286e\0\u28b9\0\u2904\0\u041a\0\u294f\0\u299a\0\u29e5"+
    "\0\u2a30\0\u2a7b\0\u2ac6\0\u2b11\0\u2b5c\0\u2ba7\0\u2bf2\0\u2c3d"+
    "\0\u2c88\0\u2cd3\0\u2d1e\0\u2d69\0\u2db4\0\u2dff\0\u2e4a\0\u2e95"+
    "\0\u2ee0\0\u2f2b\0\u2f76\0\u2fc1\0\u300c\0\u3057\0\u30a2\0\u30ed"+
    "\0\u3138\0\u3183\0\u0258\0\u31ce\0\u3219\0\u3264\0\u32af\0\u32fa"+
    "\0\u3345\0\u3390\0\u33db\0\u3426\0\u3471\0\u34bc\0\u3507\0\u3552"+
    "\0\u359d\0\u35e8\0\u3633\0\u367e\0\u36c9\0\u3714\0\u375f\0\u37aa"+
    "\0\u37f5\0\u3840\0\u388b\0\u38d6\0\u3921\0\u396c\0\u39b7\0\u3a02"+
    "\0\u3a4d\0\u3a98\0\u3ae3\0\u3b2e\0\u3b79\0\u0258\0\u3bc4\0\u3c0f"+
    "\0\u3c5a\0\u3ca5\0\u3cf0\0\u3d3b\0\u3d86\0\u3dd1\0\u3e1c\0\u2b5c"+
    "\0\u3e67\0\u3eb2\0\u3efd\0\u3f48\0\u3f93\0\u0258\0\u3fde\0\u4029"+
    "\0\u4074\0\u40bf\0\u410a\0\u4155\0\u41a0\0\u41eb\0\u4236\0\u4281"+
    "\0\u0258\0\u42cc\0\u4317\0\u4362\0\u43ad\0\u43f8\0\u4443\0\u448e"+
    "\0\u44d9\0\u4524\0\u456f\0\u45ba\0\u4605\0\u4650\0\u469b\0\u46e6"+
    "\0\u4731\0\u477c\0\u47c7\0\u4812\0\u485d\0\u48a8\0\u48f3\0\u493e"+
    "\0\u4989\0\u49d4\0\u4a1f\0\u4a6a\0\u4ab5\0\u4b00\0\u4b4b\0\u4b96"+
    "\0\u4be1\0\u0258\0\u4c2c\0\u4c77\0\u4cc2\0\u4d0d\0\u4d58\0\u4da3"+
    "\0\u4dee\0\u4e39\0\u4dee\0\u4e84\0\u4ecf\0\u4f1a\0\u4f65\0\u4fb0"+
    "\0\u4ffb\0\u5046\0\u5091\0\u50dc\0\u5127\0\u5172\0\u51bd\0\u5208"+
    "\0\u5253\0\u529e\0\u52e9\0\u5334\0\u537f\0\u53ca\0\u5415\0\u3efd"+
    "\0\u5460\0\u54ab\0\u54f6\0\u5541\0\u558c\0\u55d7\0\u5622\0\u566d"+
    "\0\u56b8\0\u5703\0\u574e\0\u5799\0\u57e4\0\u582f\0\u587a\0\u58c5"+
    "\0\u5910\0\u595b\0\u59a6\0\u59f1\0\u5a3c\0\u5a87\0\u5ad2\0\u5b1d"+
    "\0\u0258\0\u5b68\0\u5bb3\0\u5bfe\0\u5c49\0\u5c94\0\u5cdf\0\u5d2a"+
    "\0\u5d75\0\u5dc0\0\u5e0b\0\u5e56\0\u5ea1\0\u5eec\0\u5f37\0\u5f82"+
    "\0\u5fcd\0\u6018\0\u6063\0\u60ae\0\u60f9\0\u6144\0\u618f\0\u61da"+
    "\0\u6225\0\u6270\0\u62bb\0\u6306\0\u6351\0\u639c\0\u63e7\0\u4c77"+
    "\0\u4cc2\0\u4d0d\0\u6432\0\u647d\0\u64c8\0\u4e39\0\u6513\0\u655e"+
    "\0\u65a9\0\u65f4\0\u663f\0\u668a\0\u66d5\0\u6720\0\u676b\0\u67b6"+
    "\0\u6801\0\u684c\0\u6897\0\u68e2\0\u692d\0\u6978\0\u69c3\0\u6a0e"+
    "\0\u6a59\0\u6aa4\0\u6aef\0\u6b3a\0\u6b85\0\u6bd0\0\u6c1b\0\u6c66"+
    "\0\u6cb1\0\u6cfc\0\u6d47\0\u6d92\0\u6ddd\0\u6e28\0\u6e73\0\u6ebe"+
    "\0\u6f09\0\u6f54\0\u6f9f\0\u6fea\0\u7035\0\u7080\0\u70cb\0\u7116"+
    "\0\u7161\0\u71ac\0\u71f7\0\u7242\0\u728d\0\u72d8\0\u7323\0\u736e"+
    "\0\u73b9\0\u7404\0\u744f\0\u749a\0\u74e5\0\u7530\0\u757b\0\u75c6"+
    "\0\u7611\0\u765c\0\u76a7\0\u76f2\0\u773d\0\u7788\0\u77d3\0\u781e"+
    "\0\u7869\0\u78b4\0\u78ff\0\u794a\0\u7995\0\u79e0\0\u7a2b\0\u7a76"+
    "\0\u7ac1\0\u7b0c\0\u7b57\0\u7ba2\0\u7bed\0\u7c38\0\u7c83\0\u7cce"+
    "\0\u7d19\0\u7d64\0\u7daf\0\u7dfa\0\u7e45\0\u7e90\0\u7edb\0\u7f26"+
    "\0\u7f71\0\u7fbc\0\u8007\0\u8052\0\u809d\0\u80e8\0\u8133\0\u817e"+
    "\0\u81c9\0\u8214\0\u825f\0\u82aa\0\u82f5\0\u8340\0\u838b\0\u83d6"+
    "\0\u8421\0\u846c\0\u84b7\0\u8502\0\u854d\0\u8598\0\u85e3\0\u862e"+
    "\0\u8679\0\u86c4\0\u870f\0\u875a\0\u87a5\0\u87f0\0\u883b\0\u8886"+
    "\0\u88d1\0\u891c\0\u8967\0\u89b2\0\u89fd\0\u8a48\0\u8a93\0\u8ade"+
    "\0\u8b29\0\u0258\0\u8b74\0\u8bbf\0\u8c0a\0\u8c55\0\u8ca0\0\u8ceb"+
    "\0\u8d36\0\u8d81\0\u8dcc\0\u8e17\0\u8e62\0\u8ead\0\u8ef8\0\u8f43"+
    "\0\u8f8e\0\u8fd9\0\u9024\0\u906f\0\u90ba\0\u9105\0\u9150\0\u919b"+
    "\0\u91e6\0\u9231\0\u927c\0\u92c7\0\u9312\0\u935d\0\u93a8\0\u93f3"+
    "\0\u943e\0\u9489\0\u94d4\0\u9489\0\u951f\0\u956a\0\u95b5\0\u9600"+
    "\0\u964b\0\u9696\0\u96e1\0\u972c\0\u9777\0\u97c2\0\u980d\0\u9858"+
    "\0\u98a3\0\u98ee\0\u9939\0\u9984\0\u99cf\0\u9a1a\0\u9a65\0\u9ab0"+
    "\0\u9afb\0\u9b46\0\u9b91\0\u9bdc\0\u9c27\0\u9c72\0\u9cbd\0\u9d08"+
    "\0\u9d53\0\u9d9e\0\u9de9\0\u9e34\0\u9e7f\0\u9eca\0\u9f15\0\u9f60"+
    "\0\u9fab\0\u9ff6\0\ua041\0\ua08c\0\ua0d7\0\ua122\0\ua16d\0\ua1b8"+
    "\0\ua203\0\ua24e\0\ua299\0\ua2e4\0\ua32f\0\u0258\0\u0258\0\ua37a"+
    "\0\ua3c5\0\ua410\0\ua45b\0\ua4a6\0\ua4f1\0\ua53c\0\ua587\0\ua5d2"+
    "\0\ua61d\0\ua668\0\ua6b3\0\ua6fe\0\ua749\0\ua794\0\ua7df\0\ua82a"+
    "\0\ua875\0\ua8c0\0\ua90b\0\ua956\0\ua9a1\0\ua9ec\0\uaa37\0\uaa82"+
    "\0\uaacd\0\uab18\0\uab63\0\uabae\0\uabf9\0\uac44\0\uac8f\0\uacda"+
    "\0\uad25\0\uad70\0\uadbb\0\uae06\0\uae51\0\uae9c\0\uaee7\0\uaf32"+
    "\0\uaf7d\0\uafc8\0\ub013\0\ub05e\0\ub0a9\0\ub0f4\0\ub13f\0\ub18a"+
    "\0\ub1d5\0\ub220\0\ub26b\0\ub2b6\0\ub301\0\ub34c\0\ub397\0\ub3e2"+
    "\0\ub42d\0\ub478\0\ub4c3\0\ub50e\0\ub559\0\ub5a4\0\ub5ef\0\ub63a"+
    "\0\ub685\0\ub6d0\0\ub71b\0\ub766\0\ub7b1\0\ub7fc\0\ub847\0\ub892"+
    "\0\ub8dd\0\ub928\0\ub973\0\ub9be\0\uba09\0\uba54\0\uba9f\0\ubaea"+
    "\0\ubb35\0\ubb80\0\ubbcb\0\ubc16\0\ubc61\0\ubcac\0\ubcf7\0\ubd42"+
    "\0\ubd8d\0\ubdd8\0\ube23\0\ube6e\0\ubeb9\0\ubf04\0\ubf4f\0\ubf9a"+
    "\0\u6d47\0\ubfe5\0\uc030\0\uc07b\0\uc0c6\0\uc111\0\uc15c\0\uc1a7"+
    "\0\uc1f2\0\uc23d\0\uc288\0\uc2d3\0\uc31e\0\uc369\0\u9312\0\u935d"+
    "\0\u93a8\0\uc3b4\0\uc3ff\0\u94d4\0\uc44a\0\uc495\0\uc4e0\0\uc52b"+
    "\0\uc576\0\uc5c1\0\uc60c\0\uc657\0\uc6a2\0\uc6ed\0\uc738\0\uc783"+
    "\0\uc7ce\0\uc819\0\uc864\0\uc8af\0\uc07b\0\uc8fa\0\uc945\0\uc990"+
    "\0\uc9db\0\uca26\0\uca71\0\ucabc\0\ucb07\0\ucb52\0\ucb9d\0\ucbe8"+
    "\0\ucc33\0\ucc7e\0\uccc9\0\ucd14\0\ucd5f\0\ucdaa\0\ucdf5\0\uce40"+
    "\0\uce8b\0\uced6\0\ucf21\0\ucf6c\0\ucfb7\0\ud002\0\ud04d\0\ud098"+
    "\0\ud0e3\0\ud12e\0\ud179\0\ud1c4\0\ud20f\0\ud25a\0\ud2a5\0\ud2f0"+
    "\0\ud33b\0\ud386\0\ud3d1\0\ud41c\0\ud467\0\ud4b2\0\ud4fd\0\ud548"+
    "\0\ud593\0\ud5de\0\u0258\0\u0258\0\ud629\0\u0258\0\ud674\0\ud6bf"+
    "\0\u0258\0\ud70a\0\ud755\0\ud7a0\0\ud7eb\0\ud836\0\ud881\0\u0258"+
    "\0\ud8cc\0\ud917\0\ud962\0\ud9ad\0\ud9f8\0\uda43\0\uda8e\0\udad9"+
    "\0\udb24\0\udb6f\0\udbba\0\udc05\0\u0258\0\udc50\0\udc9b\0\udce6"+
    "\0\udd31\0\udd7c\0\uddc7\0\ude12\0\ude5d\0\udea8\0\udef3\0\udf3e"+
    "\0\udf89\0\udfd4\0\ue01f\0\ue06a\0\ue0b5\0\ue100\0\ue14b\0\ue196"+
    "\0\ue1e1\0\ue22c\0\ue277\0\ue2c2\0\ue30d\0\ue358\0\ue3a3\0\ue3ee"+
    "\0\ue439\0\ue484\0\ue4cf\0\ue51a\0\ue565\0\ue5b0\0\ue5fb\0\ue646"+
    "\0\ue691\0\ue6dc\0\ue727\0\ue772\0\ue7bd\0\ue808\0\ue853\0\ue89e"+
    "\0\ue8e9\0\ue934\0\ue97f\0\ue9ca\0\uea15\0\uea60\0\ueaab\0\ueaf6"+
    "\0\ueb41\0\ueb8c\0\ubdd8\0\uebd7\0\uec22\0\uec6d\0\uecb8\0\ued03"+
    "\0\ued4e\0\ued99\0\uede4\0\uee2f\0\uee7a\0\ueec5\0\uef10\0\ubf04"+
    "\0\ubf4f\0\uef5b\0\uefa6\0\ubfe5\0\ueff1\0\uf03c\0\uf087\0\uf0d2"+
    "\0\uf11d\0\uf168\0\uf1b3\0\uf1fe\0\uf249\0\uf294\0\uf2df\0\uf32a"+
    "\0\uf375\0\uf3c0\0\uf40b\0\uf456\0\uf4a1\0\uf4ec\0\uf537\0\uf582"+
    "\0\uf5cd\0\uf618\0\uf663\0\uf6ae\0\uf6f9\0\uf744\0\uf78f\0\uf7da"+
    "\0\uf825\0\uf870\0\uf8bb\0\uf906\0\uf951\0\uf99c\0\uf9e7\0\ufa32"+
    "\0\ufa7d\0\ufac8\0\ufb13\0\ufb5e\0\ufba9\0\ufbf4\0\ufc3f\0\ufc8a"+
    "\0\ufcd5\0\ufd20\0\ufd6b\0\ufdb6\0\ufe01\0\ufe4c\0\ufe97\0\ufee2"+
    "\0\uff2d\0\uff78\0\uffc3\1\16\1\131\1\244\1\357\1\u013a"+
    "\1\u0185\1\u01d0\1\u021b\1\u0266\1\u02b1\1\u02fc\1\u0347\1\u0392"+
    "\1\u03dd\1\u0428\1\u0473\1\u04be\0\u0258\1\u0509\1\u0554\1\u059f"+
    "\1\u05ea\1\u0635\0\u0258\0\u0258\1\u0680\1\u06cb\1\u0716\0\u0258"+
    "\1\u0761\1\u07ac\0\u0258\1\u07f7\0\u0258\1\u0842\1\u088d\1\u08d8"+
    "\1\u0923\1\u096e\1\u09b9\1\u0a04\1\u0a4f\1\u0a9a\1\u0ae5\1\u0b30"+
    "\1\u0b7b\1\u0bc6\1\u0c11\1\u0c5c\1\u0ca7\1\u0cf2\1\u0d3d\1\u0d88"+
    "\1\u0dd3\1\u0e1e\1\u0e69\1\u0eb4\1\u0eff\1\u0f4a\1\u0f95\1\u0fe0"+
    "\1\u102b\1\u1076\1\u10c1\1\u110c\1\u1157\1\u11a2\1\u11ed\1\u1238"+
    "\1\u1283\1\u12ce\1\u1319\1\u1364\1\u13af\1\u13fa\1\u1445\1\u1490"+
    "\1\u14db\1\u1526\1\u1571\1\u15bc\1\u1607\1\u1652\1\u169d\1\u16e8"+
    "\1\u1733\1\u177e\1\u17c9\1\u1814\1\u185f\1\u18aa\1\u18f5\1\u1940"+
    "\1\u198b\1\u19d6\1\u1a21\1\u1a6c\1\u1ab7\1\u1b02\1\u1b4d\1\u1b98"+
    "\1\u1be3\1\u1c2e\1\u1c79\1\u1cc4\1\u1d0f\1\u1d5a\1\u1da5\1\u1df0"+
    "\1\u1e3b\1\u1e86\1\u1ed1\1\u1f1c\1\u1f67\1\u1fb2\1\u1ffd\1\u2048"+
    "\1\u2093\0\uf0d2\0\uf11d\1\u20de\1\u2129\1\u2174\1\u21bf\1\u220a"+
    "\1\u2255\1\u22a0\1\u22eb\1\u2336\1\u2381\1\u23cc\1\u2417\1\u2462"+
    "\1\u24ad\1\u24f8\1\u2543\1\u258e\1\u25d9\1\u2624\1\u266f\1\u26ba"+
    "\1\u2705\1\u2750\1\u279b\1\u27e6\1\u2831\1\u287c\1\u28c7\1\u2912"+
    "\1\u295d\1\u29a8\1\u29f3\1\u2a3e\1\u2a89\1\u2ad4\1\u2b1f\1\u2b6a"+
    "\1\u2bb5\1\u2c00\1\u2c4b\1\u2c96\1\u2ce1\1\u2d2c\1\u2d77\1\u2dc2"+
    "\1\u2e0d\1\u2e58\1\u2ea3\1\u2eee\1\u2f39\1\u2f84\1\u2fcf\1\u301a"+
    "\1\u3065\1\u30b0\1\u30fb\1\u3146\1\u3191\1\u31dc\1\u3227\1\u3272"+
    "\1\u32bd\1\u3308\1\u3353\1\u339e\1\u33e9\1\u3434\1\u347f\1\u34ca"+
    "\1\u3515\1\u3560\1\u35ab\1\u35f6\1\u3641\1\u368c\1\u36d7\1\u3722"+
    "\1\u376d\1\u37b8\1\u3803\1\u384e\1\u0d88\1\u3899\1\u38e4\1\u392f"+
    "\1\u397a\1\u39c5\1\u3a10\1\u3a5b\1\u3aa6\1\u3af1\1\u3b3c\1\u3b87"+
    "\1\u3bd2\1\u3c1d\1\u3c68\1\u3cb3\1\u3cfe\1\u3d49\1\u3d94\1\u3ddf"+
    "\1\u3e2a\1\u3e75\1\u3ec0\1\u3f0b\1\u3f56\1\u3fa1\1\u3fec\1\u4037"+
    "\1\u4082\1\u40cd\1\u4118\1\u4163\1\u41ae\1\u41f9\1\u4244\1\u428f"+
    "\1\u42da\1\u4325\1\u4370\1\u43bb\1\u4406\1\u4451\1\u449c\1\u44e7"+
    "\1\u4532\1\u457d\1\u45c8\1\u4613\1\u465e\1\u46a9\1\u46f4\1\u473f"+
    "\1\u478a\1\u47d5\1\u4820\1\u486b\1\u486b\1\u48b6\1\u4901\1\u494c"+
    "\1\u24f8\1\u4997\1\u49e2\1\u4a2d\1\u4a78\1\u4ac3\1\u4b0e\1\u4b59"+
    "\1\u2624\1\u266f\1\u4ba4\1\u2705\1\u4bef\1\u4c3a\1\u4c85\1\u4cd0"+
    "\1\u4d1b\1\u4d66\1\u4db1\1\u4dfc\1\u4e47\1\u4e92\1\u4edd\1\u4f28"+
    "\1\u4f73\1\u4fbe\1\u5009\1\u5054\1\u509f\1\u50ea\1\u5135\1\u5180"+
    "\1\u51cb\1\u5216\1\u5261\1\u52ac\1\u52f7\1\u5342\1\u538d\1\u53d8"+
    "\1\u5423\1\u546e\1\u54b9\1\u5504\1\u554f\1\u559a\1\u55e5\1\u5630"+
    "\1\u567b\0\u0258\0\u0258\1\u56c6\1\u5711\1\u575c\1\u57a7\1\u57f2"+
    "\1\u583d\1\u5888\1\u58d3\1\u591e\1\u5969\1\u59b4\1\u59ff\1\u5a4a"+
    "\1\u5a95\1\u392f\1\u5ae0\1\u5b2b\1\u5b76\1\u5bc1\1\u5c0c\1\u5c57"+
    "\1\u5ca2\1\u5ced\1\u5d38\1\u5d83\1\u5dce\1\u5e19\1\u5e64\1\u5eaf"+
    "\1\u5efa\1\u5f45\1\u5f90\1\u5fdb\1\u6026\1\u6071\1\u60bc\1\u6107"+
    "\1\u6152\1\u619d\1\u61e8\1\u6233\1\u627e\1\u62c9\1\u6314\1\u635f"+
    "\1\u63aa\1\u63f5\1\u6440\1\u648b\1\u64d6\1\u6521\1\u656c\1\u65b7"+
    "\1\u6602\1\u664d\0\uc15c\1\u6698\1\u66e3\1\u672e\1\u6779\1\u67c4"+
    "\1\u680f\1\u685a\1\u68a5\1\u68f0\1\u693b\1\u6986\1\u69d1\1\u4cd0"+
    "\1\u4d1b\1\u6a1c\1\u6a67\1\u6ab2\1\u6afd\1\u6b48\1\u6b93\1\u6bde"+
    "\1\u6c29\1\u6c74\1\u6cbf\1\u6d0a\1\u6d55\1\u6da0\1\u6deb\1\u6e36"+
    "\1\u6e81\1\u6ecc\1\u6f17\1\u6f62\1\u6fad\1\u6ff8\1\u7043\1\u708e"+
    "\1\u70d9\1\u7124\1\u716f\1\u71ba\1\u7205\1\u7250\1\u729b\1\u72e6"+
    "\1\u7331\1\u737c\1\u73c7\1\u7412\1\u745d\1\u74a8\1\u74f3\1\u753e"+
    "\1\u7589\1\u75d4\1\u761f\1\u766a\1\u76b5\1\u7700\1\u774b\1\u7796"+
    "\1\u77e1\1\u782c\1\u7877\1\u78c2\1\u790d\1\u7958\1\u79a3\1\u79ee"+
    "\1\u7a39\1\u7a84\1\u7acf\1\u7b1a\1\u7b65\1\u7bb0\1\u7bfb\1\u7c46"+
    "\1\u7c91\1\u7cdc\1\u7d27\1\u7d72\1\u7dbd\1\u7e08\1\u7e53\1\u7e9e"+
    "\1\u7ee9\1\u7f34\1\u7f7f\1\u7fca\1\u7fca\1\u8015\1\u8060\1\u80ab"+
    "\1\u80f6\1\u8141\1\u818c\1\u81d7\1\u8222\1\u826d\1\u82b8\1\u8303"+
    "\1\u834e\1\u8399\1\u83e4\1\u842f\1\u847a\1\u84c5\1\u8510\1\u855b"+
    "\1\u85a6\1\u85f1\1\u863c\1\u8687\1\u86d2\1\u871d\1\u8768\1\u87b3"+
    "\1\u87fe\1\u8849\1\u8894\1\u88df\1\u892a\1\u8975\1\u89c0\1\u8a0b"+
    "\1\u8a56\1\u8aa1\1\u8aec\1\u8b37\1\u8b82\1\u8bcd\1\u8c18\1\u8c63"+
    "\1\u8cae\1\u8cf9\1\u8d44\1\u8d8f\1\u8dda\1\u8e25\1\u8e70\1\u8ebb"+
    "\1\u8f06\1\u8f51\1\u8f9c\1\u8fe7\1\u9032\1\u907d\1\u90c8\1\u9113"+
    "\1\u915e\1\u91a9\1\u91f4\1\u923f\1\u928a\1\u92d5\1\u9320\1\u936b"+
    "\1\u93b6\1\u9401\1\u944c\1\u9497\1\u94e2\1\u952d\1\u9578\1\u95c3"+
    "\1\u960e\1\u9659\1\u96a4\1\u96ef\1\u973a\1\u9785\1\u97d0\1\u981b"+
    "\1\u9866\1\u98b1\1\u98fc\1\u9947\1\u9992\1\u99dd\1\u9a28\1\u9a73"+
    "\1\u9abe\1\u9b09\1\u9b54\1\u9b9f\1\u9bea\1\u9c35\1\u9c80\1\u9ccb"+
    "\1\u9d16\1\u9d61\1\u9dac\1\u9df7\1\u9e42\1\u9e8d\1\u9ed8\1\u9f23"+
    "\1\u9f6e\1\u9fb9\1\ua004\1\ua04f\1\ua09a\1\ua0e5\1\ua130\1\ua17b"+
    "\1\ua1c6\1\ua211\1\ua25c\1\ua2a7\1\ua2f2\1\ua33d\1\ua388\1\ua3d3"+
    "\1\ua41e\1\ua469\1\ua4b4\1\ua4ff\1\ua54a\1\ua595\1\ua5e0\1\ua62b"+
    "\1\ua676\1\ua6c1\1\ua70c\1\ua757\1\ua7a2\1\ua7ed\1\ua838\1\ua883"+
    "\1\ua8ce\1\ua919\1\ua964\1\ua9af\1\ua9fa\1\uaa45\1\uaa90\1\uaadb"+
    "\1\uab26\1\uab71\1\uabbc\1\uac07\1\uac52\1\uac9d\1\uace8\1\uad33"+
    "\1\uad7e\1\uadc9\1\uae14\1\uae5f\1\uaeaa\1\uaef5\1\uaf40\1\uaf8b"+
    "\1\uafd6\1\ub021\1\ub06c\1\ub0b7\1\ub102\1\ub14d\1\ub198\1\ub1e3";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1544];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\7\1\10\5\7\2\11\1\7\1\11\5\7\31\11"+
    "\1\7\5\11\2\7\16\11\2\7\2\11\1\12\1\7"+
    "\3\11\3\7\103\13\1\14\7\13\30\15\2\16\6\15"+
    "\2\17\14\15\1\20\2\15\4\20\10\15\2\21\14\15"+
    "\7\22\1\23\1\24\1\25\7\22\1\23\1\24\1\25"+
    "\2\22\1\25\1\22\2\26\4\22\2\27\2\30\2\22"+
    "\2\31\2\32\4\22\2\33\1\34\2\22\4\34\4\22"+
    "\2\35\2\22\2\36\14\22\1\37\1\40\5\37\2\0"+
    "\1\37\1\0\5\37\31\0\1\37\5\0\2\37\16\0"+
    "\2\37\2\0\2\37\3\0\3\37\1\41\2\0\25\41"+
    "\1\42\57\41\1\42\32\0\2\43\6\0\2\44\53\0"+
    "\1\45\25\0\2\43\6\0\2\44\214\0\2\43\6\0"+
    "\2\44\25\0\2\46\102\0\1\47\33\0\2\50\3\0"+
    "\1\51\5\0\1\50\15\0\2\52\2\53\13\0\3\50"+
    "\2\0\1\20\2\0\4\20\2\0\2\54\6\0\1\50"+
    "\12\0\1\50\73\0\2\55\17\0\2\56\2\57\1\0"+
    "\1\60\1\61\1\62\1\63\2\0\1\56\4\0\1\61"+
    "\1\62\1\63\2\0\1\63\7\0\2\64\2\65\2\0"+
    "\2\66\2\67\4\0\2\70\1\20\2\0\4\20\4\0"+
    "\2\71\2\0\2\72\1\56\12\0\1\56\30\0\2\73"+
    "\135\0\2\74\106\0\3\75\77\0\2\76\105\0\2\77"+
    "\126\0\3\100\132\0\2\101\25\0\1\102\11\0\1\102"+
    "\131\0\2\103\113\0\2\104\125\0\1\34\2\0\4\34"+
    "\72\0\2\105\105\0\2\106\2\0\2\107\75\0\2\110"+
    "\6\0\2\111\53\0\1\37\25\0\2\110\6\0\2\111"+
    "\60\0\1\112\10\0\1\113\1\112\3\0\1\113\10\0"+
    "\2\114\6\0\2\115\15\0\2\116\6\0\2\117\23\0"+
    "\1\112\10\0\1\113\1\112\3\0\1\113\10\0\2\114"+
    "\6\0\2\115\6\0\1\120\2\0\1\120\1\121\1\120"+
    "\1\122\2\116\6\0\2\117\50\0\2\123\150\0\2\124"+
    "\116\0\3\125\77\0\2\126\23\0\2\50\3\0\1\51"+
    "\5\0\1\50\41\0\1\20\2\0\4\20\12\0\1\50"+
    "\12\0\1\50\7\0\1\127\11\0\1\127\160\0\2\130"+
    "\70\0\2\131\44\0\2\50\3\0\1\51\5\0\1\50"+
    "\41\0\1\20\2\0\4\20\2\0\2\132\6\0\1\50"+
    "\12\0\1\50\1\0\2\55\3\0\1\133\5\0\1\55"+
    "\13\0\2\134\45\0\1\55\12\0\1\55\1\0\2\56"+
    "\2\57\1\0\1\60\1\61\1\62\1\63\2\0\1\56"+
    "\4\0\1\61\1\62\1\63\2\0\1\63\7\0\2\64"+
    "\2\65\2\0\2\66\2\67\4\0\2\70\13\0\2\71"+
    "\2\0\2\72\1\56\12\0\1\56\1\0\2\57\3\0"+
    "\1\135\1\136\1\62\1\137\2\0\1\57\4\0\1\136"+
    "\1\62\1\137\2\0\1\137\7\0\2\64\4\0\2\66"+
    "\2\67\4\0\2\70\13\0\2\71\2\0\2\72\1\57"+
    "\12\0\1\57\7\0\1\140\11\0\1\140\145\0\2\141"+
    "\106\0\3\142\77\0\2\143\122\0\3\144\40\0\2\145"+
    "\3\0\1\146\2\0\1\147\2\0\1\145\6\0\1\147"+
    "\2\0\1\147\46\0\3\145\12\0\1\145\7\0\1\150"+
    "\11\0\1\150\131\0\2\151\113\0\2\152\113\0\2\153"+
    "\105\0\2\154\2\0\2\155\46\0\2\50\3\0\1\51"+
    "\5\0\1\50\15\0\2\52\15\0\3\50\2\0\1\20"+
    "\2\0\4\20\2\0\2\54\6\0\1\50\12\0\1\50"+
    "\36\0\2\156\64\0\1\157\11\0\1\157\2\0\1\157"+
    "\76\0\1\160\11\0\1\160\40\0\2\161\4\0\2\162"+
    "\64\0\2\163\105\0\2\164\50\0\2\101\3\0\1\165"+
    "\5\0\1\101\13\0\2\166\45\0\1\101\12\0\1\101"+
    "\36\0\2\167\35\0\2\170\50\0\2\171\123\0\2\172"+
    "\73\0\2\173\17\0\3\174\101\0\2\175\123\0\2\176"+
    "\71\0\2\177\150\0\2\200\72\0\2\201\71\0\2\202"+
    "\105\0\2\203\70\0\1\204\1\0\1\205\7\0\1\204"+
    "\1\0\1\205\2\0\1\205\5\0\2\206\126\0\3\207"+
    "\46\0\1\210\11\0\1\210\72\0\4\211\6\0\1\212"+
    "\2\211\43\0\1\213\1\0\1\213\13\0\1\211\12\0"+
    "\1\211\1\0\4\211\6\0\1\212\2\211\43\0\1\213"+
    "\15\0\1\211\12\0\1\211\61\0\1\213\1\0\1\213"+
    "\75\0\2\214\44\0\2\124\3\0\1\215\5\0\1\124"+
    "\13\0\2\43\45\0\1\124\12\0\1\124\7\0\1\216"+
    "\11\0\1\216\171\0\3\217\20\0\1\220\11\0\1\220"+
    "\141\0\3\50\40\0\2\221\3\0\1\222\5\0\1\221"+
    "\13\0\2\73\14\0\2\223\1\0\3\224\2\0\1\20"+
    "\1\221\1\0\4\20\10\0\2\225\1\221\12\0\1\221"+
    "\5\0\1\50\22\0\2\50\6\0\2\50\12\0\2\50"+
    "\44\0\1\226\11\0\1\226\125\0\2\53\64\0\1\227"+
    "\11\0\1\227\145\0\2\230\75\0\2\231\61\0\1\232"+
    "\11\0\1\232\77\0\1\233\11\0\1\233\14\0\2\234"+
    "\64\0\1\235\11\0\1\235\2\0\1\235\76\0\1\236"+
    "\11\0\1\236\5\0\2\237\31\0\2\240\4\0\2\241"+
    "\60\0\2\242\50\0\2\145\3\0\1\146\2\0\1\147"+
    "\2\0\1\145\6\0\1\147\2\0\1\147\50\0\1\145"+
    "\12\0\1\145\7\0\1\243\11\0\1\243\131\0\2\244"+
    "\107\0\2\245\35\0\2\246\50\0\2\247\123\0\2\234"+
    "\73\0\2\250\17\0\3\251\101\0\2\252\123\0\2\150"+
    "\106\0\3\253\2\254\103\0\2\255\103\0\2\256\122\0"+
    "\3\257\21\0\2\260\62\0\2\261\1\0\3\262\3\0"+
    "\1\263\104\0\3\264\46\0\1\265\11\0\1\265\142\0"+
    "\3\266\77\0\2\267\107\0\2\270\35\0\2\271\1\272"+
    "\64\0\3\273\2\274\103\0\2\275\52\0\1\276\11\0"+
    "\1\276\142\0\3\277\75\0\2\300\35\0\2\301\62\0"+
    "\2\302\44\0\2\200\3\0\1\303\5\0\1\200\13\0"+
    "\2\110\45\0\1\200\12\0\1\200\7\0\1\213\11\0"+
    "\1\213\131\0\2\304\117\0\2\305\114\0\3\306\77\0"+
    "\2\307\101\0\2\306\72\0\1\310\11\0\1\310\2\0"+
    "\1\310\5\0\2\311\4\0\2\312\2\0\2\313\117\0"+
    "\2\314\36\0\4\211\6\0\1\212\2\211\61\0\1\211"+
    "\12\0\1\211\12\0\1\315\11\0\1\315\67\0\2\316"+
    "\3\0\1\317\5\0\1\316\31\0\2\320\1\0\3\321"+
    "\2\0\1\322\1\316\1\0\4\322\10\0\2\323\1\316"+
    "\12\0\1\316\7\0\1\324\11\0\1\324\110\0\1\325"+
    "\102\0\1\326\11\0\1\326\102\0\1\327\11\0\1\327"+
    "\2\0\1\327\65\0\2\221\3\0\1\222\5\0\1\221"+
    "\13\0\2\73\24\0\1\20\2\0\4\20\10\0\2\225"+
    "\1\221\12\0\1\221\7\0\1\330\11\0\1\330\72\0"+
    "\2\221\3\0\1\222\5\0\1\221\13\0\2\73\24\0"+
    "\1\20\1\221\1\0\4\20\10\0\2\225\1\221\12\0"+
    "\1\221\42\0\2\331\57\0\1\332\11\0\1\332\100\0"+
    "\1\333\11\0\1\333\126\0\2\234\65\0\1\236\11\0"+
    "\1\236\40\0\2\240\4\0\2\241\27\0\1\334\11\0"+
    "\1\334\2\0\1\334\126\0\2\335\120\0\3\336\2\337"+
    "\36\0\2\340\3\0\1\341\1\342\1\0\1\147\2\0"+
    "\1\340\1\0\1\343\2\0\1\342\1\0\1\147\2\0"+
    "\1\147\11\0\2\65\35\0\1\340\12\0\1\340\46\0"+
    "\2\241\75\0\2\344\10\0\2\345\11\0\1\346\73\0"+
    "\2\347\122\0\3\336\21\0\2\246\65\0\3\350\47\0"+
    "\1\351\11\0\1\351\122\0\2\237\130\0\3\154\77\0"+
    "\2\154\52\0\2\340\3\0\1\341\1\342\1\0\1\147"+
    "\2\0\1\340\1\0\1\343\2\0\1\342\1\0\1\147"+
    "\2\0\1\147\7\0\2\245\2\65\33\0\2\246\1\352"+
    "\12\0\1\340\46\0\2\67\52\0\1\353\11\0\1\353"+
    "\142\0\3\354\77\0\2\355\146\0\2\356\65\0\3\357"+
    "\21\0\2\360\103\0\2\361\62\0\2\362\111\0\2\363"+
    "\130\0\1\263\75\0\2\364\107\0\2\365\61\0\1\366"+
    "\11\0\1\366\132\0\2\367\111\0\2\370\120\0\3\371"+
    "\77\0\2\372\146\0\2\271\54\0\2\373\146\0\2\374"+
    "\54\0\2\375\107\0\2\376\31\0\2\377\2\0\2\u0100"+
    "\54\0\2\u0101\122\0\3\u0102\77\0\2\u0103\52\0\2\u0104"+
    "\3\0\1\u0105\5\0\1\u0104\31\0\2\u0106\1\0\3\u0107"+
    "\2\0\1\u0108\1\u0104\1\0\4\u0108\10\0\2\u0109\1\u0104"+
    "\12\0\1\u0104\7\0\1\u010a\11\0\1\u010a\137\0\2\213"+
    "\111\0\2\u010b\107\0\2\u010c\56\0\1\213\11\0\1\213"+
    "\2\0\1\213\124\0\2\u010d\63\0\1\213\11\0\1\213"+
    "\126\0\2\u010e\117\0\2\205\105\0\2\205\60\0\1\u010f"+
    "\11\0\1\u010f\2\0\1\u010f\65\0\2\316\3\0\1\317"+
    "\5\0\1\316\41\0\1\322\2\0\4\322\10\0\2\323"+
    "\1\316\12\0\1\316\7\0\1\u0110\11\0\1\u0110\72\0"+
    "\2\316\3\0\1\317\5\0\1\316\41\0\1\322\1\316"+
    "\1\0\4\322\10\0\2\323\1\316\12\0\1\316\42\0"+
    "\2\u0111\47\0\1\u0112\1\u0113\1\u0114\2\u0115\1\u0112\1\u0116"+
    "\1\u0117\1\u0118\1\u0119\1\0\1\u0112\1\u0114\1\u011a\2\u0112"+
    "\1\0\1\u0117\1\u0118\1\u011b\2\0\1\u011b\7\0\2\u011c"+
    "\2\u011d\2\0\2\u011e\2\u011f\1\0\1\u0112\2\0\2\u0120"+
    "\1\322\2\u0112\4\322\4\0\2\u0121\2\0\2\u0122\1\u0114"+
    "\1\u0112\2\0\2\u0112\3\0\2\u0112\1\u0114\30\0\2\u0123"+
    "\71\0\1\u0124\11\0\1\u0124\74\0\1\u0125\2\0\2\u0125"+
    "\1\0\1\u0125\12\0\2\u0125\2\0\1\u0125\1\0\1\u0125"+
    "\1\0\1\u0125\1\0\1\u0125\1\0\1\u0125\1\0\1\u0125"+
    "\1\0\1\u0125\1\0\1\u0125\3\0\1\u0125\1\0\1\u0125"+
    "\10\0\1\u0125\1\0\1\u0125\1\0\1\u0125\1\0\1\u0125"+
    "\1\0\1\u0125\3\0\1\u0125\2\0\1\u0125\1\0\1\u0125"+
    "\15\0\1\u0126\11\0\1\u0126\76\0\1\u0127\11\0\1\u0127"+
    "\144\0\2\u0128\46\0\1\u0129\11\0\1\u0129\2\0\1\u0129"+
    "\75\0\1\u012a\11\0\1\u012a\2\0\1\u012a\76\0\1\u012b"+
    "\11\0\1\u012b\174\0\2\u012c\43\0\2\u012d\146\0\2\246"+
    "\23\0\1\u012e\11\0\1\u012e\145\0\2\u012f\36\0\2\u0130"+
    "\3\0\1\u0131\1\342\1\0\1\147\2\0\1\u0130\4\0"+
    "\1\342\1\0\1\147\2\0\1\147\11\0\2\65\35\0"+
    "\1\u0130\12\0\1\u0130\57\0\1\346\73\0\2\u0132\140\0"+
    "\2\235\62\0\2\u0133\62\0\1\u0134\11\0\1\u0134\2\0"+
    "\1\u0134\65\0\2\340\3\0\1\341\1\342\1\0\1\147"+
    "\2\0\1\340\1\0\1\343\2\0\1\342\1\0\1\147"+
    "\2\0\1\147\11\0\2\65\33\0\2\246\1\340\12\0"+
    "\1\340\36\0\2\245\31\0\2\u0135\2\0\2\246\54\0"+
    "\2\142\62\0\1\u0136\11\0\1\u0136\2\0\1\u0136\124\0"+
    "\2\u0137\111\0\2\u0138\111\0\2\u0139\62\0\1\u013a\11\0"+
    "\1\u013a\2\0\1\u013a\126\0\2\u013b\123\0\2\u013c\46\0"+
    "\1\u013d\11\0\1\u013d\2\0\1\u013d\75\0\1\u013e\11\0"+
    "\1\u013e\2\0\1\u013e\135\0\3\u013f\110\0\3\u0140\101\0"+
    "\2\u0141\111\0\2\u0142\60\0\1\u0143\11\0\1\u0143\2\0"+
    "\1\u0143\124\0\2\u0144\105\0\2\u0145\126\0\3\u0146\103\0"+
    "\2\u0147\105\0\2\u0148\62\0\1\u0149\11\0\1\u0149\2\0"+
    "\1\u0149\126\0\2\u014a\111\0\2\u014b\50\0\2\u0104\3\0"+
    "\1\u0105\5\0\1\u0104\41\0\1\u0108\2\0\4\u0108\10\0"+
    "\2\u0109\1\u0104\12\0\1\u0104\7\0\1\u014c\11\0\1\u014c"+
    "\72\0\2\u0104\3\0\1\u0105\5\0\1\u0104\41\0\1\u0108"+
    "\1\u0104\1\0\4\u0108\10\0\2\u0109\1\u0104\12\0\1\u0104"+
    "\42\0\2\u014d\50\0\2\u014e\2\u014f\1\0\1\u0150\1\u0151"+
    "\1\u0152\1\u0153\2\0\1\u014e\1\u0154\3\0\1\u0151\1\u0152"+
    "\1\u0153\2\0\1\u0153\7\0\2\u0155\2\u0156\2\0\2\u0157"+
    "\2\u0158\4\0\2\u0159\1\u0108\2\0\4\u0108\4\0\2\u015a"+
    "\2\0\2\u015b\1\u014e\12\0\1\u014e\30\0\2\u015c\71\0"+
    "\1\u015d\11\0\1\u015d\144\0\2\213\126\0\2\213\27\0"+
    "\1\u015e\11\0\1\u015e\12\0\2\u015f\2\u0160\2\u0161\2\u0162"+
    "\2\u0163\2\u0164\140\0\2\213\24\0\1\u0165\11\0\1\u0165"+
    "\100\0\1\u0166\11\0\1\u0166\144\0\2\u0167\36\0\1\u0168"+
    "\1\u0114\2\u0169\1\0\1\u016a\1\u016b\1\u0118\1\u016c\1\u016d"+
    "\1\0\1\u0168\1\u016e\3\0\1\u016b\1\u0118\1\u016c\1\u016d"+
    "\1\0\1\u016c\7\0\2\u016f\2\u011d\2\0\2\u0170\2\u0171"+
    "\4\0\2\u0172\1\u0173\2\0\1\u0174\1\u0173\1\u0175\1\322"+
    "\4\0\2\u0176\2\0\2\u0177\1\u0168\12\0\1\u0168\1\0"+
    "\2\u0168\2\u0169\1\0\1\u016a\1\u016b\1\u0118\1\u016c\1\u016d"+
    "\1\0\1\u0168\1\u016e\3\0\1\u016b\1\u0118\1\u016c\1\u016d"+
    "\1\0\1\u016c\7\0\2\u016f\2\u011d\2\0\2\u0170\2\u0171"+
    "\4\0\2\u0172\1\u0173\2\0\1\u0174\1\u0173\1\u0175\1\322"+
    "\4\0\2\u0176\2\0\2\u0177\1\u0168\12\0\1\u0168\1\0"+
    "\2\u0169\2\u016e\1\0\1\u0178\1\u0179\1\u0118\1\u017a\1\u016d"+
    "\1\0\1\u0169\1\u016e\3\0\1\u0179\1\u0118\1\u017a\1\u016d"+
    "\1\0\1\u017a\7\0\2\u016f\4\0\2\u0170\2\u0171\4\0"+
    "\2\u0172\1\u0173\2\0\1\u0174\1\u0173\1\u0175\1\322\4\0"+
    "\2\u0176\2\0\2\u0177\1\u0169\12\0\1\u0169\7\0\1\u017b"+
    "\11\0\1\u017b\145\0\2\u017c\106\0\3\u017d\77\0\2\u017e"+
    "\52\0\4\u016e\1\0\1\u017f\1\u0180\1\0\1\u0181\1\u016d"+
    "\1\0\2\u016e\3\0\1\u0180\1\0\1\u0181\1\u016d\1\0"+
    "\1\u0181\7\0\2\u0182\4\0\2\u0183\2\u0184\4\0\2\u0185"+
    "\1\u0173\2\0\1\u0174\1\u0173\1\u0175\1\322\4\0\2\u0186"+
    "\2\0\2\u0187\1\u016e\12\0\1\u016e\51\0\3\u0188\40\0"+
    "\2\u0189\3\0\1\u018a\2\0\1\u018b\2\0\1\u0189\6\0"+
    "\1\u018b\2\0\1\u018b\27\0\1\u018c\2\0\4\u018c\10\0"+
    "\2\u018d\1\u0189\12\0\1\u0189\7\0\1\u018e\11\0\1\u018e"+
    "\131\0\2\u018f\113\0\2\u0190\113\0\2\u0191\105\0\2\u0192"+
    "\2\0\2\u0193\46\0\2\u0194\3\0\1\u0195\5\0\1\u0194"+
    "\15\0\2\u0196\15\0\3\u0194\2\0\1\u0197\2\0\4\u0197"+
    "\2\0\2\u0198\6\0\1\u0194\12\0\1\u0194\11\0\1\u0199"+
    "\11\0\1\u0199\2\0\1\u0199\70\0\1\u0125\2\0\2\u0125"+
    "\1\0\1\u0125\4\0\1\u019a\5\0\2\u0125\2\0\1\u0125"+
    "\1\0\1\u0125\1\0\1\u0125\1\0\1\u0125\1\0\1\u0125"+
    "\1\0\1\u0125\1\0\1\u0125\1\0\1\u0125\3\0\1\u0125"+
    "\1\0\1\u0125\10\0\1\u0125\1\0\1\u0125\1\0\1\u0125"+
    "\1\0\1\u0125\1\0\1\u0125\3\0\1\u0125\2\0\1\u0125"+
    "\1\0\1\u0125\16\0\1\50\110\0\1\u019b\11\0\1\u019b"+
    "\2\0\1\u019b\153\0\2\u019c\34\0\1\u019d\11\0\1\u019d"+
    "\100\0\1\u019e\11\0\1\u019e\101\0\1\56\105\0\1\u019f"+
    "\31\0\2\u01a0\6\0\1\145\53\0\1\u01a1\11\0\1\u01a1"+
    "\2\0\1\u01a1\74\0\1\u01a2\11\0\1\u01a2\77\0\1\233"+
    "\11\0\1\233\100\0\1\u01a3\11\0\1\u01a3\100\0\1\u01a4"+
    "\11\0\1\u01a4\102\0\1\u01a5\11\0\1\u01a5\2\0\1\u01a5"+
    "\76\0\1\u01a6\11\0\1\u01a6\132\0\2\u01a7\142\0\2\356"+
    "\1\254\55\0\2\u01a8\60\0\1\u01a9\11\0\1\u01a9\2\0"+
    "\1\u01a9\126\0\2\u01aa\144\0\2\260\1\u01ab\64\0\3\u01ac"+
    "\126\0\2\u01ad\32\0\1\u01ae\1\u01af\10\0\1\u01ae\1\u01af"+
    "\2\0\1\u01af\17\0\2\u01b0\21\0\2\u01b1\4\0\1\u01b2"+
    "\25\0\1\u01b3\11\0\1\u01b3\126\0\2\u01b4\111\0\2\u01b5"+
    "\122\0\3\u01b6\110\0\3\u01b7\134\0\2\374\1\274\55\0"+
    "\2\u01b8\105\0\2\u01b9\35\0\2\u01ba\1\u01bb\55\0\2\u01bc"+
    "\120\0\3\u01bd\101\0\2\u01be\120\0\3\u01bf\110\0\3\u01c0"+
    "\47\0\1\u01c1\11\0\1\u01c1\144\0\2\u01c2\36\0\2\u014e"+
    "\2\u014f\1\0\1\u0150\1\u0151\1\u0152\1\u0153\2\0\1\u014e"+
    "\1\u0154\3\0\1\u0151\1\u0152\1\u0153\2\0\1\u0153\7\0"+
    "\2\u0155\2\u0156\2\0\2\u0157\2\u0158\4\0\2\u0159\1\u0108"+
    "\2\0\4\u0108\4\0\2\u015a\2\0\2\u01c3\1\u014e\12\0"+
    "\1\u014e\1\0\2\u014f\2\u0154\1\0\1\u01c4\1\u01c5\1\u0152"+
    "\1\u01c6\2\0\1\u014f\1\u0154\3\0\1\u01c5\1\u0152\1\u01c6"+
    "\2\0\1\u01c6\7\0\2\u0155\4\0\2\u0157\2\u0158\4\0"+
    "\2\u0159\1\u0108\2\0\4\u0108\4\0\2\u015a\2\0\2\u01c3"+
    "\1\u014f\12\0\1\u014f\7\0\1\u01c7\11\0\1\u01c7\145\0"+
    "\2\u01c8\106\0\3\u01c9\77\0\2\u01ca\52\0\4\u0154\1\0"+
    "\1\u01cb\5\0\2\u0154\40\0\1\u0108\2\0\4\u0108\10\0"+
    "\2\u0109\1\u0154\12\0\1\u0154\51\0\3\u01cc\40\0\2\u01cd"+
    "\3\0\1\u01ce\2\0\1\u01cf\2\0\1\u01cd\6\0\1\u01cf"+
    "\2\0\1\u01cf\27\0\1\u01d0\2\0\4\u01d0\10\0\2\u01d1"+
    "\1\u01cd\12\0\1\u01cd\7\0\1\u01d2\11\0\1\u01d2\131\0"+
    "\2\u01d3\113\0\2\u01d4\113\0\2\u01d5\105\0\2\u01d6\2\0"+
    "\2\u01d7\46\0\2\u01d8\3\0\1\u01d9\5\0\1\u01d8\15\0"+
    "\2\u01da\15\0\3\u01d8\2\0\1\u01db\2\0\4\u01db\2\0"+
    "\2\u01dc\6\0\1\u01d8\12\0\1\u01d8\11\0\1\u01dd\11\0"+
    "\1\u01dd\2\0\1\u01dd\130\0\2\u01de\113\0\2\u01df\117\0"+
    "\2\u01e0\71\0\2\u01e1\126\0\3\u01e2\130\0\2\u01e3\2\0"+
    "\2\u01e4\23\0\1\u01e5\11\0\1\u01e5\24\0\2\u01e6\52\0"+
    "\1\u01e7\11\0\1\u01e7\102\0\1\u01e8\11\0\1\u01e8\2\0"+
    "\1\u01e8\153\0\2\u01e9\76\0\2\u01ea\75\0\2\u01eb\105\0"+
    "\2\u01ec\115\0\2\u01ed\7\0\3\u0188\46\0\1\u01ee\11\0"+
    "\1\u01ee\125\0\2\u01ef\2\0\2\u01f0\113\0\2\u0190\2\0"+
    "\2\u01f1\43\0\1\u0112\1\u0113\1\u0114\2\u0115\1\u0112\1\u0116"+
    "\1\u0117\1\u0118\1\u0119\1\0\1\u0112\1\u0114\1\u011a\2\u0112"+
    "\1\0\1\u0117\1\u0118\1\u011b\2\0\1\u011b\1\0\1\u01f2"+
    "\5\0\2\u011c\2\u011d\2\0\2\u011e\2\u011f\1\0\1\u0112"+
    "\2\0\2\u0120\1\322\2\u0112\4\322\4\0\2\u0121\2\0"+
    "\2\u0122\1\u0114\1\u0112\2\0\2\u0112\3\0\2\u0112\1\u0114"+
    "\1\u0112\1\u0113\1\u0114\2\u0115\1\u0112\1\u0116\1\u0117\1\u0118"+
    "\1\u0119\1\0\1\u0112\1\u0114\1\u011a\2\u0112\1\0\1\u0117"+
    "\1\u0118\1\u011b\2\0\1\u011b\1\0\1\u01f2\5\0\2\u011c"+
    "\2\u011d\2\0\2\u011e\2\u011f\1\0\1\u0112\2\0\2\u0120"+
    "\1\u0173\2\u0112\4\u0173\4\0\2\u0121\2\0\2\u0122\1\u0114"+
    "\1\u0112\2\0\2\u0112\3\0\2\u0112\1\u0114\1\u0112\1\u0113"+
    "\1\u0114\2\u0115\1\u0112\1\u0116\1\u0117\1\u0118\1\u0119\1\0"+
    "\1\u0112\1\u0114\1\u011a\2\u0112\1\0\1\u0117\1\u0118\1\u011b"+
    "\2\0\1\u011b\1\0\1\u01f2\5\0\2\u011c\2\u011d\2\0"+
    "\2\u011e\2\u011f\1\0\1\u0112\2\0\2\u0120\1\u0173\2\u0112"+
    "\1\u0173\1\322\2\u0173\4\0\2\u0121\2\0\2\u0122\1\u0114"+
    "\1\u0112\2\0\2\u0112\3\0\2\u0112\1\u0114\44\0\2\u01f3"+
    "\75\0\2\u0123\6\0\2\u01f4\2\0\2\u0193\3\0\3\u01f5"+
    "\2\u01f6\44\0\1\u01f7\11\0\1\u01f7\145\0\2\u01f8\75\0"+
    "\2\u01f9\61\0\1\u01fa\11\0\1\u01fa\77\0\1\u01fb\11\0"+
    "\1\u01fb\14\0\2\u01fc\64\0\1\u01fd\11\0\1\u01fd\2\0"+
    "\1\u01fd\76\0\1\u01fe\11\0\1\u01fe\5\0\2\u01ff\31\0"+
    "\2\u0200\4\0\2\u0201\25\0\1\u0202\11\0\1\u0202\145\0"+
    "\2\u0203\75\0\2\u0204\111\0\2\u01ed\60\0\1\u01f6\11\0"+
    "\1\u01f6\125\0\2\u01ef\2\0\2\u0205\117\0\2\u01f1\107\0"+
    "\2\u0206\75\0\2\u0123\6\0\2\u0207\7\0\3\u01f5\2\u01f6"+
    "\77\0\2\u0208\50\0\2\u0189\3\0\1\u018a\2\0\1\u018b"+
    "\2\0\1\u0189\6\0\1\u018b\2\0\1\u018b\27\0\1\u018c"+
    "\2\0\4\u018c\10\0\2\u0209\1\u0189\12\0\1\u0189\7\0"+
    "\1\u020a\11\0\1\u020a\131\0\2\u020b\51\0\1\u0112\1\u020c"+
    "\1\u020d\2\u020e\1\u0112\1\u020f\1\u0210\1\u0211\1\u0212\1\0"+
    "\1\u0112\1\u020d\1\u0213\2\u0112\1\0\1\u0210\1\u0211\1\u0214"+
    "\2\0\1\u0214\7\0\2\u0215\2\u0216\2\0\2\u0217\2\u0218"+
    "\1\0\1\u0112\2\0\2\u0219\1\u018c\2\u0112\4\u018c\4\0"+
    "\2\u021a\2\0\2\u021b\1\u020d\1\u0112\2\0\2\u0112\3\0"+
    "\2\u0112\1\u020d\1\0\2\u0189\3\0\1\u018a\2\0\1\u018b"+
    "\2\0\1\u0189\6\0\1\u018b\2\0\1\u018b\1\0\2\u021c"+
    "\24\0\1\u018c\2\0\4\u018c\10\0\2\u0209\1\u0189\12\0"+
    "\1\u0189\36\0\2\u021d\35\0\2\u021e\50\0\2\u021f\123\0"+
    "\2\u01fc\73\0\2\u0220\17\0\3\u0221\101\0\2\u0222\123\0"+
    "\2\u018e\36\0\2\u0194\3\0\1\u0195\5\0\1\u0194\41\0"+
    "\1\u0197\2\0\4\u0197\12\0\1\u0194\12\0\1\u0194\7\0"+
    "\1\u0223\11\0\1\u0223\160\0\2\u0224\23\0\2\u0225\2\u0226"+
    "\1\0\1\u0227\1\u0228\1\u0229\1\u022a\2\0\1\u0225\4\0"+
    "\1\u0228\1\u0229\1\u022a\2\0\1\u022a\1\0\2\u022b\4\0"+
    "\2\u022c\4\0\2\u022d\2\u022e\4\0\2\u022f\1\u0197\2\0"+
    "\4\u0197\4\0\2\u0230\2\0\2\u0231\1\u0225\12\0\1\u0225"+
    "\1\0\2\u0194\3\0\1\u0195\5\0\1\u0194\41\0\1\u0197"+
    "\2\0\4\u0197\2\0\2\u0232\6\0\1\u0194\12\0\1\u0194"+
    "\12\0\1\u0233\11\0\1\u0233\71\0\2\u019a\2\0\2\u019a"+
    "\1\0\1\u019a\4\0\1\u0234\5\0\2\u019a\2\0\1\u019a"+
    "\1\0\1\u019a\1\0\1\u019a\1\0\1\u019a\1\0\1\u019a"+
    "\1\0\1\u019a\1\0\1\u019a\1\0\1\u019a\3\0\1\u019a"+
    "\1\0\2\u019a\2\0\4\u019a\1\0\1\u019a\1\0\1\u019a"+
    "\1\0\1\u019a\1\0\1\u019a\1\0\1\u019a\3\0\1\u019a"+
    "\2\0\1\u019a\1\0\1\u019a\15\0\1\u0235\11\0\1\u0235"+
    "\140\0\1\221\1\0\1\221\51\0\1\55\112\0\1\57"+
    "\137\0\2\u0236\52\0\2\145\2\0\1\145\1\146\2\0"+
    "\1\147\2\0\1\145\6\0\1\147\2\0\1\147\50\0"+
    "\1\145\12\0\1\145\1\0\2\340\3\0\1\341\1\342"+
    "\1\0\1\147\2\0\1\340\1\0\1\343\2\0\1\342"+
    "\1\0\1\147\2\0\1\147\11\0\2\65\33\0\2\246"+
    "\1\352\12\0\1\340\11\0\1\u0237\11\0\1\u0237\2\0"+
    "\1\u0237\74\0\1\u0238\11\0\1\u0238\136\0\2\u0239\44\0"+
    "\2\340\3\0\1\341\1\342\1\62\1\u023a\2\0\1\340"+
    "\1\0\1\343\2\0\1\342\1\62\1\u023a\2\0\1\u023a"+
    "\11\0\2\65\4\0\2\u023b\21\0\2\u023c\4\0\1\u023d"+
    "\12\0\1\340\13\0\1\145\150\0\3\336\110\0\3\u023e"+
    "\134\0\2\360\1\u023f\64\0\3\u0240\134\0\2\260\54\0"+
    "\2\u0241\123\0\1\263\1\0\1\263\107\0\3\u0242\77\0"+
    "\2\u0243\111\0\2\u0244\115\0\2\u0245\55\0\1\u01ae\1\u01af"+
    "\10\0\1\u01ae\1\u01af\2\0\1\u01af\17\0\2\u01b0\21\0"+
    "\2\u01b1\33\0\1\101\110\0\1\u0246\11\0\1\u0246\2\0"+
    "\1\u0246\75\0\1\u0247\11\0\1\u0247\2\0\1\u0247\124\0"+
    "\2\u0248\111\0\2\u0249\122\0\3\u024a\110\0\3\u024b\77\0"+
    "\2\u024c\146\0\2\u01ba\65\0\3\u024d\77\0\2\u024e\122\0"+
    "\3\u024f\77\0\2\u0242\111\0\2\u0250\62\0\1\u0251\11\0"+
    "\1\u0251\2\0\1\u0251\153\0\2\u0252\52\0\2\u015c\6\0"+
    "\2\u01d6\2\0\2\u01d7\54\0\1\u0253\11\0\1\u0253\145\0"+
    "\2\u0254\75\0\2\u0255\61\0\1\u0256\11\0\1\u0256\77\0"+
    "\1\u0257\11\0\1\u0257\14\0\2\u0258\64\0\1\u0259\11\0"+
    "\1\u0259\2\0\1\u0259\76\0\1\u025a\11\0\1\u025a\5\0"+
    "\2\u025b\31\0\2\u025c\4\0\2\u025d\25\0\1\u025e\11\0"+
    "\1\u025e\133\0\2\u025f\50\0\2\u01cd\3\0\1\u01ce\2\0"+
    "\1\u01cf\2\0\1\u01cd\6\0\1\u01cf\2\0\1\u01cf\27\0"+
    "\1\u01d0\2\0\4\u01d0\10\0\2\u0260\1\u01cd\12\0\1\u01cd"+
    "\7\0\1\u0261\11\0\1\u0261\131\0\2\u0262\52\0\2\u0263"+
    "\2\u0264\1\0\1\u0265\1\u0266\1\u0267\1\u0268\2\0\1\u0263"+
    "\4\0\1\u0266\1\u0267\1\u0268\2\0\1\u0268\7\0\2\u0269"+
    "\2\u026a\2\0\2\u026b\2\u026c\4\0\2\u026d\1\u01d0\2\0"+
    "\4\u01d0\4\0\2\u026e\2\0\2\u026f\1\u0263\12\0\1\u0263"+
    "\1\0\2\u01cd\3\0\1\u01ce\2\0\1\u01cf\2\0\1\u01cd"+
    "\6\0\1\u01cf\2\0\1\u01cf\1\0\2\u0270\24\0\1\u01d0"+
    "\2\0\4\u01d0\10\0\2\u0260\1\u01cd\12\0\1\u01cd\36\0"+
    "\2\u0271\35\0\2\u0272\50\0\2\u0273\123\0\2\u0258\73\0"+
    "\2\u0274\17\0\3\u0275\101\0\2\u0276\123\0\2\u01d2\36\0"+
    "\2\u01d8\3\0\1\u01d9\5\0\1\u01d8\41\0\1\u01db\2\0"+
    "\4\u01db\12\0\1\u01d8\12\0\1\u01d8\7\0\1\u0277\11\0"+
    "\1\u0277\160\0\2\u0278\23\0\2\u0279\2\u027a\1\0\1\u027b"+
    "\1\u027c\1\u027d\1\u027e\2\0\1\u0279\4\0\1\u027c\1\u027d"+
    "\1\u027e\2\0\1\u027e\1\0\2\u027f\4\0\2\u0280\4\0"+
    "\2\u0281\2\u0282\4\0\2\u0283\1\u01db\2\0\4\u01db\4\0"+
    "\2\u0284\2\0\2\u0285\1\u0279\12\0\1\u0279\1\0\2\u01d8"+
    "\3\0\1\u01d9\5\0\1\u01d8\41\0\1\u01db\2\0\4\u01db"+
    "\2\0\2\u0286\6\0\1\u01d8\12\0\1\u01d8\12\0\1\u0287"+
    "\11\0\1\u0287\134\0\2\u0288\111\0\2\u0289\52\0\1\u028a"+
    "\11\0\1\u028a\137\0\2\u01e4\140\0\2\u028b\23\0\1\u028c"+
    "\11\0\1\u028c\142\0\3\u01de\77\0\2\u028d\111\0\2\u028e"+
    "\12\0\2\u028f\43\0\1\211\116\0\1\u0290\11\0\1\u0290"+
    "\140\0\1\316\1\0\1\316\45\0\1\u0291\11\0\1\u0291"+
    "\14\0\2\u01fc\64\0\1\u0292\1\u01fe\10\0\1\u0292\1\u01fe"+
    "\1\0\1\u0292\3\0\2\u01ff\6\0\2\u0293\2\0\2\u0294"+
    "\15\0\2\u0200\4\0\2\u0201\2\u0295\65\0\3\u0296\46\0"+
    "\1\u0297\11\0\1\u0297\127\0\2\u021d\35\0\2\u0298\54\0"+
    "\2\u01f6\105\0\2\u0299\123\0\2\u029a\73\0\2\u029b\17\0"+
    "\3\u029c\101\0\2\u029d\111\0\2\u029e\144\0\2\u0295\24\0"+
    "\1\u029f\11\0\1\u029f\77\0\1\u02a0\11\0\1\u02a0\14\0"+
    "\2\u01fc\64\0\1\u0292\1\u01fe\10\0\1\u0292\1\u01fe\1\0"+
    "\1\u0292\13\0\2\u0293\2\0\2\u0294\15\0\2\u0200\4\0"+
    "\2\u0201\2\u0295\25\0\1\u02a1\11\0\1\u02a1\2\0\1\u02a1"+
    "\126\0\2\u02a2\120\0\3\u02a3\2\u02a4\35\0\1\u0112\1\u02a5"+
    "\1\u02a6\2\u011a\1\u0112\1\u02a7\1\u02a8\1\0\1\u02a9\1\0"+
    "\1\u0112\1\u02a6\1\u011a\1\u02aa\1\u0112\1\0\1\u02a8\1\0"+
    "\1\u018b\2\0\1\u018b\11\0\2\u011d\7\0\1\u0112\5\0"+
    "\2\u0112\16\0\1\u02a6\1\u0112\2\0\2\u0112\3\0\2\u0112"+
    "\1\u02a6\46\0\2\u0201\43\0\1\u0112\1\u02ab\3\u0213\1\u0112"+
    "\1\u02ac\2\0\1\u0112\1\0\1\u0112\2\u0213\2\u0112\12\0"+
    "\2\u02ad\10\0\2\u02ae\3\0\1\u0112\5\0\1\u02af\1\u0112"+
    "\16\0\1\u0213\1\u0112\2\0\2\u0112\3\0\2\u0112\1\u0213"+
    "\40\0\2\u02b0\122\0\3\u02a3\21\0\2\u021e\24\0\1\u02b1"+
    "\11\0\1\u02b1\77\0\1\u02a0\11\0\1\u02a0\102\0\1\u0292"+
    "\11\0\1\u0292\2\0\1\u0292\13\0\2\u0293\2\0\2\u0294"+
    "\25\0\2\u0295\50\0\2\u02b2\105\0\2\u02b3\17\0\3\u02b4"+
    "\101\0\2\u01ec\120\0\3\u02b5\67\0\2\u021c\71\0\1\u02b6"+
    "\11\0\1\u02b6\122\0\2\u01ff\60\0\1\u02b7\1\u020d\2\u02b8"+
    "\1\0\1\u02b9\1\u02ba\1\u0211\1\u02bb\1\u016d\1\0\1\u02b7"+
    "\1\u02bc\3\0\1\u02ba\1\u0211\1\u02bb\1\u016d\1\0\1\u02bb"+
    "\7\0\2\u02bd\2\u0216\2\0\2\u02be\2\u02bf\4\0\2\u02c0"+
    "\1\u02c1\2\0\1\u02c2\1\u02c1\1\u02c3\5\0\2\u02c4\2\0"+
    "\2\u02c5\1\u02b7\12\0\1\u02b7\1\0\2\u02b7\2\u02b8\1\0"+
    "\1\u02b9\1\u02ba\1\u0211\1\u02bb\1\u016d\1\0\1\u02b7\1\u02bc"+
    "\3\0\1\u02ba\1\u0211\1\u02bb\1\u016d\1\0\1\u02bb\7\0"+
    "\2\u02bd\2\u0216\2\0\2\u02be\2\u02bf\4\0\2\u02c0\1\u02c1"+
    "\2\0\1\u02c2\1\u02c1\1\u02c3\5\0\2\u02c4\2\0\2\u02c5"+
    "\1\u02b7\12\0\1\u02b7\1\0\2\u02b8\2\u02bc\1\0\1\u02c6"+
    "\1\u02c7\1\u0211\1\u02c8\1\u016d\1\0\1\u02b8\1\u02bc\3\0"+
    "\1\u02c7\1\u0211\1\u02c8\1\u016d\1\0\1\u02c8\7\0\2\u02bd"+
    "\4\0\2\u02be\2\u02bf\4\0\2\u02c0\1\u02c1\2\0\1\u02c2"+
    "\1\u02c1\1\u02c3\5\0\2\u02c4\2\0\2\u02c5\1\u02b8\12\0"+
    "\1\u02b8\7\0\1\u02c9\11\0\1\u02c9\145\0\2\u02ca\106\0"+
    "\3\u02cb\77\0\2\u02cc\52\0\4\u02bc\1\0\1\u02cd\1\u0180"+
    "\1\0\1\u0181\1\u016d\1\0\2\u02bc\3\0\1\u0180\1\0"+
    "\1\u0181\1\u016d\1\0\1\u0181\7\0\2\u0182\4\0\2\u0183"+
    "\2\u0184\4\0\2\u0185\1\u02c1\2\0\1\u02c2\1\u02c1\1\u02c3"+
    "\5\0\2\u0186\2\0\2\u02ce\1\u02bc\12\0\1\u02bc\51\0"+
    "\3\u02cf\40\0\2\u02d0\3\0\1\u02d1\2\0\1\u018b\2\0"+
    "\1\u02d0\6\0\1\u018b\2\0\1\u018b\46\0\3\u02d0\12\0"+
    "\1\u02d0\7\0\1\u02d2\11\0\1\u02d2\131\0\2\u02d3\113\0"+
    "\2\u02d4\113\0\2\u02d5\105\0\2\u02d6\2\0\2\u02d7\46\0"+
    "\2\u02d8\3\0\1\u02d9\5\0\1\u02d8\15\0\2\u02da\15\0"+
    "\3\u02d8\2\0\1\u02db\2\0\4\u02db\2\0\2\u02dc\6\0"+
    "\1\u02d8\12\0\1\u02d8\51\0\3\u0192\77\0\2\u0192\51\0"+
    "\1\u0112\1\u02a5\1\u02a6\2\u011a\1\u0112\1\u02a7\1\u02a8\1\0"+
    "\1\u02a9\1\0\1\u0112\1\u02a6\1\u011a\1\u02aa\1\u0112\1\0"+
    "\1\u02a8\1\0\1\u018b\2\0\1\u018b\7\0\2\u021d\2\u011d"+
    "\7\0\1\u0112\5\0\2\u0112\14\0\2\u021e\1\u02dd\1\u0112"+
    "\2\0\2\u0112\3\0\2\u0112\1\u02a6\46\0\2\u011f\52\0"+
    "\1\u02de\11\0\1\u02de\142\0\3\u02df\47\0\1\u02e0\11\0"+
    "\1\u02e0\141\0\3\u0194\40\0\2\u0225\2\u0226\1\0\1\u0227"+
    "\1\u0228\1\u0229\1\u022a\2\0\1\u0225\4\0\1\u0228\1\u0229"+
    "\1\u022a\2\0\1\u022a\1\0\2\u022b\4\0\2\u022c\4\0"+
    "\2\u022d\2\u022e\4\0\2\u022f\13\0\2\u0230\2\0\2\u0231"+
    "\1\u0225\12\0\1\u0225\1\0\2\u0226\3\0\1\u02e1\1\u0228"+
    "\1\u0229\1\u022a\2\0\1\u0226\4\0\1\u0228\1\u0229\1\u022a"+
    "\2\0\1\u022a\7\0\2\u022c\4\0\2\u022d\2\u022e\4\0"+
    "\2\u022f\13\0\2\u0230\2\0\2\u0231\1\u0226\12\0\1\u0226"+
    "\7\0\1\u02e2\11\0\1\u02e2\145\0\2\u02e3\106\0\3\u02e4"+
    "\77\0\2\u02e5\52\0\2\u02e6\3\0\1\u02e7\5\0\1\u02e6"+
    "\15\0\2\u02e8\15\0\3\u02e6\2\0\1\322\2\0\4\322"+
    "\2\0\2\u02e9\6\0\1\u02e6\12\0\1\u02e6\51\0\3\u02ea"+
    "\46\0\1\u02eb\11\0\1\u02eb\131\0\2\u02ec\113\0\2\u02ed"+
    "\113\0\2\u02ee\105\0\2\u02ef\2\0\2\u02f0\52\0\1\u0194"+
    "\22\0\2\u0194\6\0\2\u0194\12\0\2\u0194\50\0\1\124"+
    "\155\0\1\u02f1\2\0\4\u02f1\41\0\1\221\127\0\2\u02f2"+
    "\2\u02f3\71\0\1\u02f4\11\0\1\u02f4\77\0\1\u02f5\11\0"+
    "\1\u02f5\2\0\1\u02f5\64\0\1\346\2\0\106\346\42\0"+
    "\2\u02f6\111\0\2\u02f7\115\0\2\u02f8\46\0\2\340\3\0"+
    "\1\341\1\342\1\62\1\u023a\2\0\1\340\1\0\1\343"+
    "\2\0\1\342\1\62\1\u023a\2\0\1\u023a\11\0\2\65"+
    "\4\0\2\u023b\21\0\2\u023c\4\0\1\340\12\0\1\340"+
    "\40\0\2\u02f9\146\0\2\360\54\0\2\u02fa\62\0\1\u02fb"+
    "\11\0\1\u02fb\2\0\1\u02fb\75\0\1\u02fc\11\0\1\u02fc"+
    "\2\0\1\u02fc\151\0\2\u02fd\60\0\2\u02fe\105\0\2\u02ff"+
    "\17\0\3\u0300\50\0\1\u02fe\11\0\1\u02fe\2\0\1\u02fe"+
    "\75\0\1\u0301\11\0\1\u0301\2\0\1\u0301\124\0\2\u0302"+
    "\113\0\2\u0303\111\0\2\u0304\107\0\2\u0305\62\0\1\u0306"+
    "\11\0\1\u0306\2\0\1\u0306\124\0\2\u0307\62\0\1\u0308"+
    "\11\0\1\u0308\2\0\1\u0308\76\0\1\u0309\11\0\1\u0309"+
    "\140\0\1\u0104\1\0\1\u0104\46\0\1\u030a\11\0\1\u030a"+
    "\126\0\2\u0258\65\0\1\u025a\11\0\1\u025a\40\0\2\u025c"+
    "\4\0\2\u025d\27\0\1\u030b\11\0\1\u030b\2\0\1\u030b"+
    "\126\0\2\u030c\120\0\3\u030d\2\u030e\36\0\2\u030f\2\u0154"+
    "\1\0\1\u0310\1\u0311\1\0\1\u01cf\2\0\1\u030f\1\u0154"+
    "\1\u0312\2\0\1\u0311\1\0\1\u01cf\2\0\1\u01cf\11\0"+
    "\2\u0156\35\0\1\u030f\12\0\1\u030f\46\0\2\u025d\75\0"+
    "\2\u0313\10\0\2\u0314\11\0\1\u0315\73\0\2\u0316\122\0"+
    "\3\u030d\21\0\2\u0272\24\0\1\u0317\11\0\1\u0317\141\0"+
    "\3\u0318\67\0\2\u0270\71\0\1\u0319\11\0\1\u0319\122\0"+
    "\2\u025b\60\0\2\u0263\2\u0264\1\0\1\u0265\1\u0266\1\u0267"+
    "\1\u0268\2\0\1\u0263\4\0\1\u0266\1\u0267\1\u0268\2\0"+
    "\1\u0268\7\0\2\u0269\2\u026a\2\0\2\u026b\2\u026c\4\0"+
    "\2\u026d\13\0\2\u026e\2\0\2\u026f\1\u0263\12\0\1\u0263"+
    "\1\0\2\u0264\3\0\1\u031a\1\u031b\1\u0267\1\u031c\2\0"+
    "\1\u0264\4\0\1\u031b\1\u0267\1\u031c\2\0\1\u031c\7\0"+
    "\2\u0269\4\0\2\u026b\2\u026c\4\0\2\u026d\13\0\2\u026e"+
    "\2\0\2\u026f\1\u0264\12\0\1\u0264\7\0\1\u031d\11\0"+
    "\1\u031d\145\0\2\u031e\106\0\3\u031f\77\0\2\u0320\122\0"+
    "\3\u0321\40\0\2\u0322\3\0\1\u0323\2\0\1\u01cf\2\0"+
    "\1\u0322\6\0\1\u01cf\2\0\1\u01cf\46\0\3\u0322\12\0"+
    "\1\u0322\7\0\1\u0324\11\0\1\u0324\131\0\2\u0325\113\0"+
    "\2\u0326\113\0\2\u0327\105\0\2\u0328\2\0\2\u0329\46\0"+
    "\2\u032a\3\0\1\u032b\5\0\1\u032a\15\0\2\u032c\15\0"+
    "\3\u032a\2\0\1\u032d\2\0\4\u032d\2\0\2\u032e\6\0"+
    "\1\u032a\12\0\1\u032a\51\0\3\u01d6\77\0\2\u01d6\52\0"+
    "\2\u030f\2\u0154\1\0\1\u0310\1\u0311\1\0\1\u01cf\2\0"+
    "\1\u030f\1\u0154\1\u0312\2\0\1\u0311\1\0\1\u01cf\2\0"+
    "\1\u01cf\7\0\2\u0271\2\u0156\33\0\2\u0272\1\u032f\12\0"+
    "\1\u030f\46\0\2\u0158\52\0\1\u0330\11\0\1\u0330\142\0"+
    "\3\u0331\47\0\1\u0332\11\0\1\u0332\141\0\3\u01d8\40\0"+
    "\2\u0279\2\u027a\1\0\1\u027b\1\u027c\1\u027d\1\u027e\2\0"+
    "\1\u0279\4\0\1\u027c\1\u027d\1\u027e\2\0\1\u027e\1\0"+
    "\2\u027f\4\0\2\u0280\4\0\2\u0281\2\u0282\4\0\2\u0283"+
    "\13\0\2\u0284\2\0\2\u0285\1\u0279\12\0\1\u0279\1\0"+
    "\2\u027a\3\0\1\u0333\1\u027c\1\u027d\1\u027e\2\0\1\u027a"+
    "\4\0\1\u027c\1\u027d\1\u027e\2\0\1\u027e\7\0\2\u0280"+
    "\4\0\2\u0281\2\u0282\4\0\2\u0283\13\0\2\u0284\2\0"+
    "\2\u0285\1\u027a\12\0\1\u027a\7\0\1\u0334\11\0\1\u0334"+
    "\145\0\2\u0335\106\0\3\u0336\77\0\2\u0337\52\0\2\u0338"+
    "\3\0\1\u0339\5\0\1\u0338\15\0\2\u033a\15\0\3\u0338"+
    "\2\0\1\u0108\2\0\4\u0108\2\0\2\u033b\6\0\1\u0338"+
    "\12\0\1\u0338\51\0\3\u033c\46\0\1\u033d\11\0\1\u033d"+
    "\131\0\2\u033e\113\0\2\u033f\113\0\2\u0340\105\0\2\u0341"+
    "\2\0\2\u0342\52\0\1\u01d8\22\0\2\u01d8\6\0\2\u01d8"+
    "\12\0\2\u01d8\50\0\1\200\106\0\1\u01e5\11\0\1\u01e5"+
    "\121\0\2\u0343\70\0\1\u0344\11\0\1\u0344\100\0\1\u0345"+
    "\11\0\1\u0345\12\0\2\u0346\2\0\2\u0347\12\0\2\u010e"+
    "\106\0\3\u0348\75\0\2\213\64\0\1\u0349\11\0\1\u0349"+
    "\2\0\1\u0349\135\0\3\u034a\52\0\1\316\77\0\1\u01f2"+
    "\2\0\37\u01f2\2\u034b\45\u01f2\50\0\2\u02a0\117\0\2\u034c"+
    "\103\0\2\u01ec\114\0\3\u034d\124\0\2\u02a0\72\0\2\u034e"+
    "\103\0\2\u0192\7\0\3\u034d\37\0\1\u0112\1\u02a5\1\u02a6"+
    "\2\u011a\1\u0112\1\u02a7\1\u02a8\1\0\1\u02a9\1\0\1\u0112"+
    "\1\u02a6\1\u011a\1\u02aa\1\u0112\1\u02a0\1\u02a8\1\0\1\u018b"+
    "\1\0\1\u02a0\1\u018b\7\0\2\u021d\2\u011d\7\0\1\u0112"+
    "\5\0\2\u0112\14\0\2\u021e\1\u02dd\1\u0112\2\0\2\u0112"+
    "\3\0\2\u0112\1\u02a6\30\0\2\u034f\115\0\2\u0292\10\0"+
    "\2\u0350\52\0\1\u0351\11\0\1\u0351\142\0\3\u0352\110\0"+
    "\3\u0353\50\0\1\u0354\11\0\1\u0354\2\0\1\u0354\64\0"+
    "\1\u01f2\2\0\106\u01f2\14\0\1\u0355\11\0\1\u0355\174\0"+
    "\2\u0356\43\0\2\u0357\146\0\2\u021e\15\0\1\u0358\1\u02a6"+
    "\2\u016e\1\0\1\u0359\1\u035a\1\0\1\u035b\1\u016d\1\0"+
    "\1\u0358\1\u016e\1\u035c\2\0\1\u035a\1\0\1\u035b\1\u016d"+
    "\1\0\1\u035b\7\0\2\u0182\2\u011d\2\0\2\u0183\2\u0184"+
    "\4\0\2\u0185\1\u0173\2\0\1\u0174\1\u0173\1\u0175\1\322"+
    "\4\0\2\u0186\2\0\2\u0187\1\u0358\12\0\1\u0358\1\0"+
    "\2\u0358\2\u016e\1\0\1\u0359\1\u035a\1\0\1\u035b\1\u016d"+
    "\1\0\1\u0358\1\u016e\1\u035c\2\0\1\u035a\1\0\1\u035b"+
    "\1\u016d\1\0\1\u035b\7\0\2\u0182\2\u011d\2\0\2\u0183"+
    "\2\u0184\4\0\2\u0185\1\u0173\2\0\1\u0174\1\u0173\1\u0175"+
    "\1\322\4\0\2\u0186\2\0\2\u0187\1\u0358\12\0\1\u0358"+
    "\7\0\1\u035d\11\0\1\u035d\145\0\2\u035e\35\0\1\u0112"+
    "\1\u035f\1\u0360\2\u011a\1\u0112\1\u0361\1\u02a8\1\0\1\u02a9"+
    "\1\0\1\u0112\1\u0360\1\u011a\2\u0112\1\0\1\u02a8\1\0"+
    "\1\u018b\2\0\1\u018b\11\0\2\u011d\7\0\1\u0112\5\0"+
    "\2\u0112\16\0\1\u0360\1\u0112\2\0\2\u0112\3\0\2\u0112"+
    "\1\u0360\1\0\1\u02bc\1\u0213\2\u02bc\1\0\1\u02cd\1\u0180"+
    "\1\0\1\u0181\1\u016d\1\0\2\u02bc\3\0\1\u0180\1\0"+
    "\1\u0181\1\u016d\1\0\1\u0181\7\0\2\u0182\4\0\2\u0183"+
    "\2\u0184\4\0\2\u0185\1\u02c1\2\0\1\u02c2\1\u02c1\1\u02c3"+
    "\5\0\2\u0186\2\0\2\u02ce\1\u02bc\12\0\1\u02bc\7\0"+
    "\1\u0362\11\0\1\u0362\71\0\1\u0112\1\u02ab\3\u0213\1\u0112"+
    "\1\u02ac\2\0\1\u0112\1\0\1\u0112\2\u0213\2\u0112\31\0"+
    "\1\u0112\5\0\1\u02af\1\u0112\16\0\1\u0213\1\u0112\2\0"+
    "\2\u0112\3\0\2\u0112\1\u0213\40\0\2\u0363\51\0\1\u0112"+
    "\1\u02ab\3\u0213\1\u0112\1\u02ac\2\0\1\u0112\1\0\1\u0112"+
    "\2\u0213\2\u0112\31\0\1\u0112\5\0\2\u0112\16\0\1\u0213"+
    "\1\u0112\2\0\2\u0112\3\0\2\u0112\1\u0213\67\0\2\u01fd"+
    "\33\0\1\u0364\11\0\1\u0364\2\0\1\u0364\104\0\1\u02a0"+
    "\4\0\1\u02a0\121\0\2\u0292\10\0\2\u0365\52\0\1\u0366"+
    "\11\0\1\u0366\131\0\2\u0367\62\0\1\u0368\11\0\1\u0368"+
    "\2\0\1\u0368\140\0\2\u0369\75\0\2\u036a\111\0\2\u01ed"+
    "\7\0\3\u02cf\46\0\1\u036b\11\0\1\u036b\125\0\2\u01ef"+
    "\2\0\2\u036c\113\0\2\u02d4\2\0\2\u01f1\73\0\1\u01f2"+
    "\57\0\1\u01f2\32\0\1\u01f2\25\0\1\u02c1\2\0\4\u02c1"+
    "\23\0\1\u01f2\32\0\1\u01f2\25\0\1\u02c1\2\0\1\u02c1"+
    "\1\0\2\u02c1\23\0\1\u01f2\46\0\2\u036d\105\0\2\u036e"+
    "\2\0\2\u02d7\3\0\3\u01f5\2\u01f6\44\0\1\u036f\11\0"+
    "\1\u036f\145\0\2\u0370\75\0\2\u0371\61\0\1\u0372\11\0"+
    "\1\u0372\77\0\1\u0373\11\0\1\u0373\14\0\2\u0374\64\0"+
    "\1\u0375\11\0\1\u0375\2\0\1\u0375\76\0\1\u0376\11\0"+
    "\1\u0376\5\0\2\u01ff\31\0\2\u0377\4\0\2\u0378\56\0"+
    "\2\u0207\7\0\3\u01f5\2\u01f6\77\0\2\u0379\50\0\2\u02d0"+
    "\3\0\1\u02d1\2\0\1\u018b\2\0\1\u02d0\6\0\1\u018b"+
    "\2\0\1\u018b\50\0\1\u02d0\12\0\1\u02d0\7\0\1\u037a"+
    "\11\0\1\u037a\127\0\2\u037b\35\0\2\u037c\50\0\2\u037d"+
    "\123\0\2\u0374\73\0\2\u037e\17\0\3\u037f\101\0\2\u0380"+
    "\123\0\2\u02d2\36\0\2\u02d8\3\0\1\u02d9\5\0\1\u02d8"+
    "\41\0\1\u02db\2\0\4\u02db\12\0\1\u02d8\12\0\1\u02d8"+
    "\7\0\1\u0381\11\0\1\u0381\160\0\2\u0382\23\0\2\u0383"+
    "\2\u0384\1\0\1\u0385\1\u0386\1\u0387\1\u0388\2\0\1\u0383"+
    "\4\0\1\u0386\1\u0387\1\u0388\2\0\1\u0388\1\0\2\u0389"+
    "\4\0\2\u038a\4\0\2\u038b\2\u038c\4\0\2\u038d\1\u02db"+
    "\2\0\4\u02db\4\0\2\u038e\2\0\2\u038f\1\u0383\12\0"+
    "\1\u0383\1\0\2\u02d8\3\0\1\u02d9\5\0\1\u02d8\41\0"+
    "\1\u02db\2\0\4\u02db\2\0\2\u0390\6\0\1\u02d8\12\0"+
    "\1\u02d8\1\0\2\u0358\2\u016e\1\0\1\u0359\1\u035a\1\0"+
    "\1\u035b\1\u016d\1\0\1\u0358\1\u016e\1\u035c\2\0\1\u035a"+
    "\1\0\1\u035b\1\u016d\1\0\1\u035b\7\0\2\u0182\2\u011d"+
    "\2\0\2\u0183\2\u0184\4\0\2\u0185\1\u0173\2\0\1\u0174"+
    "\1\u0173\1\u0175\1\322\4\0\2\u0186\2\0\2\u0391\1\u0358"+
    "\12\0\1\u0358\36\0\2\u021d\31\0\2\u0392\2\0\2\u021e"+
    "\54\0\2\u017d\62\0\1\u0393\11\0\1\u0393\2\0\1\u0393"+
    "\73\0\1\u0394\11\0\1\u0394\101\0\1\u0395\11\0\1\u0395"+
    "\126\0\2\u0396\64\0\1\u0397\11\0\1\u0397\2\0\1\u0397"+
    "\76\0\1\u0398\11\0\1\u0398\40\0\2\u0399\4\0\2\u039a"+
    "\17\0\2\u02e6\3\0\1\u02e7\5\0\1\u02e6\41\0\1\322"+
    "\2\0\4\322\12\0\1\u02e6\12\0\1\u02e6\7\0\1\u039b"+
    "\11\0\1\u039b\160\0\2\u039c\23\0\2\u02e6\3\0\1\u02e7"+
    "\5\0\1\u02e6\41\0\1\322\2\0\4\322\2\0\2\u039d"+
    "\6\0\1\u02e6\12\0\1\u02e6\42\0\2\u039e\105\0\2\u039f"+
    "\35\0\2\u03a0\50\0\2\u03a1\123\0\2\u0396\73\0\2\u03a2"+
    "\17\0\3\u03a3\101\0\2\u03a4\123\0\2\u02eb\113\0\1\u02f1"+
    "\2\0\4\u02f1\17\0\1\u03a5\50\0\2\u03a6\103\0\2\u03a7"+
    "\70\0\1\340\111\0\1\u03a8\11\0\1\u03a8\120\0\2\237"+
    "\31\0\2\240\60\0\2\235\105\0\2\u03a9\17\0\3\u03aa"+
    "\50\0\1\u03ab\11\0\1\u03ab\2\0\1\u03ab\75\0\1\u03ac"+
    "\11\0\1\u03ac\2\0\1\u03ac\124\0\2\u03ad\117\0\2\u03ae"+
    "\52\0\1\u03af\11\0\1\u03af\102\0\1\u03b0\11\0\1\u03b0"+
    "\2\0\1\u03b0\135\0\3\u03b1\110\0\3\u03b2\50\0\1\u03b3"+
    "\11\0\1\u03b3\2\0\1\u03b3\161\0\2\u0100\1\u03b4\24\0"+
    "\1\u03b5\11\0\1\u03b5\2\0\1\u03b5\77\0\1\u0104\110\0"+
    "\1\u03b6\11\0\1\u03b6\2\0\1\u03b6\76\0\1\u03b7\11\0"+
    "\1\u03b7\174\0\2\u03b8\43\0\2\u03b9\146\0\2\u0272\15\0"+
    "\2\u030f\2\u0154\1\0\1\u0310\1\u0311\1\0\1\u01cf\2\0"+
    "\1\u030f\1\u0154\1\u0312\2\0\1\u0311\1\0\1\u01cf\2\0"+
    "\1\u01cf\11\0\2\u0156\14\0\1\u0108\2\0\4\u0108\10\0"+
    "\2\u0109\1\u030f\12\0\1\u030f\7\0\1\u03ba\11\0\1\u03ba"+
    "\145\0\2\u03bb\36\0\2\u03bc\2\u0154\1\0\1\u03bd\1\u0311"+
    "\1\0\1\u01cf\2\0\1\u03bc\1\u0154\3\0\1\u0311\1\0"+
    "\1\u01cf\2\0\1\u01cf\11\0\2\u0156\35\0\1\u03bc\12\0"+
    "\1\u03bc\57\0\1\u0315\73\0\2\u03be\140\0\2\u0259\33\0"+
    "\1\u03bf\11\0\1\u03bf\2\0\1\u03bf\124\0\2\u03c0\62\0"+
    "\1\u03c1\11\0\1\u03c1\2\0\1\u03c1\73\0\1\u03c2\11\0"+
    "\1\u03c2\145\0\2\u03c3\75\0\2\u03c4\61\0\1\u03c5\11\0"+
    "\1\u03c5\77\0\1\u03c6\11\0\1\u03c6\14\0\2\u03c7\64\0"+
    "\1\u03c8\11\0\1\u03c8\2\0\1\u03c8\76\0\1\u03c9\11\0"+
    "\1\u03c9\5\0\2\u025b\31\0\2\u03ca\4\0\2\u03cb\60\0"+
    "\2\u03cc\50\0\2\u0322\3\0\1\u0323\2\0\1\u01cf\2\0"+
    "\1\u0322\6\0\1\u01cf\2\0\1\u01cf\50\0\1\u0322\12\0"+
    "\1\u0322\7\0\1\u03cd\11\0\1\u03cd\127\0\2\u03ce\35\0"+
    "\2\u03cf\50\0\2\u03d0\123\0\2\u03c7\73\0\2\u03d1\17\0"+
    "\3\u03d2\101\0\2\u03d3\123\0\2\u0324\36\0\2\u032a\3\0"+
    "\1\u032b\5\0\1\u032a\41\0\1\u032d\2\0\4\u032d\12\0"+
    "\1\u032a\12\0\1\u032a\7\0\1\u03d4\11\0\1\u03d4\160\0"+
    "\2\u03d5\23\0\2\u03d6\2\u03d7\1\0\1\u03d8\1\u03d9\1\u03da"+
    "\1\u03db\2\0\1\u03d6\4\0\1\u03d9\1\u03da\1\u03db\2\0"+
    "\1\u03db\1\0\2\u03dc\4\0\2\u03dd\4\0\2\u03de\2\u03df"+
    "\4\0\2\u03e0\1\u032d\2\0\4\u032d\4\0\2\u03e1\2\0"+
    "\2\u03e2\1\u03d6\12\0\1\u03d6\1\0\2\u032a\3\0\1\u032b"+
    "\5\0\1\u032a\41\0\1\u032d\2\0\4\u032d\2\0\2\u03e3"+
    "\6\0\1\u032a\12\0\1\u032a\1\0\2\u030f\2\u0154\1\0"+
    "\1\u0310\1\u0311\1\0\1\u01cf\2\0\1\u030f\1\u0154\1\u0312"+
    "\2\0\1\u0311\1\0\1\u01cf\2\0\1\u01cf\11\0\2\u0156"+
    "\14\0\1\u0108\2\0\4\u0108\10\0\2\u03e4\1\u030f\12\0"+
    "\1\u030f\36\0\2\u0271\31\0\2\u03e5\2\0\2\u0272\54\0"+
    "\2\u01c9\62\0\1\u03e6\11\0\1\u03e6\2\0\1\u03e6\73\0"+
    "\1\u03e7\11\0\1\u03e7\101\0\1\u03e8\11\0\1\u03e8\126\0"+
    "\2\u03e9\64\0\1\u03ea\11\0\1\u03ea\2\0\1\u03ea\76\0"+
    "\1\u03eb\11\0\1\u03eb\40\0\2\u03ec\4\0\2\u03ed\17\0"+
    "\2\u0338\3\0\1\u0339\5\0\1\u0338\41\0\1\u0108\2\0"+
    "\4\u0108\12\0\1\u0338\12\0\1\u0338\7\0\1\u03ee\11\0"+
    "\1\u03ee\160\0\2\u03ef\23\0\2\u0338\3\0\1\u0339\5\0"+
    "\1\u0338\41\0\1\u0108\2\0\4\u0108\2\0\2\u03f0\6\0"+
    "\1\u0338\12\0\1\u0338\42\0\2\u03f1\105\0\2\u03f2\35\0"+
    "\2\u03f3\50\0\2\u03f4\123\0\2\u03e9\73\0\2\u03f5\17\0"+
    "\3\u03f6\101\0\2\u03f7\123\0\2\u033d\101\0\2\u03f8\75\0"+
    "\2\u028f\125\0\2\213\3\0\3\306\113\0\2\u03f9\46\0"+
    "\1\213\11\0\1\213\2\0\1\213\5\0\2\304\117\0"+
    "\2\u01e4\60\0\1\u0344\11\0\1\u0344\2\0\1\u0344\126\0"+
    "\2\u03fa\56\0\1\u03fb\11\0\1\u03fb\133\0\2\u03fc\107\0"+
    "\2\u03fd\2\0\2\u03fe\3\0\3\u03ff\75\0\2\u02a0\113\0"+
    "\2\u018f\4\0\2\u0400\101\0\2\u021d\6\0\2\u02a0\21\0"+
    "\2\u0392\2\0\2\u0298\54\0\2\u017d\23\0\2\u02a0\54\0"+
    "\2\u0401\22\0\2\u0402\47\0\1\u0403\11\0\1\u0403\101\0"+
    "\1\u0168\105\0\1\u0404\31\0\2\u0405\6\0\1\u0189\53\0"+
    "\1\u0406\11\0\1\u0406\2\0\1\u0406\140\0\2\u0407\75\0"+
    "\2\u0408\61\0\1\u0409\11\0\1\u0409\77\0\1\u01fb\11\0"+
    "\1\u01fb\72\0\1\u040a\1\u0360\2\u016e\1\0\1\u040b\1\u035a"+
    "\1\0\1\u035b\1\u016d\1\0\1\u040a\1\u016e\3\0\1\u035a"+
    "\1\0\1\u035b\1\u016d\1\0\1\u035b\7\0\2\u0182\2\u011d"+
    "\2\0\2\u0183\2\u0184\4\0\2\u0185\1\u0173\2\0\1\u0174"+
    "\1\u0173\1\u0175\1\322\4\0\2\u0186\2\0\2\u0187\1\u040a"+
    "\12\0\1\u040a\1\0\2\u040a\2\u016e\1\0\1\u040b\1\u035a"+
    "\1\0\1\u035b\1\u016d\1\0\1\u040a\1\u016e\3\0\1\u035a"+
    "\1\0\1\u035b\1\u016d\1\0\1\u035b\7\0\2\u0182\2\u011d"+
    "\2\0\2\u0183\2\u0184\4\0\2\u0185\1\u0173\2\0\1\u0174"+
    "\1\u0173\1\u0175\1\322\4\0\2\u0186\2\0\2\u0187\1\u040a"+
    "\12\0\1\u040a\7\0\1\u040c\11\0\1\u040c\101\0\1\u040d"+
    "\11\0\1\u040d\77\0\1\u040e\11\0\1\u040e\103\0\1\u040f"+
    "\11\0\1\u040f\134\0\2\u0400\111\0\2\u02a0\25\0\2\u0295"+
    "\25\0\1\u0410\11\0\1\u0410\2\0\1\u0410\76\0\1\u0411"+
    "\11\0\1\u0411\75\0\1\u0412\11\0\1\u0412\14\0\2\u0374"+
    "\64\0\1\u0292\1\u0376\10\0\1\u0292\1\u0376\1\0\1\u0292"+
    "\3\0\2\u01ff\6\0\2\u0293\2\0\2\u0294\15\0\2\u0377"+
    "\4\0\2\u0378\2\u0295\52\0\2\u037b\35\0\2\u0413\50\0"+
    "\2\u0414\105\0\2\u0415\17\0\3\u0416\101\0\2\u0417\57\0"+
    "\1\u0418\11\0\1\u0418\77\0\1\u02a0\11\0\1\u02a0\14\0"+
    "\2\u0374\64\0\1\u0292\1\u0376\10\0\1\u0292\1\u0376\1\0"+
    "\1\u0292\13\0\2\u0293\2\0\2\u0294\15\0\2\u0377\4\0"+
    "\2\u0378\2\u0295\25\0\1\u0419\11\0\1\u0419\2\0\1\u0419"+
    "\126\0\2\u041a\120\0\3\u041b\2\u041c\35\0\1\u0112\1\u041d"+
    "\1\u041e\2\u0213\1\u0112\1\u041f\1\u0420\1\0\1\u02a9\1\0"+
    "\1\u0112\1\u041e\1\u0213\1\u0421\1\u0112\1\0\1\u0420\1\0"+
    "\1\u018b\2\0\1\u018b\11\0\2\u0216\7\0\1\u0112\5\0"+
    "\2\u0112\16\0\1\u041e\1\u0112\2\0\2\u0112\3\0\2\u0112"+
    "\1\u041e\46\0\2\u0378\103\0\2\u0422\122\0\3\u041b\21\0"+
    "\2\u037c\65\0\3\u0423\47\0\1\u0424\11\0\1\u0424\141\0"+
    "\3\u02d6\77\0\2\u02d6\51\0\1\u0112\1\u041d\1\u041e\2\u0213"+
    "\1\u0112\1\u041f\1\u0420\1\0\1\u02a9\1\0\1\u0112\1\u041e"+
    "\1\u0213\1\u0421\1\u0112\1\0\1\u0420\1\0\1\u018b\2\0"+
    "\1\u018b\7\0\2\u037b\2\u0216\7\0\1\u0112\5\0\2\u0112"+
    "\14\0\2\u037c\1\u0425\1\u0112\2\0\2\u0112\3\0\2\u0112"+
    "\1\u041e\46\0\2\u0218\52\0\1\u0426\11\0\1\u0426\142\0"+
    "\3\u0427\47\0\1\u0428\11\0\1\u0428\141\0\3\u02d8\40\0"+
    "\2\u0383\2\u0384\1\0\1\u0385\1\u0386\1\u0387\1\u0388\2\0"+
    "\1\u0383\4\0\1\u0386\1\u0387\1\u0388\2\0\1\u0388\1\0"+
    "\2\u0389\4\0\2\u038a\4\0\2\u038b\2\u038c\4\0\2\u038d"+
    "\13\0\2\u038e\2\0\2\u038f\1\u0383\12\0\1\u0383\1\0"+
    "\2\u0384\3\0\1\u0429\1\u0386\1\u0387\1\u0388\2\0\1\u0384"+
    "\4\0\1\u0386\1\u0387\1\u0388\2\0\1\u0388\7\0\2\u038a"+
    "\4\0\2\u038b\2\u038c\4\0\2\u038d\13\0\2\u038e\2\0"+
    "\2\u038f\1\u0384\12\0\1\u0384\7\0\1\u042a\11\0\1\u042a"+
    "\145\0\2\u042b\106\0\3\u042c\77\0\2\u042d\52\0\2\u042e"+
    "\3\0\1\u042f\5\0\1\u042e\15\0\2\u0430\15\0\3\u042e"+
    "\2\0\1\u018c\2\0\4\u018c\2\0\2\u0431\6\0\1\u042e"+
    "\12\0\1\u042e\51\0\3\u0432\46\0\1\u0433\11\0\1\u0433"+
    "\131\0\2\u0434\113\0\2\u0435\113\0\2\u0436\105\0\2\u0437"+
    "\2\0\2\u0438\52\0\1\u02d8\22\0\2\u02d8\6\0\2\u02d8"+
    "\12\0\2\u02d8\65\0\2\u0123\6\0\2\u01f4\7\0\3\u01f5"+
    "\2\u01f6\101\0\2\u0439\57\0\1\u043a\11\0\1\u043a\76\0"+
    "\1\u043b\11\0\1\u043b\101\0\1\u043c\11\0\1\u043c\2\0"+
    "\1\u043c\135\0\3\u043d\2\u043e\36\0\2\u0397\3\0\1\u043f"+
    "\5\0\1\u0397\1\0\1\u0440\11\0\2\u022b\45\0\1\u0397"+
    "\12\0\1\u0397\46\0\2\u039a\103\0\2\u0441\122\0\3\u043d"+
    "\21\0\2\u03a0\24\0\1\u0442\11\0\1\u0442\141\0\3\u02e6"+
    "\44\0\1\u02e6\22\0\2\u02e6\6\0\2\u02e6\12\0\2\u02e6"+
    "\106\0\3\u0443\110\0\3\u02ef\77\0\2\u02ef\52\0\2\u0397"+
    "\3\0\1\u043f\5\0\1\u0397\1\0\1\u0440\11\0\2\u022b"+
    "\4\0\2\u039f\35\0\2\u03a0\1\u0444\12\0\1\u0397\46\0"+
    "\2\u022e\52\0\1\u0445\11\0\1\u0445\142\0\3\u0446\103\0"+
    "\2\u0447\75\0\2\u0448\74\0\1\u0130\145\0\2\u023b\52\0"+
    "\1\u0449\11\0\1\u0449\160\0\2\u0246\62\0\2\u044a\142\0"+
    "\2\u044b\60\0\2\u044c\111\0\2\u044d\146\0\2\u0100\26\0"+
    "\1\u044e\11\0\1\u044e\101\0\1\u014e\105\0\1\u044f\31\0"+
    "\2\u0450\6\0\1\u01cd\53\0\1\u0451\11\0\1\u0451\2\0"+
    "\1\u0451\74\0\1\u0452\11\0\1\u0452\77\0\1\u0257\11\0"+
    "\1\u0257\72\0\2\u03bc\2\u0154\1\0\1\u03bd\1\u0311\1\0"+
    "\1\u01cf\2\0\1\u03bc\1\u0154\3\0\1\u0311\1\0\1\u01cf"+
    "\2\0\1\u01cf\11\0\2\u0156\14\0\1\u0108\2\0\4\u0108"+
    "\10\0\2\u0109\1\u03bc\12\0\1\u03bc\7\0\1\u0453\11\0"+
    "\1\u0453\100\0\1\u0454\11\0\1\u0454\103\0\1\u0455\11\0"+
    "\1\u0455\77\0\1\u0456\11\0\1\u0456\2\0\1\u0456\76\0"+
    "\1\u0457\11\0\1\u0457\76\0\1\u0458\11\0\1\u0458\126\0"+
    "\2\u03c7\65\0\1\u03c9\11\0\1\u03c9\40\0\2\u03ca\4\0"+
    "\2\u03cb\27\0\1\u0459\11\0\1\u0459\2\0\1\u0459\126\0"+
    "\2\u045a\120\0\3\u045b\2\u045c\36\0\2\u045d\3\0\1\u045e"+
    "\1\u045f\1\0\1\u01cf\2\0\1\u045d\1\0\1\u0460\2\0"+
    "\1\u045f\1\0\1\u01cf\2\0\1\u01cf\11\0\2\u026a\35\0"+
    "\1\u045d\12\0\1\u045d\46\0\2\u03cb\103\0\2\u0461\122\0"+
    "\3\u045b\21\0\2\u03cf\65\0\3\u0462\47\0\1\u0463\11\0"+
    "\1\u0463\141\0\3\u0328\77\0\2\u0328\52\0\2\u045d\3\0"+
    "\1\u045e\1\u045f\1\0\1\u01cf\2\0\1\u045d\1\0\1\u0460"+
    "\2\0\1\u045f\1\0\1\u01cf\2\0\1\u01cf\7\0\2\u03ce"+
    "\2\u026a\33\0\2\u03cf\1\u0464\12\0\1\u045d\46\0\2\u026c"+
    "\52\0\1\u0465\11\0\1\u0465\142\0\3\u0466\47\0\1\u0467"+
    "\11\0\1\u0467\141\0\3\u032a\40\0\2\u03d6\2\u03d7\1\0"+
    "\1\u03d8\1\u03d9\1\u03da\1\u03db\2\0\1\u03d6\4\0\1\u03d9"+
    "\1\u03da\1\u03db\2\0\1\u03db\1\0\2\u03dc\4\0\2\u03dd"+
    "\4\0\2\u03de\2\u03df\4\0\2\u03e0\13\0\2\u03e1\2\0"+
    "\2\u03e2\1\u03d6\12\0\1\u03d6\1\0\2\u03d7\3\0\1\u0468"+
    "\1\u03d9\1\u03da\1\u03db\2\0\1\u03d7\4\0\1\u03d9\1\u03da"+
    "\1\u03db\2\0\1\u03db\7\0\2\u03dd\4\0\2\u03de\2\u03df"+
    "\4\0\2\u03e0\13\0\2\u03e1\2\0\2\u03e2\1\u03d7\12\0"+
    "\1\u03d7\7\0\1\u0469\11\0\1\u0469\145\0\2\u046a\106\0"+
    "\3\u046b\77\0\2\u046c\52\0\2\u046d\3\0\1\u046e\5\0"+
    "\1\u046d\15\0\2\u046f\15\0\3\u046d\2\0\1\u01d0\2\0"+
    "\4\u01d0\2\0\2\u0470\6\0\1\u046d\12\0\1\u046d\51\0"+
    "\3\u0471\46\0\1\u0472\11\0\1\u0472\131\0\2\u0473\113\0"+
    "\2\u0474\113\0\2\u0475\105\0\2\u0476\2\0\2\u0477\52\0"+
    "\1\u032a\22\0\2\u032a\6\0\2\u032a\12\0\2\u032a\65\0"+
    "\2\u015c\6\0\2\u01d6\115\0\2\u0478\57\0\1\u0479\11\0"+
    "\1\u0479\76\0\1\u047a\11\0\1\u047a\101\0\1\u047b\11\0"+
    "\1\u047b\2\0\1\u047b\135\0\3\u047c\2\u047d\36\0\2\u03ea"+
    "\3\0\1\u047e\5\0\1\u03ea\1\0\1\u047f\11\0\2\u027f"+
    "\45\0\1\u03ea\12\0\1\u03ea\46\0\2\u03ed\103\0\2\u0480"+
    "\122\0\3\u047c\21\0\2\u03f3\24\0\1\u0481\11\0\1\u0481"+
    "\141\0\3\u0338\44\0\1\u0338\22\0\2\u0338\6\0\2\u0338"+
    "\12\0\2\u0338\106\0\3\u0482\110\0\3\u0341\77\0\2\u0341"+
    "\52\0\2\u03ea\3\0\1\u047e\5\0\1\u03ea\1\0\1\u047f"+
    "\11\0\2\u027f\4\0\2\u03f2\35\0\2\u03f3\1\u0483\12\0"+
    "\1\u03ea\46\0\2\u0282\52\0\1\u0484\11\0\1\u0484\142\0"+
    "\3\u0485\130\0\2\u01e4\66\0\2\u0486\114\0\3\u010e\134\0"+
    "\2\u02a0\54\0\2\u03fd\62\0\1\u01ec\11\0\1\u01ec\2\0"+
    "\1\u01ec\73\0\1\u03fc\11\0\1\u03fc\133\0\2\u0487\2\0"+
    "\2\u0488\21\0\2\u0489\2\0\2\u048a\70\0\2\u048b\44\0"+
    "\1\u048c\1\0\1\u048d\7\0\1\u048c\1\0\1\u048d\2\0"+
    "\1\u048d\132\0\2\u048e\56\0\1\u0169\137\0\2\u048f\52\0"+
    "\2\u0189\2\0\1\u0189\1\u018a\2\0\1\u018b\2\0\1\u0189"+
    "\6\0\1\u018b\2\0\1\u018b\27\0\1\u018c\2\0\4\u018c"+
    "\10\0\2\u0209\1\u0189\12\0\1\u0189\1\u0112\1\u02a5\1\u02a6"+
    "\2\u011a\1\u0112\1\u02a7\1\u02a8\1\0\1\u02a9\1\0\1\u0112"+
    "\1\u02a6\1\u011a\1\u02aa\1\u0112\1\0\1\u02a8\1\0\1\u018b"+
    "\2\0\1\u018b\11\0\2\u011d\7\0\1\u0112\5\0\2\u0112"+
    "\14\0\2\u021e\1\u02dd\1\u0112\2\0\2\u0112\3\0\2\u0112"+
    "\1\u02a6\7\0\1\u0291\11\0\1\u0291\102\0\1\u0292\11\0"+
    "\1\u0292\2\0\1\u0292\3\0\2\u01ff\6\0\2\u0293\2\0"+
    "\2\u0294\25\0\2\u0295\25\0\1\u0490\11\0\1\u0490\2\0"+
    "\1\u0490\74\0\1\u0491\11\0\1\u0491\101\0\1\u0492\11\0"+
    "\1\u0492\2\0\1\u0492\132\0\2\u0493\56\0\1\u016e\77\0"+
    "\1\u0112\1\u02a5\1\u02a6\2\u011a\1\u0112\1\u02a7\1\u02a8\1\u0118"+
    "\1\u0494\1\0\1\u0112\1\u02a6\1\u011a\1\u02aa\1\u0112\1\0"+
    "\1\u02a8\1\u0118\1\u0495\2\0\1\u0495\11\0\2\u011d\4\0"+
    "\2\u0496\1\0\1\u0112\5\0\2\u0112\10\0\2\u0497\4\0"+
    "\1\u0498\1\u0112\2\0\2\u0112\3\0\2\u0112\1\u02a6\13\0"+
    "\1\u0189\77\0\1\u01f2\2\0\37\u01f2\2\u0499\45\u01f2\42\0"+
    "\2\u02d6\7\0\3\u034d\37\0\1\u0112\1\u041d\1\u041e\2\u0213"+
    "\1\u0112\1\u041f\1\u0420\1\0\1\u02a9\1\0\1\u0112\1\u041e"+
    "\1\u0213\1\u0421\1\u0112\1\u02a0\1\u0420\1\0\1\u018b\1\0"+
    "\1\u02a0\1\u018b\7\0\2\u037b\2\u0216\7\0\1\u0112\5\0"+
    "\2\u0112\14\0\2\u037c\1\u0425\1\u0112\2\0\2\u0112\3\0"+
    "\2\u0112\1\u041e\34\0\2\u0292\10\0\2\u049a\52\0\1\u049b"+
    "\11\0\1\u049b\142\0\3\u049c\50\0\1\u049d\11\0\1\u049d"+
    "\2\0\1\u049d\76\0\1\u049e\11\0\1\u049e\174\0\2\u049f"+
    "\43\0\2\u04a0\146\0\2\u037c\15\0\1\u04a1\1\u041e\2\u02bc"+
    "\1\0\1\u04a2\1\u04a3\1\0\1\u035b\1\u016d\1\0\1\u04a1"+
    "\1\u02bc\1\u04a4\2\0\1\u04a3\1\0\1\u035b\1\u016d\1\0"+
    "\1\u035b\7\0\2\u0182\2\u0216\2\0\2\u0183\2\u0184\4\0"+
    "\2\u0185\1\u02c1\2\0\1\u02c2\1\u02c1\1\u02c3\5\0\2\u0186"+
    "\2\0\2\u02ce\1\u04a1\12\0\1\u04a1\1\0\2\u04a1\2\u02bc"+
    "\1\0\1\u04a2\1\u04a3\1\0\1\u035b\1\u016d\1\0\1\u04a1"+
    "\1\u02bc\1\u04a4\2\0\1\u04a3\1\0\1\u035b\1\u016d\1\0"+
    "\1\u035b\7\0\2\u0182\2\u0216\2\0\2\u0183\2\u0184\4\0"+
    "\2\u0185\1\u02c1\2\0\1\u02c2\1\u02c1\1\u02c3\5\0\2\u0186"+
    "\2\0\2\u02ce\1\u04a1\12\0\1\u04a1\7\0\1\u04a5\11\0"+
    "\1\u04a5\145\0\2\u04a6\35\0\1\u0112\1\u04a7\1\u04a8\2\u0213"+
    "\1\u0112\1\u04a9\1\u0420\1\0\1\u02a9\1\0\1\u0112\1\u04a8"+
    "\1\u0213\2\u0112\1\0\1\u0420\1\0\1\u018b\2\0\1\u018b"+
    "\11\0\2\u0216\7\0\1\u0112\5\0\2\u0112\16\0\1\u04a8"+
    "\1\u0112\2\0\2\u0112\3\0\2\u0112\1\u04a8\67\0\2\u0375"+
    "\62\0\2\u04aa\62\0\1\u04ab\11\0\1\u04ab\2\0\1\u04ab"+
    "\65\0\2\u04a1\2\u02bc\1\0\1\u04a2\1\u04a3\1\0\1\u035b"+
    "\1\u016d\1\0\1\u04a1\1\u02bc\1\u04a4\2\0\1\u04a3\1\0"+
    "\1\u035b\1\u016d\1\0\1\u035b\7\0\2\u0182\2\u0216\2\0"+
    "\2\u0183\2\u0184\4\0\2\u0185\1\u02c1\2\0\1\u02c2\1\u02c1"+
    "\1\u02c3\5\0\2\u0186\2\0\2\u04ac\1\u04a1\12\0\1\u04a1"+
    "\36\0\2\u037b\31\0\2\u04ad\2\0\2\u037c\54\0\2\u02cb"+
    "\62\0\1\u04ae\11\0\1\u04ae\2\0\1\u04ae\73\0\1\u04af"+
    "\11\0\1\u04af\101\0\1\u04b0\11\0\1\u04b0\126\0\2\u04b1"+
    "\64\0\1\u04b2\11\0\1\u04b2\2\0\1\u04b2\76\0\1\u04b3"+
    "\11\0\1\u04b3\40\0\2\u04b4\4\0\2\u04b5\17\0\2\u042e"+
    "\3\0\1\u042f\5\0\1\u042e\41\0\1\u018c\2\0\4\u018c"+
    "\12\0\1\u042e\12\0\1\u042e\7\0\1\u04b6\11\0\1\u04b6"+
    "\160\0\2\u04b7\23\0\2\u042e\3\0\1\u042f\5\0\1\u042e"+
    "\41\0\1\u018c\2\0\4\u018c\2\0\2\u04b8\6\0\1\u042e"+
    "\12\0\1\u042e\42\0\2\u04b9\105\0\2\u04ba\35\0\2\u04bb"+
    "\50\0\2\u04bc\123\0\2\u04b1\73\0\2\u04bd\17\0\3\u04be"+
    "\101\0\2\u04bf\123\0\2\u0433\106\0\3\u02a3\52\0\1\u0194"+
    "\110\0\1\u04c0\11\0\1\u04c0\2\0\1\u04c0\76\0\1\u04c1"+
    "\11\0\1\u04c1\126\0\2\u04c2\146\0\2\u03a0\23\0\1\u04c3"+
    "\11\0\1\u04c3\72\0\2\u0440\3\0\1\u04c4\5\0\1\u0440"+
    "\13\0\2\u022b\45\0\1\u0440\12\0\1\u0440\67\0\2\u0397"+
    "\33\0\1\u04c5\11\0\1\u04c5\2\0\1\u04c5\124\0\2\u04c6"+
    "\52\0\2\u0397\3\0\1\u043f\5\0\1\u0397\1\0\1\u0440"+
    "\11\0\2\u022b\43\0\2\u03a0\1\u0397\12\0\1\u0397\36\0"+
    "\2\u039f\31\0\2\u04c7\2\0\2\u03a0\54\0\2\u02e4\117\0"+
    "\2\u04c8\101\0\2\u04c8\144\0\2\u04c9\54\0\2\u04ca\121\0"+
    "\2\u01bc\56\0\1\u04ca\11\0\1\u04ca\2\0\1\u04ca\75\0"+
    "\1\u04cb\11\0\1\u04cb\2\0\1\u04cb\77\0\1\u014f\137\0"+
    "\2\u04cc\52\0\2\u01cd\2\0\1\u01cd\1\u01ce\2\0\1\u01cf"+
    "\2\0\1\u01cd\6\0\1\u01cf\2\0\1\u01cf\27\0\1\u01d0"+
    "\2\0\4\u01d0\10\0\2\u0260\1\u01cd\12\0\1\u01cd\1\0"+
    "\2\u030f\2\u0154\1\0\1\u0310\1\u0311\1\0\1\u01cf\2\0"+
    "\1\u030f\1\u0154\1\u0312\2\0\1\u0311\1\0\1\u01cf\2\0"+
    "\1\u01cf\11\0\2\u0156\33\0\2\u0272\1\u032f\12\0\1\u030f"+
    "\11\0\1\u04cd\11\0\1\u04cd\2\0\1\u04cd\74\0\1\u04ce"+
    "\11\0\1\u04ce\136\0\2\u04cf\56\0\1\u0154\100\0\2\u030f"+
    "\2\u0154\1\0\1\u0310\1\u0311\1\u0152\1\u04d0\2\0\1\u030f"+
    "\1\u0154\1\u0312\2\0\1\u0311\1\u0152\1\u04d0\2\0\1\u04d0"+
    "\11\0\2\u0156\4\0\2\u04d1\21\0\2\u04d2\4\0\1\u04d3"+
    "\12\0\1\u030f\13\0\1\u01cd\110\0\1\u04d4\11\0\1\u04d4"+
    "\2\0\1\u04d4\76\0\1\u04d5\11\0\1\u04d5\174\0\2\u04d6"+
    "\43\0\2\u04d7\146\0\2\u03cf\23\0\1\u04d8\11\0\1\u04d8"+
    "\145\0\2\u04d9\36\0\2\u04da\3\0\1\u04db\1\u045f\1\0"+
    "\1\u01cf\2\0\1\u04da\4\0\1\u045f\1\0\1\u01cf\2\0"+
    "\1\u01cf\11\0\2\u026a\35\0\1\u04da\12\0\1\u04da\67\0"+
    "\2\u03c8\62\0\2\u04dc\62\0\1\u04dd\11\0\1\u04dd\2\0"+
    "\1\u04dd\65\0\2\u045d\3\0\1\u045e\1\u045f\1\0\1\u01cf"+
    "\2\0\1\u045d\1\0\1\u0460\2\0\1\u045f\1\0\1\u01cf"+
    "\2\0\1\u01cf\11\0\2\u026a\33\0\2\u03cf\1\u045d\12\0"+
    "\1\u045d\36\0\2\u03ce\31\0\2\u04de\2\0\2\u03cf\54\0"+
    "\2\u031f\62\0\1\u04df\11\0\1\u04df\2\0\1\u04df\73\0"+
    "\1\u04e0\11\0\1\u04e0\101\0\1\u04e1\11\0\1\u04e1\126\0"+
    "\2\u04e2\64\0\1\u04e3\11\0\1\u04e3\2\0\1\u04e3\76\0"+
    "\1\u04e4\11\0\1\u04e4\40\0\2\u04e5\4\0\2\u04e6\17\0"+
    "\2\u046d\3\0\1\u046e\5\0\1\u046d\41\0\1\u01d0\2\0"+
    "\4\u01d0\12\0\1\u046d\12\0\1\u046d\7\0\1\u04e7\11\0"+
    "\1\u04e7\160\0\2\u04e8\23\0\2\u046d\3\0\1\u046e\5\0"+
    "\1\u046d\41\0\1\u01d0\2\0\4\u01d0\2\0\2\u04e9\6\0"+
    "\1\u046d\12\0\1\u046d\42\0\2\u04ea\105\0\2\u04eb\35\0"+
    "\2\u04ec\50\0\2\u04ed\123\0\2\u04e2\73\0\2\u04ee\17\0"+
    "\3\u04ef\101\0\2\u04f0\123\0\2\u0472\106\0\3\u030d\52\0"+
    "\1\u01d8\110\0\1\u04f1\11\0\1\u04f1\2\0\1\u04f1\76\0"+
    "\1\u04f2\11\0\1\u04f2\126\0\2\u04f3\146\0\2\u03f3\23\0"+
    "\1\u04f4\11\0\1\u04f4\72\0\2\u047f\3\0\1\u04f5\5\0"+
    "\1\u047f\13\0\2\u027f\45\0\1\u047f\12\0\1\u047f\67\0"+
    "\2\u03ea\33\0\1\u04f6\11\0\1\u04f6\2\0\1\u04f6\124\0"+
    "\2\u04f7\52\0\2\u03ea\3\0\1\u047e\5\0\1\u03ea\1\0"+
    "\1\u047f\11\0\2\u027f\43\0\2\u03f3\1\u03ea\12\0\1\u03ea"+
    "\36\0\2\u03f2\31\0\2\u04f8\2\0\2\u03f3\54\0\2\u0336"+
    "\117\0\2\206\114\0\3\u04f9\73\0\2\u04fa\121\0\2\u04fb"+
    "\111\0\2\u03fc\101\0\2\u01f6\64\0\1\u04fc\11\0\1\u04fc"+
    "\102\0\1\u04fd\11\0\1\u04fd\2\0\1\u04fd\132\0\2\u03fc"+
    "\73\0\2\u04fe\2\u04ff\71\0\1\u0500\11\0\1\u0500\77\0"+
    "\1\u0501\11\0\1\u0501\2\0\1\u0501\76\0\1\u0502\11\0"+
    "\1\u0502\66\0\1\u0503\2\0\106\u0503\42\0\2\u0504\111\0"+
    "\2\u0505\115\0\2\u0506\46\0\2\u0358\2\u016e\1\0\1\u0359"+
    "\1\u035a\1\u0118\1\u0507\1\u016d\1\0\1\u0358\1\u016e\1\u035c"+
    "\2\0\1\u035a\1\u0118\1\u0507\1\u016d\1\0\1\u0507\7\0"+
    "\2\u0182\2\u011d\2\0\2\u0183\2\u0508\4\0\2\u0185\1\u0173"+
    "\2\0\1\u0174\1\u0173\1\u0175\1\322\4\0\2\u0509\2\0"+
    "\2\u0187\1\u0358\12\0\1\u0358\40\0\2\u02d3\4\0\2\u0400"+
    "\101\0\2\u037b\6\0\2\u02a0\21\0\2\u04ad\2\0\2\u0413"+
    "\54\0\2\u02cb\23\0\2\u02a0\36\0\1\u050a\11\0\1\u050a"+
    "\101\0\1\u02b7\105\0\1\u050b\31\0\2\u050c\6\0\1\u02d0"+
    "\53\0\1\u050d\11\0\1\u050d\2\0\1\u050d\140\0\2\u050e"+
    "\45\0\1\u050f\11\0\1\u050f\77\0\1\u0373\11\0\1\u0373"+
    "\72\0\1\u0510\1\u04a8\2\u02bc\1\0\1\u0511\1\u04a3\1\0"+
    "\1\u035b\1\u016d\1\0\1\u0510\1\u02bc\3\0\1\u04a3\1\0"+
    "\1\u035b\1\u016d\1\0\1\u035b\7\0\2\u0182\2\u0216\2\0"+
    "\2\u0183\2\u0184\4\0\2\u0185\1\u02c1\2\0\1\u02c2\1\u02c1"+
    "\1\u02c3\5\0\2\u0186\2\0\2\u02ce\1\u0510\12\0\1\u0510"+
    "\1\0\2\u0510\2\u02bc\1\0\1\u0511\1\u04a3\1\0\1\u035b"+
    "\1\u016d\1\0\1\u0510\1\u02bc\3\0\1\u04a3\1\0\1\u035b"+
    "\1\u016d\1\0\1\u035b\7\0\2\u0182\2\u0216\2\0\2\u0183"+
    "\2\u0184\4\0\2\u0185\1\u02c1\2\0\1\u02c2\1\u02c1\1\u02c3"+
    "\5\0\2\u0186\2\0\2\u02ce\1\u0510\12\0\1\u0510\7\0"+
    "\1\u0512\11\0\1\u0512\102\0\1\u0513\11\0\1\u0513\2\0"+
    "\1\u0513\76\0\1\u0514\11\0\1\u0514\126\0\2\u036e\7\0"+
    "\3\u01f5\2\u01f6\101\0\2\u0515\57\0\1\u0516\11\0\1\u0516"+
    "\76\0\1\u0517\11\0\1\u0517\101\0\1\u0518\11\0\1\u0518"+
    "\2\0\1\u0518\135\0\3\u0519\2\u051a\36\0\2\u04b2\3\0"+
    "\1\u051b\5\0\1\u04b2\1\0\1\u051c\11\0\2\u0389\45\0"+
    "\1\u04b2\12\0\1\u04b2\46\0\2\u04b5\103\0\2\u051d\122\0"+
    "\3\u0519\21\0\2\u04bb\24\0\1\u051e\11\0\1\u051e\141\0"+
    "\3\u042e\44\0\1\u042e\22\0\2\u042e\6\0\2\u042e\12\0"+
    "\2\u042e\106\0\3\u051f\110\0\3\u0437\77\0\2\u0437\52\0"+
    "\2\u04b2\3\0\1\u051b\5\0\1\u04b2\1\0\1\u051c\11\0"+
    "\2\u0389\4\0\2\u04ba\35\0\2\u04bb\1\u0520\12\0\1\u04b2"+
    "\46\0\2\u038c\52\0\1\u0521\11\0\1\u0521\142\0\3\u0522"+
    "\51\0\1\u0523\11\0\1\u0523\101\0\1\u0225\110\0\1\u0524"+
    "\11\0\1\u0524\2\0\1\u0524\74\0\1\u0525\11\0\1\u0525"+
    "\77\0\1\u0526\11\0\1\u0526\103\0\1\u0527\11\0\1\u0527"+
    "\77\0\1\u0528\11\0\1\u0528\2\0\1\u0528\130\0\2\u0529"+
    "\105\0\2\u01a6\115\0\2\252\75\0\2\u052a\2\u052b\71\0"+
    "\1\u052c\11\0\1\u052c\77\0\1\u052d\11\0\1\u052d\2\0"+
    "\1\u052d\64\0\1\u0315\2\0\106\u0315\42\0\2\u052e\111\0"+
    "\2\u052f\115\0\2\u0530\46\0\2\u030f\2\u0154\1\0\1\u0310"+
    "\1\u0311\1\u0152\1\u04d0\2\0\1\u030f\1\u0154\1\u0312\2\0"+
    "\1\u0311\1\u0152\1\u04d0\2\0\1\u04d0\11\0\2\u0156\4\0"+
    "\2\u04d1\6\0\1\u0108\2\0\4\u0108\4\0\2\u04d2\2\0"+
    "\2\u0109\1\u030f\12\0\1\u030f\12\0\1\u0531\11\0\1\u0531"+
    "\101\0\1\u0263\105\0\1\u0532\31\0\2\u0533\6\0\1\u0322"+
    "\53\0\1\u0534\11\0\1\u0534\2\0\1\u0534\74\0\1\u0535"+
    "\11\0\1\u0535\77\0\1\u03c6\11\0\1\u03c6\100\0\1\u0536"+
    "\11\0\1\u0536\102\0\1\u0537\11\0\1\u0537\2\0\1\u0537"+
    "\76\0\1\u0538\11\0\1\u0538\132\0\2\u0539\57\0\1\u053a"+
    "\11\0\1\u053a\76\0\1\u053b\11\0\1\u053b\101\0\1\u053c"+
    "\11\0\1\u053c\2\0\1\u053c\135\0\3\u053d\2\u053e\36\0"+
    "\2\u04e3\3\0\1\u053f\5\0\1\u04e3\1\0\1\u0540\11\0"+
    "\2\u03dc\45\0\1\u04e3\12\0\1\u04e3\46\0\2\u04e6\103\0"+
    "\2\u0541\122\0\3\u053d\21\0\2\u04ec\24\0\1\u0542\11\0"+
    "\1\u0542\141\0\3\u046d\44\0\1\u046d\22\0\2\u046d\6\0"+
    "\2\u046d\12\0\2\u046d\106\0\3\u0543\110\0\3\u0476\77\0"+
    "\2\u0476\52\0\2\u04e3\3\0\1\u053f\5\0\1\u04e3\1\0"+
    "\1\u0540\11\0\2\u03dc\4\0\2\u04eb\35\0\2\u04ec\1\u0544"+
    "\12\0\1\u04e3\46\0\2\u03df\52\0\1\u0545\11\0\1\u0545"+
    "\142\0\3\u0546\51\0\1\u0547\11\0\1\u0547\101\0\1\u0279"+
    "\110\0\1\u0548\11\0\1\u0548\2\0\1\u0548\74\0\1\u0549"+
    "\11\0\1\u0549\77\0\1\u054a\11\0\1\u054a\103\0\1\u054b"+
    "\11\0\1\u054b\77\0\1\u054c\11\0\1\u054c\2\0\1\u054c"+
    "\130\0\2\u054d\54\0\1\u054e\11\0\1\u054e\131\0\2\u03fc"+
    "\101\0\2\u054f\135\0\2\u0550\75\0\2\u0402\113\0\2\u0551"+
    "\103\0\2\u0552\70\0\1\u0358\111\0\1\u0553\11\0\1\u0553"+
    "\101\0\1\u02bc\131\0\2\u01ff\31\0\2\u0200\60\0\2\u01fd"+
    "\105\0\2\u0554\17\0\3\u0555\77\0\2\u0556\105\0\2\u01ef"+
    "\2\0\2\u0557\115\0\2\u0558\60\0\1\u02b8\137\0\2\u0559"+
    "\52\0\2\u02d0\2\0\1\u02d0\1\u02d1\2\0\1\u018b\2\0"+
    "\1\u02d0\6\0\1\u018b\2\0\1\u018b\50\0\1\u02d0\12\0"+
    "\1\u02d0\1\u0112\1\u041d\1\u041e\2\u0213\1\u0112\1\u041f\1\u0420"+
    "\1\0\1\u02a9\1\0\1\u0112\1\u041e\1\u0213\1\u0421\1\u0112"+
    "\1\0\1\u0420\1\0\1\u018b\2\0\1\u018b\11\0\2\u0216"+
    "\7\0\1\u0112\5\0\2\u0112\14\0\2\u037c\1\u0425\1\u0112"+
    "\2\0\2\u0112\3\0\2\u0112\1\u041e\7\0\1\u0412\11\0"+
    "\1\u0412\102\0\1\u055a\11\0\1\u055a\2\0\1\u055a\74\0"+
    "\1\u055b\11\0\1\u055b\70\0\1\u0112\1\u041d\1\u041e\2\u0213"+
    "\1\u0112\1\u041f\1\u0420\1\u0211\1\u055c\1\0\1\u0112\1\u041e"+
    "\1\u0213\1\u0421\1\u0112\1\0\1\u0420\1\u0211\1\u055d\2\0"+
    "\1\u055d\11\0\2\u0216\4\0\2\u055e\1\0\1\u0112\5\0"+
    "\2\u0112\10\0\2\u055f\4\0\1\u0560\1\u0112\2\0\2\u0112"+
    "\3\0\2\u0112\1\u041e\13\0\1\u02d0\150\0\3\u041b\52\0"+
    "\1\u02d8\110\0\1\u0561\11\0\1\u0561\2\0\1\u0561\76\0"+
    "\1\u0562\11\0\1\u0562\126\0\2\u0563\146\0\2\u04bb\23\0"+
    "\1\u0564\11\0\1\u0564\72\0\2\u051c\3\0\1\u0565\5\0"+
    "\1\u051c\13\0\2\u0389\45\0\1\u051c\12\0\1\u051c\67\0"+
    "\2\u04b2\33\0\1\u0566\11\0\1\u0566\2\0\1\u0566\124\0"+
    "\2\u0567\52\0\2\u04b2\3\0\1\u051b\5\0\1\u04b2\1\0"+
    "\1\u051c\11\0\2\u0389\43\0\2\u04bb\1\u04b2\12\0\1\u04b2"+
    "\36\0\2\u04ba\31\0\2\u0568\2\0\2\u04bb\54\0\2\u042c"+
    "\64\0\1\u0226\100\0\2\u0397\3\0\1\u043f\5\0\1\u0397"+
    "\1\0\1\u0440\11\0\2\u022b\43\0\2\u03a0\1\u0444\12\0"+
    "\1\u0397\11\0\1\u0569\11\0\1\u0569\2\0\1\u0569\74\0"+
    "\1\u056a\11\0\1\u056a\103\0\1\u02e6\100\0\2\u0397\3\0"+
    "\1\u043f\1\0\1\u0229\1\u056b\2\0\1\u0397\1\0\1\u0440"+
    "\3\0\1\u0229\1\u056b\2\0\1\u056b\1\0\2\u022b\14\0"+
    "\2\u056c\21\0\2\u056d\4\0\1\u056e\12\0\1\u0397\51\0"+
    "\3\u043d\101\0\2\u056f\103\0\2\u0570\70\0\1\u030f\111\0"+
    "\1\u0571\11\0\1\u0571\120\0\2\u025b\31\0\2\u025c\60\0"+
    "\2\u0259\105\0\2\u0572\17\0\3\u0573\52\0\1\u0264\137\0"+
    "\2\u0574\52\0\2\u0322\2\0\1\u0322\1\u0323\2\0\1\u01cf"+
    "\2\0\1\u0322\6\0\1\u01cf\2\0\1\u01cf\50\0\1\u0322"+
    "\12\0\1\u0322\1\0\2\u045d\3\0\1\u045e\1\u045f\1\0"+
    "\1\u01cf\2\0\1\u045d\1\0\1\u0460\2\0\1\u045f\1\0"+
    "\1\u01cf\2\0\1\u01cf\11\0\2\u026a\33\0\2\u03cf\1\u0464"+
    "\12\0\1\u045d\11\0\1\u0575\11\0\1\u0575\2\0\1\u0575"+
    "\74\0\1\u0576\11\0\1\u0576\71\0\2\u045d\3\0\1\u045e"+
    "\1\u045f\1\u0267\1\u0577\2\0\1\u045d\1\0\1\u0460\2\0"+
    "\1\u045f\1\u0267\1\u0577\2\0\1\u0577\11\0\2\u026a\4\0"+
    "\2\u0578\21\0\2\u0579\4\0\1\u057a\12\0\1\u045d\13\0"+
    "\1\u0322\150\0\3\u045b\52\0\1\u032a\110\0\1\u057b\11\0"+
    "\1\u057b\2\0\1\u057b\76\0\1\u057c\11\0\1\u057c\126\0"+
    "\2\u057d\146\0\2\u04ec\23\0\1\u057e\11\0\1\u057e\72\0"+
    "\2\u0540\3\0\1\u057f\5\0\1\u0540\13\0\2\u03dc\45\0"+
    "\1\u0540\12\0\1\u0540\67\0\2\u04e3\33\0\1\u0580\11\0"+
    "\1\u0580\2\0\1\u0580\124\0\2\u0581\52\0\2\u04e3\3\0"+
    "\1\u053f\5\0\1\u04e3\1\0\1\u0540\11\0\2\u03dc\43\0"+
    "\2\u04ec\1\u04e3\12\0\1\u04e3\36\0\2\u04eb\31\0\2\u0582"+
    "\2\0\2\u04ec\54\0\2\u046b\64\0\1\u027a\100\0\2\u03ea"+
    "\3\0\1\u047e\5\0\1\u03ea\1\0\1\u047f\11\0\2\u027f"+
    "\43\0\2\u03f3\1\u0483\12\0\1\u03ea\11\0\1\u0583\11\0"+
    "\1\u0583\2\0\1\u0583\74\0\1\u0584\11\0\1\u0584\103\0"+
    "\1\u0338\100\0\2\u03ea\3\0\1\u047e\1\0\1\u027d\1\u0585"+
    "\2\0\1\u03ea\1\0\1\u047f\3\0\1\u027d\1\u0585\2\0"+
    "\1\u0585\1\0\2\u027f\14\0\2\u0586\21\0\2\u0587\4\0"+
    "\1\u0588\12\0\1\u03ea\51\0\3\u047c\130\0\2\u048a\66\0"+
    "\2\u0589\101\0\2\u03fc\117\0\2\u058a\75\0\2\u058b\74\0"+
    "\1\u040a\145\0\2\u0496\52\0\1\u058c\11\0\1\u058c\102\0"+
    "\1\u0292\11\0\1\u0292\2\0\1\u0292\3\0\2\u01ff\6\0"+
    "\2\u0293\2\0\2\u0294\15\0\2\u0200\6\0\2\u0295\50\0"+
    "\2\u058d\105\0\2\u058e\17\0\3\u058f\67\0\2\u0590\2\u0591"+
    "\71\0\1\u0592\11\0\1\u0592\77\0\1\u0593\11\0\1\u0593"+
    "\2\0\1\u0593\124\0\2\u0594\111\0\2\u0595\115\0\2\u0596"+
    "\46\0\2\u04a1\2\u02bc\1\0\1\u04a2\1\u04a3\1\u0211\1\u0597"+
    "\1\u016d\1\0\1\u04a1\1\u02bc\1\u04a4\2\0\1\u04a3\1\u0211"+
    "\1\u0597\1\u016d\1\0\1\u0597\7\0\2\u0182\2\u0216\2\0"+
    "\2\u0183\2\u0598\4\0\2\u0185\1\u02c1\2\0\1\u02c2\1\u02c1"+
    "\1\u02c3\5\0\2\u0599\2\0\2\u02ce\1\u04a1\12\0\1\u04a1"+
    "\12\0\1\u059a\11\0\1\u059a\101\0\1\u0383\110\0\1\u059b"+
    "\11\0\1\u059b\2\0\1\u059b\74\0\1\u059c\11\0\1\u059c"+
    "\77\0\1\u059d\11\0\1\u059d\103\0\1\u059e\11\0\1\u059e"+
    "\77\0\1\u059f\11\0\1\u059f\2\0\1\u059f\130\0\2\u05a0"+
    "\57\0\1\u05a1\11\0\1\u05a1\77\0\1\u05a2\11\0\1\u05a2"+
    "\2\0\1\u05a2\124\0\2\u05a3\111\0\2\u05a4\115\0\2\u05a5"+
    "\46\0\2\u0397\3\0\1\u043f\1\0\1\u0229\1\u056b\2\0"+
    "\1\u0397\1\0\1\u0440\3\0\1\u0229\1\u056b\2\0\1\u056b"+
    "\1\0\2\u022b\14\0\2\u056c\21\0\2\u056d\4\0\1\u0397"+
    "\12\0\1\u0397\44\0\2\u05a6\75\0\2\u05a7\74\0\1\u03bc"+
    "\145\0\2\u04d1\52\0\1\u05a8\11\0\1\u05a8\121\0\2\u05a9"+
    "\2\u05aa\71\0\1\u05ab\11\0\1\u05ab\77\0\1\u05ac\11\0"+
    "\1\u05ac\2\0\1\u05ac\124\0\2\u05ad\111\0\2\u05ae\115\0"+
    "\2\u05af\46\0\2\u045d\3\0\1\u045e\1\u045f\1\u0267\1\u0577"+
    "\2\0\1\u045d\1\0\1\u0460\2\0\1\u045f\1\u0267\1\u0577"+
    "\2\0\1\u0577\11\0\2\u026a\4\0\2\u0578\21\0\2\u0579"+
    "\4\0\1\u045d\12\0\1\u045d\12\0\1\u05b0\11\0\1\u05b0"+
    "\101\0\1\u03d6\110\0\1\u05b1\11\0\1\u05b1\2\0\1\u05b1"+
    "\74\0\1\u05b2\11\0\1\u05b2\77\0\1\u05b3\11\0\1\u05b3"+
    "\103\0\1\u05b4\11\0\1\u05b4\77\0\1\u05b5\11\0\1\u05b5"+
    "\2\0\1\u05b5\130\0\2\u05b6\57\0\1\u05b7\11\0\1\u05b7"+
    "\77\0\1\u05b8\11\0\1\u05b8\2\0\1\u05b8\124\0\2\u05b9"+
    "\111\0\2\u05ba\115\0\2\u05bb\46\0\2\u03ea\3\0\1\u047e"+
    "\1\0\1\u027d\1\u0585\2\0\1\u03ea\1\0\1\u047f\3\0"+
    "\1\u027d\1\u0585\2\0\1\u0585\1\0\2\u027f\14\0\2\u0586"+
    "\21\0\2\u0587\4\0\1\u03ea\12\0\1\u03ea\46\0\2\u05bc"+
    "\111\0\2\u05bd\101\0\2\u05bd\144\0\2\u05be\20\0\1\u0112"+
    "\1\u02a5\1\u02a6\2\u011a\1\u0112\1\u02a7\1\u02a8\1\0\1\u02a9"+
    "\1\0\1\u0112\1\u02a6\1\u011a\1\u02aa\1\u0112\1\u02a0\1\u02a8"+
    "\1\0\1\u018b\1\0\1\u02a0\1\u018b\11\0\2\u011d\7\0"+
    "\1\u0112\5\0\2\u0112\16\0\1\u02a6\1\u0112\2\0\2\u0112"+
    "\3\0\2\u0112\1\u02a6\34\0\2\u0292\10\0\2\u05bf\52\0"+
    "\1\u05c0\11\0\1\u05c0\133\0\2\u05c1\103\0\2\u05c2\70\0"+
    "\1\u04a1\111\0\1\u05c3\11\0\1\u05c3\120\0\2\u01ff\31\0"+
    "\2\u0377\60\0\2\u0375\105\0\2\u05c4\17\0\3\u05c5\77\0"+
    "\2\u05c6\105\0\2\u01ef\2\0\2\u05c7\115\0\2\u05c8\60\0"+
    "\1\u0384\100\0\2\u04b2\3\0\1\u051b\5\0\1\u04b2\1\0"+
    "\1\u051c\11\0\2\u0389\43\0\2\u04bb\1\u0520\12\0\1\u04b2"+
    "\11\0\1\u05c9\11\0\1\u05c9\2\0\1\u05c9\74\0\1\u05ca"+
    "\11\0\1\u05ca\103\0\1\u042e\100\0\2\u04b2\3\0\1\u051b"+
    "\1\0\1\u0387\1\u05cb\2\0\1\u04b2\1\0\1\u051c\3\0"+
    "\1\u0387\1\u05cb\2\0\1\u05cb\1\0\2\u0389\14\0\2\u05cc"+
    "\21\0\2\u05cd\4\0\1\u05ce\12\0\1\u04b2\51\0\3\u0519"+
    "\52\0\1\u0397\111\0\1\u05cf\11\0\1\u05cf\153\0\2\u0399"+
    "\60\0\2\u0397\105\0\2\u05d0\17\0\3\u05d1\105\0\2\u05d2"+
    "\101\0\2\u05d2\144\0\2\u05d3\62\0\2\u05d4\103\0\2\u05d5"+
    "\70\0\1\u045d\111\0\1\u05d6\11\0\1\u05d6\120\0\2\u025b"+
    "\31\0\2\u03ca\60\0\2\u03c8\105\0\2\u05d7\17\0\3\u05d8"+
    "\52\0\1\u03d7\100\0\2\u04e3\3\0\1\u053f\5\0\1\u04e3"+
    "\1\0\1\u0540\11\0\2\u03dc\43\0\2\u04ec\1\u0544\12\0"+
    "\1\u04e3\11\0\1\u05d9\11\0\1\u05d9\2\0\1\u05d9\74\0"+
    "\1\u05da\11\0\1\u05da\103\0\1\u046d\100\0\2\u04e3\3\0"+
    "\1\u053f\1\0\1\u03da\1\u05db\2\0\1\u04e3\1\0\1\u0540"+
    "\3\0\1\u03da\1\u05db\2\0\1\u05db\1\0\2\u03dc\14\0"+
    "\2\u05dc\21\0\2\u05dd\4\0\1\u05de\12\0\1\u04e3\51\0"+
    "\3\u053d\52\0\1\u03ea\111\0\1\u05df\11\0\1\u05df\153\0"+
    "\2\u03ec\60\0\2\u03ea\105\0\2\u05e0\17\0\3\u05e1\73\0"+
    "\2\u03fc\115\0\2\u0411\115\0\2\u0222\105\0\2\u0505\4\0"+
    "\2\u0400\111\0\2\u02a0\21\0\2\u05be\2\0\2\u0295\60\0"+
    "\2\u05e2\75\0\2\u05e3\74\0\1\u0510\145\0\2\u055e\52\0"+
    "\1\u05e4\11\0\1\u05e4\102\0\1\u0292\11\0\1\u0292\2\0"+
    "\1\u0292\3\0\2\u01ff\6\0\2\u0293\2\0\2\u0294\15\0"+
    "\2\u0377\6\0\2\u0295\50\0\2\u05e5\105\0\2\u05e6\17\0"+
    "\3\u05e7\51\0\1\u05e8\11\0\1\u05e8\77\0\1\u05e9\11\0"+
    "\1\u05e9\2\0\1\u05e9\124\0\2\u05ea\111\0\2\u05eb\115\0"+
    "\2\u05ec\46\0\2\u04b2\3\0\1\u051b\1\0\1\u0387\1\u05cb"+
    "\2\0\1\u04b2\1\0\1\u051c\3\0\1\u0387\1\u05cb\2\0"+
    "\1\u05cb\1\0\2\u0389\14\0\2\u05cc\21\0\2\u05cd\4\0"+
    "\1\u04b2\12\0\1\u04b2\13\0\1\u0440\145\0\2\u056c\52\0"+
    "\1\u05ed\11\0\1\u05ed\131\0\2\u0457\115\0\2\u0276\111\0"+
    "\2\u05ee\75\0\2\u05ef\74\0\1\u04da\145\0\2\u0578\52\0"+
    "\1\u05f0\11\0\1\u05f0\103\0\1\u05f1\11\0\1\u05f1\77\0"+
    "\1\u05f2\11\0\1\u05f2\2\0\1\u05f2\124\0\2\u05f3\111\0"+
    "\2\u05f4\115\0\2\u05f5\46\0\2\u04e3\3\0\1\u053f\1\0"+
    "\1\u03da\1\u05db\2\0\1\u04e3\1\0\1\u0540\3\0\1\u03da"+
    "\1\u05db\2\0\1\u05db\1\0\2\u03dc\14\0\2\u05dc\21\0"+
    "\2\u05dd\4\0\1\u04e3\12\0\1\u04e3\13\0\1\u047f\145\0"+
    "\2\u0586\52\0\1\u05f6\11\0\1\u05f6\137\0\2\u05f7\101\0"+
    "\2\u05f7\144\0\2\u05f8\20\0\1\u0112\1\u041d\1\u041e\2\u0213"+
    "\1\u0112\1\u041f\1\u0420\1\0\1\u02a9\1\0\1\u0112\1\u041e"+
    "\1\u0213\1\u0421\1\u0112\1\u02a0\1\u0420\1\0\1\u018b\1\0"+
    "\1\u02a0\1\u018b\11\0\2\u0216\7\0\1\u0112\5\0\2\u0112"+
    "\16\0\1\u041e\1\u0112\2\0\2\u0112\3\0\2\u0112\1\u041e"+
    "\34\0\2\u0292\10\0\2\u05f9\52\0\1\u05fa\11\0\1\u05fa"+
    "\104\0\1\u04b2\111\0\1\u05fb\11\0\1\u05fb\153\0\2\u04b4"+
    "\60\0\2\u04b2\105\0\2\u05fc\17\0\3\u05fd\130\0\2\u05fe"+
    "\66\0\2\u05ff\101\0\2\u05ff\144\0\2\u0600\33\0\1\u04e3"+
    "\111\0\1\u0601\11\0\1\u0601\153\0\2\u04e5\60\0\2\u04e3"+
    "\105\0\2\u0602\17\0\3\u0603\130\0\2\u0604\60\0\2\u0514"+
    "\115\0\2\u0380\105\0\2\u0595\4\0\2\u0400\111\0\2\u02a0"+
    "\21\0\2\u05f8\2\0\2\u0295\27\0\1\u051c\145\0\2\u05cc"+
    "\52\0\1\u0605\11\0\1\u0605\135\0\2\u03a4\105\0\2\u0538"+
    "\115\0\2\u03d3\60\0\1\u0540\145\0\2\u05dc\52\0\1\u0606"+
    "\11\0\1\u0606\135\0\2\u03f7\136\0\2\u0607\111\0\2\u0608"+
    "\64\0\2\u04bf\111\0\2\u04f0\45\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[111150];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\6\0\2\1\1\11\1\1\1\11\1\1\1\11\4\1"+
    "\1\11\14\1\120\0\1\11\3\0\1\1\5\0\1\1"+
    "\17\0\1\1\23\0\1\1\1\0\1\1\7\0\1\1"+
    "\11\0\1\1\1\0\1\11\42\0\1\11\14\0\2\1"+
    "\1\0\1\11\12\0\1\11\26\0\1\1\11\0\1\11"+
    "\4\1\2\0\2\1\33\0\1\1\3\0\1\1\2\0"+
    "\1\1\5\0\1\1\1\0\1\1\3\0\1\11\127\0"+
    "\1\1\3\0\1\1\3\0\1\1\46\0\1\1\41\0"+
    "\1\11\31\0\4\1\2\0\2\1\62\0\2\11\21\0"+
    "\1\1\1\0\1\1\27\0\1\1\61\0\3\1\1\0"+
    "\4\1\2\0\1\1\55\0\1\1\35\0\2\11\1\0"+
    "\1\11\2\0\1\11\4\0\1\1\1\0\1\11\11\0"+
    "\2\1\1\0\1\11\65\0\1\1\23\0\3\1\103\0"+
    "\1\11\5\0\2\11\3\0\1\11\2\0\1\11\1\0"+
    "\1\11\22\0\1\1\7\0\1\1\114\0\3\1\1\0"+
    "\1\1\3\0\1\1\53\0\1\1\4\0\1\1\11\0"+
    "\1\1\63\0\1\1\3\0\2\1\15\0\3\1\40\0"+
    "\2\11\150\0\1\1\2\0\1\1\44\0\1\1\3\0"+
    "\1\1\250\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1544];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** For the backwards DFA of general lookahead statements */
  private boolean [] zzFin = new boolean [ZZ_BUFFERSIZE+1];

  /* user code: */
	
	/* Custom java code */

    @Override
	public String language() { return "IT"; }

	@Override
	public String version() { return "0.1"; }


	/* An empty default constructor is required to comply with LinkolnService */
	
	public Articles() { }
	
	@Override
	public final boolean run() {
		
		try {
			
			yyreset(new StringReader(getInput()));
			yylex();
			
		} catch (IOException e) {

			e.printStackTrace();
			return false;
		}
		
		return true;
	}
	
	@Override
	protected void addValue() {
	
		//annotationEntity.setValue("value");
	}
	
	private int offsetValue = 0;
	private int lengthValue = 0;

	private boolean brackets = true;
	
	private int previousState = 0;
	
	private void readPartitionElement() {
	
		previousState = readPartitionElementState;
		
		addText(yytext().substring(0,1));
		position++;
	
		offset = 0;
		length = yylength()-1; //account for the left edge		
	
		yypushback(length);
		
		length = length-1; //account for the right edge
		
		yybegin(readPartitionElementState);	
	}
	
	private void readValue() {
	
		annotationEntity.setText(Util.removeAllAnnotations(yytext()));
		annotationEntity.setPosition(position);
		
		offset += yylength();
		position += yylength();
		
		offsetValue = 0;
		lengthValue = yylength();
		
		yypushback(lengthValue);
		yybegin(readValueState);	
	}
	


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Articles(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 382) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return YYEOF;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { addText(yytext());
	position++;
            }
          case 37: break;
          case 2: 
            { addText(yytext());
		position++;
            }
          case 38: break;
          case 3: 
            { offset++;
		position++;
		
		if(offset >= length) {
			
			if(offset > length) {
				yypushback(1);
				position--;
			}
			
			yybegin(0);
		}
		
		addText(yytext());
            }
          case 39: break;
          case 4: 
            { annotationEntity = new Article();
		
		readValue();
            }
          case 40: break;
          case 5: 
            { offsetValue++;
		
		if(offsetValue >= lengthValue ) {
			
			if(offsetValue > lengthValue) {
			
				yypushback(1);
			}
			
			addEntity(annotationEntity);
			
			yybegin(previousState);
		}
            }
          case 41: break;
          case 6: 
            { if(annotationEntity.getValue().equals("")) annotationEntity.setValue(yytext()); offsetValue += yylength();
            }
          case 42: break;
          case 7: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-BIS"); offsetValue += yylength();
            }
          case 43: break;
          case 8: 
            { offsetValue += yylength();
            }
          case 44: break;
          case 9: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-TER"); offsetValue += yylength();
            }
          case 45: break;
          case 10: 
            { addText(yytext());
		position--; //account for the following {LKN_C} character
		yybegin(YYINITIAL);
            }
          case 46: break;
          case 11: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-SEMEL"); offsetValue += yylength();
            }
          case 47: break;
          case 12: 
            { annotationEntity = new Article();

	readPartitionElement();
            }
          case 48: break;
          case 13: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-NOVIES"); offsetValue += yylength();
            }
          case 49: break;
          case 14: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-SEXIES"); offsetValue += yylength();
            }
          case 50: break;
          case 15: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-VICIES"); offsetValue += yylength();
            }
          case 51: break;
          case 16: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-OCTIES"); offsetValue += yylength();
            }
          case 52: break;
          case 17: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-QUATER"); offsetValue += yylength();
            }
          case 53: break;
          case 18: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-DECIES"); offsetValue += yylength();
            }
          case 54: break;
          case 19: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-SEPTIES"); offsetValue += yylength();
            }
          case 55: break;
          case 20: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 4;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 5;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { /* Basta questo? */

	annotationEntity = new Article();

	readPartitionElement();
            }
          case 56: break;
          case 21: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-UNVICIES"); offsetValue += yylength();
            }
          case 57: break;
          case 22: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-UNDECIES"); offsetValue += yylength();
            }
          case 58: break;
          case 23: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-SEXDECIES"); offsetValue += yylength();
            }
          case 59: break;
          case 24: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-DUOVICIES"); offsetValue += yylength();
            }
          case 60: break;
          case 25: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-TERVICIES"); offsetValue += yylength();
            }
          case 61: break;
          case 26: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-TERDECIES"); offsetValue += yylength();
            }
          case 62: break;
          case 27: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-QUINQUIES"); offsetValue += yylength();
            }
          case 63: break;
          case 28: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-DUODECIES"); offsetValue += yylength();
            }
          case 64: break;
          case 29: 
            { addText(yytext()); 
	yybegin(lkn);
            }
          case 65: break;
          case 30: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-NOVODECIES"); offsetValue += yylength();
            }
          case 66: break;
          case 31: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-SEPTDECIES"); offsetValue += yylength();
            }
          case 67: break;
          case 32: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-OCTODECIES"); offsetValue += yylength();
            }
          case 68: break;
          case 33: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-QUINVICIES"); offsetValue += yylength();
            }
          case 69: break;
          case 34: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-QUINDECIES"); offsetValue += yylength();
            }
          case 70: break;
          case 35: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-QUATERVICIES"); offsetValue += yylength();
            }
          case 71: break;
          case 36: 
            { annotationEntity.setValue(annotationEntity.getValue() + "-QUATERDECIES"); offsetValue += yylength();
            }
          case 72: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Articles [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        Articles scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new Articles(reader);
          while ( !scanner.zzAtEOF ) scanner.yylex();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
