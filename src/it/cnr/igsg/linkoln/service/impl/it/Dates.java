/*******************************************************************************
 * Copyright (c) 2016-2021 Institute of Legal Information and Judicial Systems IGSG-CNR (formerly ITTIG-CNR)
 * 
 * This program and the accompanying materials  are made available under the terms of the GNU General Public
 * License as published by the Free Software Foundation; either version 3 of the License, or (at your option)
 * any later version. 
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at: https://www.gnu.org/licenses/gpl-3.0.txt
 * Unless required by applicable law or agreed to in writing, software distributed under the Licence is 
 * distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and limitations under the Licence.
 *  
 * Authors: Lorenzo Bacci (IGSG-CNR)
 ******************************************************************************/
/* The following code was generated by JFlex 1.7.0 */

package it.cnr.igsg.linkoln.service.impl.it;

import java.io.IOException;
import java.io.StringReader;

import it.cnr.igsg.linkoln.entity.*;
import it.cnr.igsg.linkoln.service.*;

import it.cnr.igsg.linkoln.service.impl.Util;


/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.7.0
 * from the specification file <tt>jflex/Dates.jflex</tt>
 */
public class Dates extends LinkolnAnnotationService {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int lkn = 2;
  public static final int completeDateState = 4;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2, 2
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\14\1\2\1\0\1\14\1\1\22\0\1\14\5\0\1\6"+
    "\1\5\1\15\1\15\2\0\1\15\1\3\1\53\1\54\1\63\1\56"+
    "\1\62\1\106\1\52\1\52\1\60\1\60\1\57\1\61\1\16\1\13"+
    "\5\0\1\26\1\10\1\40\1\72\1\36\1\102\1\30\1\100\1\47"+
    "\1\70\1\74\1\67\1\65\1\7\1\51\1\12\1\70\1\32\1\24"+
    "\1\44\1\42\1\34\1\104\1\70\1\70\1\23\1\75\1\55\1\76"+
    "\1\105\1\4\1\5\1\25\1\21\1\37\1\71\1\35\1\101\1\27"+
    "\1\77\1\46\1\0\1\73\1\66\1\64\1\20\1\50\1\22\1\0"+
    "\1\31\1\11\1\43\1\41\1\33\1\103\1\0\1\0\1\17\12\0"+
    "\1\0\44\0\1\0\5\0\1\105\3\0\1\5\5\0\1\105\5\0"+
    "\1\0\1\0\4\0\1\0\1\0\1\0\1\0\2\0\1\0\1\0"+
    "\2\0\1\0\1\0\1\0\1\0\3\0\2\0\1\0\1\0\2\0"+
    "\3\0\1\0\1\0\4\0\1\0\1\0\1\0\1\0\2\0\1\0"+
    "\1\0\2\0\1\0\1\0\1\0\1\0\3\0\2\0\1\0\1\0"+
    "\2\0\53\0\1\0\1\0\6\0\2\45\66\0\1\0\1\0\4\0"+
    "\1\0\1\0\17\0\1\11\u1c88\0\1\0\1\0\216\0\2\0\42\0"+
    "\1\0\1\0\u0144\0\1\14\20\0\1\3\1\3\4\0\1\5\16\0"+
    "\1\0\1\0\u0100\0\1\73\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udee5\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\25\0\4\1\2\2\20\3\66\0\1\4\5\0\4\4"+
    "\1\0\1\4\u0104\0\5\5\253\0\1\6\2\0\4\7"+
    "\2\0\4\10\2\0\4\11\2\0\4\12\2\0\4\13"+
    "\2\0\4\14\2\0\4\15\30\0\4\16\1\0\4\17"+
    "\1\0\4\20\3\0\4\21\2\0\4\22\174\0\4\23"+
    "\3\0\4\24\227\0\2\25\244\0\1\26\u019f\0\2\27"+
    "\u01b8\0\2\30\23\0\2\31\147\0";

  private static int [] zzUnpackAction() {
    int [] result = new int[2075];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\107\0\216\0\325\0\u011c\0\u0163\0\u01aa\0\u01f1"+
    "\0\u0238\0\u027f\0\u02c6\0\u030d\0\u0354\0\u039b\0\u03e2\0\u0429"+
    "\0\u0470\0\u04b7\0\u04fe\0\u0545\0\u058c\0\u05d3\0\u061a\0\u0661"+
    "\0\u06a8\0\u0661\0\u06ef\0\u0661\0\u0736\0\u077d\0\u07c4\0\u080b"+
    "\0\u0852\0\u0899\0\u08e0\0\u0927\0\u096e\0\u09b5\0\u09fc\0\u0a43"+
    "\0\u0a8a\0\u0ad1\0\u0b18\0\u0661\0\u0b5f\0\u0ba6\0\u0bed\0\u0c34"+
    "\0\u0c7b\0\u0cc2\0\u0d09\0\u0d50\0\u0d97\0\u0dde\0\u0e25\0\u0e6c"+
    "\0\u0eb3\0\u0efa\0\u0f41\0\u0f88\0\u0fcf\0\u1016\0\u105d\0\u10a4"+
    "\0\u10eb\0\u1132\0\u1179\0\u11c0\0\u1207\0\u124e\0\u1295\0\u12dc"+
    "\0\u1323\0\u136a\0\u13b1\0\u13f8\0\u143f\0\u1486\0\u14cd\0\u05d3"+
    "\0\u1514\0\u155b\0\u15a2\0\u15e9\0\u1630\0\u1677\0\u16be\0\u1705"+
    "\0\u174c\0\u1793\0\u17da\0\u1821\0\u1868\0\u18af\0\u18f6\0\u193d"+
    "\0\u1984\0\u0661\0\u19cb\0\u1a12\0\u1a59\0\u1aa0\0\u1ae7\0\u1b2e"+
    "\0\u1b75\0\u1bbc\0\u1c03\0\u1b2e\0\u1c4a\0\u1c91\0\u1cd8\0\u1d1f"+
    "\0\u1d66\0\u1dad\0\u1df4\0\u1e3b\0\u1e82\0\u1ec9\0\u1f10\0\u1f57"+
    "\0\u1f9e\0\u1fe5\0\u202c\0\u2073\0\u20ba\0\u2101\0\u2148\0\u218f"+
    "\0\u21d6\0\u221d\0\u2264\0\u22ab\0\u22f2\0\u2339\0\u2380\0\u23c7"+
    "\0\u240e\0\u2455\0\u249c\0\u24e3\0\u252a\0\u2571\0\u25b8\0\u25ff"+
    "\0\u2646\0\u268d\0\u26d4\0\u271b\0\u2762\0\u27a9\0\u27f0\0\u2837"+
    "\0\u287e\0\u28c5\0\u290c\0\u2953\0\u299a\0\u29e1\0\u2a28\0\u2a6f"+
    "\0\u2ab6\0\u2afd\0\u2b44\0\u2b8b\0\u2bd2\0\u2c19\0\u2c60\0\u2ca7"+
    "\0\u2cee\0\u2d35\0\u2d7c\0\u2dc3\0\u2e0a\0\u2e51\0\u2e98\0\u2edf"+
    "\0\u2f26\0\u2f6d\0\u2fb4\0\u2ffb\0\u3042\0\u3089\0\u30d0\0\u3117"+
    "\0\u315e\0\u31a5\0\u31ec\0\u3233\0\u327a\0\u32c1\0\u3308\0\u334f"+
    "\0\u3396\0\u33dd\0\u3424\0\u346b\0\u34b2\0\u34f9\0\u3540\0\u3587"+
    "\0\u35ce\0\u3615\0\u365c\0\u36a3\0\u36ea\0\u3731\0\u3778\0\u37bf"+
    "\0\u3806\0\u384d\0\u3894\0\u38db\0\u3922\0\u3969\0\u39b0\0\u39f7"+
    "\0\u3a3e\0\u3a3e\0\u3a85\0\u3acc\0\u3b13\0\u3b5a\0\u3ba1\0\u3be8"+
    "\0\u3c2f\0\u3c76\0\u3cbd\0\u3d04\0\u3d4b\0\u3d92\0\u3dd9\0\u3e20"+
    "\0\u3e67\0\u3eae\0\u3ef5\0\u3f3c\0\u3f83\0\u3fca\0\u4011\0\u4058"+
    "\0\u409f\0\u40e6\0\u412d\0\u4174\0\u41bb\0\u4202\0\u4249\0\u4290"+
    "\0\u42d7\0\u431e\0\u4365\0\u43ac\0\u43f3\0\u443a\0\u4481\0\u44c8"+
    "\0\u450f\0\u4556\0\u459d\0\u45e4\0\u462b\0\u4672\0\u46b9\0\u4700"+
    "\0\u4747\0\u478e\0\u47d5\0\u481c\0\u4863\0\u48aa\0\u48f1\0\u4938"+
    "\0\u497f\0\u49c6\0\u4a0d\0\u4a54\0\u4a9b\0\u4ae2\0\u4b29\0\u4b70"+
    "\0\u4bb7\0\u4bfe\0\u4c45\0\u4c8c\0\u4cd3\0\u4d1a\0\u4d61\0\u4da8"+
    "\0\u4def\0\u4e36\0\u4e7d\0\u4ec4\0\u4f0b\0\u4f52\0\u4f99\0\u4fe0"+
    "\0\u5027\0\u506e\0\u50b5\0\u50fc\0\u5143\0\u518a\0\u51d1\0\u5218"+
    "\0\u525f\0\u52a6\0\u52ed\0\u5334\0\u537b\0\u53c2\0\u5409\0\u5450"+
    "\0\u5497\0\u54de\0\u5525\0\u556c\0\u55b3\0\u55fa\0\u5641\0\u5688"+
    "\0\u56cf\0\u5716\0\u575d\0\u57a4\0\u57eb\0\u5832\0\u5879\0\u58c0"+
    "\0\u5907\0\u594e\0\u5995\0\u59dc\0\u5a23\0\u5a6a\0\u5ab1\0\u5af8"+
    "\0\u5b3f\0\u5b86\0\u5bcd\0\u5c14\0\u5c5b\0\u5ca2\0\u5ce9\0\u5d30"+
    "\0\u5d77\0\u5dbe\0\u5e05\0\u5e4c\0\u5e93\0\u5eda\0\u5f21\0\u5f68"+
    "\0\u5faf\0\u5ff6\0\u603d\0\u6084\0\u60cb\0\u6112\0\u6159\0\u61a0"+
    "\0\u61e7\0\u622e\0\u6275\0\u62bc\0\u6303\0\u634a\0\u6391\0\u63d8"+
    "\0\u641f\0\u0661\0\u6466\0\u64ad\0\u2e51\0\u64f4\0\u653b\0\u6582"+
    "\0\u65c9\0\u6610\0\u6657\0\u669e\0\u66e5\0\u672c\0\u6773\0\u67ba"+
    "\0\u6801\0\u6848\0\u6466\0\u688f\0\u68d6\0\u691d\0\u6964\0\u69ab"+
    "\0\u69f2\0\u6a39\0\u6a80\0\u6ac7\0\u6b0e\0\u6b55\0\u6b9c\0\u6be3"+
    "\0\u6c2a\0\u6c71\0\u6cb8\0\u6cff\0\u6d46\0\u6d8d\0\u6dd4\0\u6e1b"+
    "\0\u6e62\0\u6ea9\0\u6ef0\0\u6f37\0\u6f7e\0\u6fc5\0\u700c\0\u7053"+
    "\0\u709a\0\u70e1\0\u7128\0\u716f\0\u71b6\0\u71fd\0\u7244\0\u728b"+
    "\0\u72d2\0\u7319\0\u7360\0\u73a7\0\u73ee\0\u7435\0\u747c\0\u74c3"+
    "\0\u750a\0\u7551\0\u7598\0\u75df\0\u7626\0\u766d\0\u76b4\0\u76fb"+
    "\0\u7742\0\u7789\0\u77d0\0\u7817\0\u785e\0\u78a5\0\u78ec\0\u7933"+
    "\0\u797a\0\u79c1\0\u7a08\0\u7a4f\0\u7a96\0\u7add\0\u7b24\0\u7b6b"+
    "\0\u7bb2\0\u7bf9\0\u7c40\0\u7c87\0\u7cce\0\u7d15\0\u7d5c\0\u7da3"+
    "\0\u7dea\0\u7e31\0\u7e78\0\u7ebf\0\u7f06\0\u7f4d\0\u7f94\0\u7fdb"+
    "\0\u8022\0\u8069\0\u80b0\0\u80f7\0\u813e\0\u8185\0\u81cc\0\u8213"+
    "\0\u825a\0\u82a1\0\u82e8\0\u832f\0\u8376\0\u83bd\0\u8404\0\u844b"+
    "\0\u8492\0\u84d9\0\u8520\0\u8567\0\u85ae\0\u85f5\0\u863c\0\u8683"+
    "\0\u86ca\0\u8711\0\u8758\0\u879f\0\u87e6\0\u882d\0\u8874\0\u88bb"+
    "\0\u8902\0\u8949\0\u8990\0\u89d7\0\u8a1e\0\u8a65\0\u8aac\0\u8af3"+
    "\0\u8b3a\0\u8b81\0\u8bc8\0\u8c0f\0\u8c56\0\u8c9d\0\u8ce4\0\u8d2b"+
    "\0\u8d72\0\u8db9\0\u8e00\0\u8e47\0\u8e8e\0\u8ed5\0\u8f1c\0\u8f63"+
    "\0\u8faa\0\u8ff1\0\u9038\0\u907f\0\u90c6\0\u910d\0\u9154\0\u919b"+
    "\0\u91e2\0\u9229\0\u9270\0\u92b7\0\u92fe\0\u9345\0\u938c\0\u93d3"+
    "\0\u941a\0\u0661\0\u9461\0\u94a8\0\u0661\0\u94ef\0\u5641\0\u9536"+
    "\0\u957d\0\u95c4\0\u0661\0\u960b\0\u5832\0\u9652\0\u9699\0\u96e0"+
    "\0\u0661\0\u9727\0\u5a23\0\u976e\0\u97b5\0\u97fc\0\u0661\0\u9843"+
    "\0\u5c14\0\u988a\0\u98d1\0\u9918\0\u0661\0\u995f\0\u5e05\0\u99a6"+
    "\0\u99ed\0\u9a34\0\u0661\0\u9a7b\0\u5ff6\0\u9ac2\0\u9b09\0\u9b50"+
    "\0\u0661\0\u9b97\0\u61e7\0\u9bde\0\u9c25\0\u9c6c\0\u9cb3\0\u9cfa"+
    "\0\u9d41\0\u9d88\0\u9dcf\0\u9e16\0\u9e5d\0\u9ea4\0\u9eeb\0\u9f32"+
    "\0\u9f79\0\u9fc0\0\ua007\0\ua04e\0\ua095\0\ua0dc\0\ua123\0\ua16a"+
    "\0\ua1b1\0\ua1f8\0\ua23f\0\ua286\0\u0661\0\ua2cd\0\u69ab\0\ua314"+
    "\0\ua35b\0\u0661\0\ua3a2\0\u6b9c\0\ua3e9\0\ua430\0\u0661\0\ua477"+
    "\0\u6d8d\0\ua4be\0\ua505\0\ua54c\0\ua593\0\u0661\0\ua5da\0\u6f7e"+
    "\0\ua621\0\ua668\0\ua6af\0\u0661\0\ua6f6\0\u716f\0\ua73d\0\ua784"+
    "\0\ua7cb\0\ua812\0\ua859\0\ua8a0\0\ua8e7\0\ua92e\0\ua975\0\ua9bc"+
    "\0\uaa03\0\uaa4a\0\uaa91\0\uaad8\0\uab1f\0\uab66\0\uabad\0\uabf4"+
    "\0\uac3b\0\uac82\0\uacc9\0\uad10\0\uad57\0\uad9e\0\uade5\0\uae2c"+
    "\0\uae73\0\uaeba\0\uaf01\0\uaf48\0\uaf8f\0\uafd6\0\ub01d\0\ub064"+
    "\0\ub0ab\0\ub0f2\0\ub139\0\ub180\0\ub1c7\0\ub20e\0\ub255\0\ub29c"+
    "\0\ub2e3\0\ub32a\0\ub371\0\ub3b8\0\ub3ff\0\ub446\0\ub48d\0\ub4d4"+
    "\0\ub51b\0\ub562\0\ub5a9\0\ub5f0\0\ub637\0\ub67e\0\ub6c5\0\ub70c"+
    "\0\ub753\0\ub79a\0\ub7e1\0\ub828\0\ub86f\0\ub8b6\0\ub8fd\0\ub944"+
    "\0\ub98b\0\ub9d2\0\uba19\0\uba60\0\ubaa7\0\ubaee\0\ubb35\0\ubb7c"+
    "\0\ubbc3\0\ubc0a\0\ubc51\0\ubc98\0\ubcdf\0\ubd26\0\ubd6d\0\ubdb4"+
    "\0\ubdfb\0\ube42\0\ube89\0\ubed0\0\ubf17\0\ubf5e\0\ubfa5\0\ubfec"+
    "\0\uc033\0\uc07a\0\uc0c1\0\uc108\0\uc14f\0\uc196\0\uc1dd\0\uc224"+
    "\0\uc26b\0\uc2b2\0\uc2f9\0\uc340\0\uc387\0\uc3ce\0\uc415\0\uc45c"+
    "\0\uc4a3\0\uc4ea\0\uc531\0\uc578\0\uc5bf\0\uc606\0\uc64d\0\uc694"+
    "\0\uc6db\0\uc722\0\uc769\0\uc7b0\0\uc7f7\0\uc83e\0\uc885\0\uc8cc"+
    "\0\uc913\0\uc95a\0\uc9a1\0\u0661\0\uc9e8\0\u9c25\0\uca2f\0\uca76"+
    "\0\ucabd\0\ucb04\0\u0661\0\ucb4b\0\u9e16\0\ucb92\0\ucbd9\0\ucc20"+
    "\0\ucc67\0\uccae\0\uccf5\0\ucd3c\0\ucd83\0\ucdca\0\uce11\0\uce58"+
    "\0\uce9f\0\ucee6\0\ucf2d\0\ucf74\0\ucfbb\0\ud002\0\ud049\0\ud090"+
    "\0\ud0d7\0\ud11e\0\ud165\0\ud1ac\0\ud1f3\0\ud23a\0\ud281\0\ud2c8"+
    "\0\ud30f\0\ud356\0\ud39d\0\ud3e4\0\ud42b\0\ud472\0\ud4b9\0\ud500"+
    "\0\ud547\0\ud58e\0\ud5d5\0\ud61c\0\ud663\0\ud6aa\0\ud6f1\0\ud738"+
    "\0\ud77f\0\ud7c6\0\ud80d\0\ud854\0\ud89b\0\ud8e2\0\ud929\0\ud970"+
    "\0\ud9b7\0\ud9fe\0\uda45\0\uda8c\0\udad3\0\udb1a\0\udb61\0\udba8"+
    "\0\udbef\0\udc36\0\udc7d\0\udcc4\0\udd0b\0\udd52\0\udd99\0\udde0"+
    "\0\ude27\0\ude6e\0\udeb5\0\udefc\0\udf43\0\udf8a\0\udfd1\0\ue018"+
    "\0\ue05f\0\ue0a6\0\ue0ed\0\ue134\0\ue17b\0\ue1c2\0\ue209\0\ue250"+
    "\0\ue297\0\ue2de\0\ue325\0\ue36c\0\ue3b3\0\ue3fa\0\ue441\0\ue488"+
    "\0\ue4cf\0\ue516\0\ue55d\0\ue5a4\0\ue5eb\0\ue632\0\ue679\0\ue6c0"+
    "\0\ue707\0\ue74e\0\ue795\0\ue7dc\0\ue823\0\ue86a\0\ue8b1\0\ue8f8"+
    "\0\ue93f\0\ue986\0\ue9cd\0\uea14\0\uea5b\0\ueaa2\0\ueae9\0\ueb30"+
    "\0\ueb77\0\uebbe\0\uec05\0\uec4c\0\uec93\0\uecda\0\ued21\0\ued68"+
    "\0\uedaf\0\uedf6\0\uee3d\0\uee84\0\ueecb\0\uef12\0\uef59\0\uefa0"+
    "\0\uefe7\0\uf02e\0\uf075\0\uf0bc\0\uf103\0\uf14a\0\uf191\0\uf1d8"+
    "\0\uf21f\0\uf266\0\uf2ad\0\uf2f4\0\uf33b\0\uf382\0\uf3c9\0\uf410"+
    "\0\uf457\0\uf49e\0\uf4e5\0\uf52c\0\uf573\0\u0661\0\uf5ba\0\uf601"+
    "\0\uf648\0\uf68f\0\uf6d6\0\uf71d\0\uf764\0\uf7ab\0\uf7f2\0\uf839"+
    "\0\uf880\0\uf8c7\0\uf90e\0\uf955\0\uf99c\0\uf9e3\0\ufa2a\0\ufa71"+
    "\0\ufab8\0\ufaff\0\ufb46\0\ufb8d\0\ufbd4\0\ufc1b\0\ufc62\0\ufca9"+
    "\0\ufcf0\0\ufd37\0\ufd7e\0\ufdc5\0\ufe0c\0\ufe53\0\ufe9a\0\ufee1"+
    "\0\uff28\0\uff6f\0\uffb6\0\ufffd\1\104\1\213\1\322\1\u0119"+
    "\1\u0160\1\u01a7\1\u01ee\1\u0235\1\u027c\1\u02c3\1\u030a\1\u0351"+
    "\1\u0398\1\u03df\1\u0426\1\u046d\1\u04b4\1\u04fb\1\u0542\1\u0589"+
    "\1\u05d0\1\u0617\1\u065e\1\u06a5\1\u06ec\1\u0733\1\u077a\1\u07c1"+
    "\1\u0808\1\u084f\1\u0896\1\u08dd\1\u0924\1\u096b\1\u09b2\1\u09f9"+
    "\1\u0a40\1\u0a87\1\u0ace\1\u0b15\1\u0b5c\1\u0ba3\1\u0bea\1\u0c31"+
    "\1\u0c78\1\u0cbf\1\u0d06\1\u0d4d\1\u0d94\1\u0ddb\1\u0e22\1\u0e69"+
    "\1\u0eb0\1\u0ef7\1\u0f3e\1\u0f85\1\u0fcc\1\u1013\1\u105a\1\u10a1"+
    "\1\u10e8\1\u112f\1\u1176\1\u11bd\1\u1204\1\u124b\1\u1292\1\u12d9"+
    "\1\u1320\1\u1367\1\u13ae\1\u13f5\1\u143c\1\u1483\1\u14ca\1\u1511"+
    "\1\u1558\1\u159f\1\u15e6\1\u162d\1\u1674\1\u16bb\1\u1702\1\u1749"+
    "\1\u1790\1\u17d7\1\u181e\1\u1865\1\u18ac\1\u18f3\1\u193a\1\u1981"+
    "\1\u19c8\1\u1a0f\1\u1a56\1\u1a9d\1\u1ae4\1\u1b2b\1\u1b72\1\u1bb9"+
    "\1\u1c00\1\u1c47\1\u1c8e\1\u1cd5\1\u1d1c\1\u1d63\1\u1daa\1\u1df1"+
    "\1\u1e38\1\u1e7f\1\u1ec6\1\u1f0d\1\u1f54\1\u1f9b\1\u1fe2\1\u2029"+
    "\1\u2070\1\u20b7\1\u20fe\1\u2145\1\u218c\1\u21d3\1\u221a\1\u2261"+
    "\1\u22a8\1\u22ef\1\u2336\0\u0661\1\u237d\1\u23c4\1\u240b\1\u2452"+
    "\1\u2499\1\u24e0\1\u2527\1\u256e\1\u25b5\1\u25fc\1\u2643\1\u268a"+
    "\1\u26d1\1\u2718\1\u275f\1\u27a6\1\u27ed\1\u2834\1\u287b\1\u28c2"+
    "\1\u2909\1\u2950\1\u2997\1\u29de\1\u2a25\1\u2a6c\1\u2ab3\1\u2afa"+
    "\1\u2b41\1\u2b88\1\u2bcf\1\u2c16\1\u2c5d\1\u2ca4\1\u2ceb\1\u2d32"+
    "\1\u2d79\1\u2dc0\1\u2e07\1\u2e4e\1\u2e95\1\u2edc\1\u2f23\1\u2f6a"+
    "\1\u2fb1\1\u2ff8\1\u303f\1\u3086\1\u30cd\1\u3114\1\u315b\1\u31a2"+
    "\1\u31e9\1\u3230\1\u3277\1\u32be\1\u3305\1\u334c\1\u3393\1\u33da"+
    "\1\u3421\1\u3468\1\u34af\1\u34f6\1\u353d\1\u3584\1\u35cb\1\u3612"+
    "\1\u3659\1\u36a0\1\u36e7\1\u372e\1\u3775\1\u37bc\1\u3803\1\u384a"+
    "\1\u3891\1\u38d8\1\u391f\1\u3966\1\u39ad\1\u39f4\1\u3a3b\1\u3a82"+
    "\1\u3ac9\1\u3b10\1\u3b57\1\u3b9e\1\u3be5\1\u3c2c\1\u3c73\1\u3cba"+
    "\1\u3d01\1\u3d48\1\u3d8f\1\u3dd6\1\u3e1d\1\u3e64\1\u3eab\1\u3ef2"+
    "\1\u3f39\1\u3f80\1\u3fc7\1\u400e\1\u4055\1\u409c\1\u40e3\1\u412a"+
    "\1\u4171\1\u41b8\1\u41ff\1\u4246\1\u428d\1\u42d4\1\u431b\1\u4362"+
    "\1\u43a9\1\u43f0\1\u4437\1\u447e\1\u44c5\1\u450c\1\u4553\1\u459a"+
    "\1\u45e1\1\u4628\1\u466f\1\u46b6\1\u46fd\1\u4744\1\u478b\1\u47d2"+
    "\1\u4819\1\u4860\1\u48a7\1\u48ee\1\u4935\1\u497c\1\u49c3\1\u4a0a"+
    "\1\u4a51\1\u4a98\1\u4adf\1\u4b26\1\u4b6d\1\u4bb4\1\u4bfb\1\u4c42"+
    "\1\u4c89\1\u4cd0\1\u4d17\1\u4d5e\1\u4da5\1\u4dec\1\u4e33\1\u4e7a"+
    "\1\u4ec1\1\u4f08\1\u4f4f\1\u4f96\1\u4fdd\1\u5024\1\u506b\1\u50b2"+
    "\1\u50f9\1\u5140\1\u5187\1\u51ce\1\u5215\1\u525c\1\u52a3\1\u52ea"+
    "\1\u5331\1\u5378\1\u53bf\1\u5406\1\u544d\1\u5494\1\u54db\1\u5522"+
    "\1\u5569\1\u55b0\1\u55f7\1\u563e\1\u5685\1\u56cc\1\u5713\1\u575a"+
    "\1\u57a1\1\u57e8\1\u582f\1\u5876\1\u58bd\1\u5904\1\u594b\1\u5992"+
    "\1\u59d9\1\u5a20\1\u5a67\1\u5aae\1\u5af5\1\u5b3c\1\u5b83\1\u5bca"+
    "\1\u5c11\1\u5c58\1\u5c9f\1\u5ce6\1\u5d2d\1\u5d74\1\u5dbb\1\u5e02"+
    "\1\u5e49\1\u5e90\1\u5ed7\1\u5f1e\1\u5f65\1\u5fac\1\u5ff3\1\u603a"+
    "\1\u6081\1\u60c8\1\u610f\1\u6156\1\u619d\1\u61e4\1\u622b\1\u6272"+
    "\1\u62b9\1\u6300\1\u6347\1\u638e\1\u63d5\1\u641c\1\u6463\1\u64aa"+
    "\1\u64f1\1\u6538\1\u657f\1\u65c6\1\u660d\1\u6654\1\u669b\1\u66e2"+
    "\1\u6729\1\u6770\1\u67b7\1\u67fe\1\u6845\1\u688c\1\u68d3\1\u691a"+
    "\1\u6961\1\u69a8\1\u69ef\1\u6a36\1\u6a7d\1\u6ac4\1\u6b0b\1\u6b52"+
    "\1\u6b99\1\u6be0\1\u6c27\1\u6c6e\1\u6cb5\1\u6cfc\1\u6d43\1\u6d8a"+
    "\1\u6dd1\1\u6e18\1\u6e5f\1\u6ea6\1\u6eed\1\u6f34\1\u6f7b\1\u6fc2"+
    "\1\u7009\1\u7050\1\u7097\1\u70de\1\u7125\1\u716c\1\u71b3\1\u71fa"+
    "\1\u7241\1\u7288\1\u72cf\1\u7316\1\u735d\1\u73a4\1\u73eb\1\u7432"+
    "\1\u7479\1\u74c0\1\u7507\1\u754e\1\u7595\1\u75dc\1\u7623\1\u766a"+
    "\1\u76b1\1\u76f8\1\u773f\1\u7786\1\u77cd\1\u7814\1\u785b\1\u78a2"+
    "\1\u78e9\1\u7930\1\u7977\1\u79be\1\u7a05\1\u7a4c\1\u7a93\1\u7ada"+
    "\1\u7b21\1\u7b68\1\u7baf\1\u7bf6\1\u7c3d\1\u7c84\1\u7ccb\1\u7d12"+
    "\1\u7d59\1\u7da0\1\u7de7\1\u7e2e\1\u7e75\1\u7ebc\1\u7f03\1\u7f4a"+
    "\1\u7f91\1\u7fd8\1\u801f\1\u8066\1\u80ad\1\u80f4\1\u813b\1\u8182"+
    "\1\u81c9\1\u8210\1\u8257\1\u829e\1\u82e5\1\u832c\1\u8373\1\u83ba"+
    "\1\u8401\1\u8448\1\u848f\1\u84d6\1\u851d\1\u8564\1\u85ab\1\u85f2"+
    "\1\u8639\1\u8680\1\u86c7\1\u870e\1\u8755\1\u879c\1\u87e3\1\u882a"+
    "\1\u8871\1\u88b8\1\u88ff\1\u8946\1\u898d\1\u89d4\1\u8a1b\1\u8a62"+
    "\1\u8aa9\1\u8af0\1\u8b37\1\u8b7e\1\u8bc5\1\u8c0c\1\u8c53\1\u8c9a"+
    "\1\u8ce1\1\u8d28\1\u8d6f\1\u8db6\1\u8dfd\1\u8e44\1\u8e8b\1\u8ed2"+
    "\1\u8f19\1\u8f60\1\u8fa7\1\u8fee\1\u9035\1\u907c\1\u90c3\1\u910a"+
    "\1\u9151\1\u9198\1\u91df\1\u9226\1\u926d\1\u92b4\1\u92fb\1\u9342"+
    "\1\u9389\1\u93d0\1\u9417\1\u945e\1\u94a5\1\u94ec\1\u9533\1\u957a"+
    "\1\u95c1\1\u9608\1\u964f\0\u0661\1\u9696\1\u96dd\1\u9724\1\u976b"+
    "\1\u97b2\1\u97f9\1\u9840\1\u9887\1\u98ce\1\u9915\1\u995c\1\u99a3"+
    "\1\u99ea\1\u9a31\1\u9a78\1\u9abf\1\u9b06\1\u9b4d\1\u9b94\1\u9bdb"+
    "\1\u9c22\1\u9c69\1\u9cb0\1\u9cf7\1\u9d3e\1\u9d85\1\u9dcc\1\u9e13"+
    "\1\u9e5a\1\u9ea1\1\u9ee8\1\u9f2f\1\u9f76\1\u9fbd\1\ua004\1\ua04b"+
    "\1\ua092\1\ua0d9\1\ua120\1\ua167\1\ua1ae\1\ua1f5\1\ua23c\1\ua283"+
    "\1\ua2ca\1\ua311\1\ua358\1\ua39f\1\ua3e6\1\ua42d\1\ua474\1\ua4bb"+
    "\1\ua502\1\ua549\1\ua590\1\ua5d7\1\ua61e\1\ua665\1\ua6ac\1\ua6f3"+
    "\1\ua73a\1\ua781\1\ua7c8\1\ua80f\1\ua856\1\ua89d\1\ua8e4\1\ua92b"+
    "\1\ua972\1\ua9b9\1\uaa00\1\uaa47\1\uaa8e\1\uaad5\1\uab1c\1\uab63"+
    "\1\uabaa\1\uabf1\1\uac38\1\uac7f\1\uacc6\1\uad0d\1\uad54\1\uad9b"+
    "\1\uade2\1\uae29\1\uae70\1\uaeb7\1\uaefe\1\uaf45\1\uaf8c\1\uafd3"+
    "\1\ub01a\1\ub061\1\ub0a8\1\ub0ef\1\ub136\1\ub17d\1\ub1c4\1\ub20b"+
    "\1\ub252\1\ub299\1\ub2e0\1\ub327\1\ub36e\1\ub3b5\1\ub3fc\1\ub443"+
    "\1\ub48a\1\ub4d1\1\ub518\1\ub55f\1\ub5a6\1\ub5ed\1\ub634\1\ub67b"+
    "\1\ub6c2\1\ub709\1\ub750\1\ub797\1\ub7de\1\ub825\1\ub86c\1\ub8b3"+
    "\1\ub8fa\1\ub941\1\ub988\1\ub9cf\1\uba16\1\uba5d\1\ubaa4\1\ubaeb"+
    "\1\ubb32\1\ubb79\1\ubbc0\1\ubc07\1\ubc4e\1\ubc95\1\ubcdc\1\ubd23"+
    "\1\ubd6a\1\ubdb1\1\ubdf8\1\ube3f\1\ube86\1\ubecd\1\ubf14\1\ubf5b"+
    "\1\ubfa2\1\ubfe9\1\uc030\1\uc077\1\uc0be\1\uc105\1\uc14c\1\uc193"+
    "\1\uc1da\1\uc221\1\uc268\1\uc2af\1\uc2f6\1\uc33d\1\uc384\1\uc3cb"+
    "\1\uc412\1\uc459\1\uc4a0\1\uc4e7\1\uc52e\1\uc575\1\uc5bc\1\uc603"+
    "\1\uc64a\1\uc691\1\uc6d8\1\uc71f\1\uc766\1\uc7ad\1\uc7f4\1\uc83b"+
    "\1\uc882\1\uc8c9\1\uc910\1\uc957\1\uc99e\1\uc9e5\1\uca2c\1\uca73"+
    "\1\ucaba\1\ucb01\1\ucb48\1\ucb8f\1\ucbd6\1\ucc1d\1\ucc64\1\uccab"+
    "\1\uccf2\1\ucd39\1\ucd80\1\ucdc7\1\uce0e\1\uce55\1\uce9c\1\ucee3"+
    "\1\ucf2a\1\ucf71\1\ucfb8\1\ucfff\1\ud046\1\ud08d\1\ud0d4\1\ud11b"+
    "\1\ud162\1\ud1a9\1\ud1f0\1\ud237\1\ud27e\1\ud2c5\1\ud30c\1\ud353"+
    "\1\ud39a\1\ud3e1\1\ud428\1\ud46f\1\ud4b6\1\ud4fd\1\ud544\1\ud58b"+
    "\1\ud5d2\1\ud619\1\ud660\1\ud6a7\1\ud6ee\1\ud735\1\ud77c\1\ud7c3"+
    "\1\ud80a\1\ud851\1\ud898\1\ud8df\1\ud926\1\ud96d\1\ud9b4\1\ud9fb"+
    "\1\uda42\1\uda89\1\udad0\1\udb17\1\udb5e\1\udba5\1\udbec\1\udc33"+
    "\1\udc7a\1\udcc1\1\udd08\1\udd4f\1\udd96\1\udddd\1\ude24\1\ude6b"+
    "\1\udeb2\1\udef9\1\udf40\1\udf87\1\udfce\1\ue015\1\ue05c\1\ue0a3"+
    "\1\ue0ea\1\ue131\1\ue178\1\ue1bf\1\ue206\1\ue24d\1\ue294\1\ue2db"+
    "\1\ue322\1\ue369\1\ue3b0\1\ue3f7\1\ue43e\1\ue485\1\ue4cc\1\ue513"+
    "\1\ue55a\1\ue5a1\1\ue5e8\1\ue62f\1\ue676\1\ue6bd\1\ue704\1\ue74b"+
    "\1\ue792\1\ue7d9\1\ue820\1\ue867\1\ue8ae\1\ue8f5\1\ue93c\1\ue983"+
    "\1\ue9ca\1\uea11\1\uea58\1\uea9f\1\ueae6\1\ueb2d\1\ueb74\1\uebbb"+
    "\1\uec02\1\uec49\1\uec90\1\uecd7\1\ued1e\1\ued65\1\uedac\1\uedf3"+
    "\1\uee3a\1\uee81\1\ueec8\1\uef0f\1\uef56\1\uef9d\1\uefe4\1\uf02b"+
    "\1\uf072\1\uf0b9\1\uf100\1\uf147\1\uf18e\1\uf1d5\1\uf21c\1\uf263"+
    "\1\uf2aa\1\uf2f1\1\uf338\1\uf37f\1\uf3c6\1\uf40d\1\uf454\1\uf49b"+
    "\1\uf4e2\1\uf529\1\uf570\1\uf5b7\1\uf5fe\1\uf645\1\uf68c\1\uf6d3"+
    "\1\uf71a\1\uf761\1\uf7a8\1\uf7ef\1\uf836\1\uf87d\1\uf8c4\1\uf90b"+
    "\1\uf952\1\uf999\1\uf9e0\1\ufa27\1\ufa6e\1\ufab5\1\ufafc\1\ufb43"+
    "\1\ufb8a\1\ufbd1\1\ufc18\1\ufc5f\1\ufca6\1\ufced\1\ufd34\1\ufd7b"+
    "\1\ufdc2\1\ufe09\1\ufe50\1\ufe97\1\ufede\1\uff25\1\uff6c\1\uffb3"+
    "\1\ufffa\2\101\2\210\2\317\2\u0116\2\u015d\2\u01a4\2\u01eb"+
    "\2\u0232\2\u0279\2\u02c0\2\u0307\2\u034e\2\u0395\2\u03dc\2\u0423"+
    "\2\u046a\2\u04b1\2\u04f8\2\u053f\2\u0586\2\u05cd\2\u0614\2\u065b"+
    "\2\u06a2\2\u06e9\2\u0730\2\u0777\2\u07be\2\u0805\2\u084c\2\u0893"+
    "\2\u08da\2\u0921\2\u0968\2\u09af\2\u09f6\2\u0a3d\2\u0a84\2\u0acb"+
    "\2\u0b12\2\u0b59\2\u0ba0\2\u0be7\2\u0c2e\2\u0c75\2\u0cbc\2\u0d03"+
    "\2\u0d4a\2\u0d91\2\u0dd8\2\u0e1f\2\u0e66\2\u0ead\2\u0ef4\2\u0f3b"+
    "\2\u0f82\2\u0fc9\2\u1010\2\u1057\2\u109e\0\u0661\2\u10e5\2\u112c"+
    "\2\u1173\2\u11ba\2\u1201\2\u1248\2\u128f\2\u12d6\2\u131d\2\u1364"+
    "\2\u13ab\2\u13f2\2\u1439\2\u1480\2\u14c7\2\u150e\2\u1555\2\u159c"+
    "\2\u15e3\2\u162a\0\u0661\2\u1671\2\u16b8\2\u16ff\2\u1746\2\u178d"+
    "\2\u17d4\2\u181b\2\u1862\2\u18a9\2\u18f0\2\u1937\2\u197e\2\u19c5"+
    "\2\u1a0c\2\u1a53\2\u1a9a\2\u1ae1\2\u1b28\2\u1b6f\2\u1bb6\2\u1bfd"+
    "\2\u1c44\2\u1c8b\2\u1cd2\2\u1d19\2\u1d60\2\u1da7\2\u1dee\2\u1e35"+
    "\2\u1e7c\2\u1ec3\2\u1f0a\2\u1f51\2\u1f98\2\u1fdf\2\u2026\2\u206d"+
    "\2\u20b4\2\u20fb\2\u2142\2\u2189\2\u21d0\2\u2217\2\u225e\2\u22a5"+
    "\2\u22ec\2\u2333\2\u237a\2\u23c1\2\u2408\2\u244f\2\u2496\2\u24dd"+
    "\2\u2524\2\u256b\2\u25b2\2\u25f9\2\u2640\2\u2687\2\u26ce\2\u2715"+
    "\2\u275c\2\u27a3\2\u27ea\2\u2831\2\u2878\2\u28bf\2\u2906\2\u294d"+
    "\2\u2994\2\u29db\2\u2a22\2\u2a69\2\u2ab0\2\u2af7\2\u2b3e\2\u2b85"+
    "\2\u2bcc\2\u2c13\2\u2c5a\2\u2ca1\2\u2ce8\2\u2d2f\2\u2d76\2\u2dbd"+
    "\2\u2e04\2\u2e4b\2\u2e92\2\u2ed9\2\u2f20\2\u2f67\2\u2fae\2\u2ff5"+
    "\2\u303c\2\u3083\2\u30ca\2\u3111\2\u3158\2\u319f\2\u31e6\2\u322d"+
    "\2\u3274\2\u32bb\2\u3302";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[2075];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\26\1\27\50\26\1\30\3\26\6\30\11\26\1\31"+
    "\10\26\1\30\75\32\1\33\11\32\5\34\1\35\1\34"+
    "\1\36\1\34\1\37\6\34\1\36\3\34\1\37\2\40"+
    "\2\41\17\34\2\42\1\43\3\34\1\44\3\43\1\45"+
    "\1\46\2\47\2\50\1\34\2\51\6\34\2\52\3\34"+
    "\1\53\52\0\1\54\3\0\1\55\3\54\1\56\1\57"+
    "\22\0\1\60\52\0\1\61\3\0\6\61\22\0\1\61"+
    "\52\0\1\62\3\0\6\62\22\0\1\62\52\0\1\54"+
    "\3\0\1\63\4\54\1\57\22\0\1\54\52\0\1\64"+
    "\3\0\6\64\22\0\1\64\27\0\2\65\130\0\1\66"+
    "\3\0\6\66\22\0\1\66\101\0\2\67\70\0\2\70"+
    "\46\0\2\71\144\0\2\72\50\0\2\73\144\0\2\74"+
    "\44\0\2\75\71\0\1\76\12\0\1\76\132\0\2\77"+
    "\44\0\1\100\10\0\1\100\157\0\2\101\23\0\1\102"+
    "\2\0\1\103\5\0\1\102\1\0\1\103\4\0\2\104"+
    "\2\105\2\0\2\106\2\0\2\107\2\110\5\0\1\111"+
    "\3\0\1\112\3\111\1\113\1\114\5\0\2\115\4\0"+
    "\2\116\5\0\1\117\2\0\1\120\4\0\1\102\2\0"+
    "\1\103\5\0\1\102\1\0\1\103\4\0\2\104\2\105"+
    "\2\0\2\106\2\0\2\107\2\110\5\0\1\111\3\0"+
    "\1\112\3\111\1\113\1\114\5\0\2\115\4\0\2\116"+
    "\5\0\1\117\116\0\1\102\2\0\1\103\5\0\1\102"+
    "\1\0\1\103\4\0\2\104\2\105\2\0\2\106\2\0"+
    "\2\107\2\110\5\0\1\111\3\0\1\112\3\111\1\113"+
    "\1\114\2\0\2\121\1\0\2\115\4\0\2\116\5\0"+
    "\1\117\54\0\1\122\104\0\1\123\3\0\6\123\22\0"+
    "\1\123\50\0\2\124\72\0\2\125\62\0\1\126\7\0"+
    "\1\126\4\0\2\127\113\0\2\130\6\0\3\131\102\0"+
    "\2\132\43\0\4\133\1\0\1\134\1\135\1\0\1\136"+
    "\2\0\1\133\3\0\1\135\3\0\1\136\2\137\2\140"+
    "\17\0\2\141\1\142\3\133\6\142\2\143\2\144\1\0"+
    "\2\145\6\0\2\146\3\0\1\142\1\0\4\133\1\0"+
    "\1\134\1\135\1\0\1\136\2\0\1\133\3\0\1\135"+
    "\3\0\1\136\2\137\2\140\17\0\1\147\1\141\1\150"+
    "\3\133\1\151\1\152\1\150\1\153\2\151\2\143\2\144"+
    "\1\0\2\145\6\0\2\146\2\0\1\154\1\150\1\0"+
    "\4\133\1\0\1\134\1\135\1\0\1\136\2\0\1\133"+
    "\3\0\1\135\3\0\1\136\2\137\2\140\17\0\2\141"+
    "\1\150\3\133\5\150\1\155\2\143\2\144\1\0\2\145"+
    "\6\0\2\146\3\0\1\150\52\0\1\151\3\0\5\151"+
    "\1\142\22\0\1\151\25\0\2\156\121\0\2\157\111\0"+
    "\3\160\74\0\2\161\51\0\4\133\1\0\1\134\1\135"+
    "\1\0\1\136\2\0\1\133\3\0\1\135\3\0\1\136"+
    "\2\137\2\140\17\0\2\141\1\142\3\133\1\150\4\142"+
    "\1\150\2\143\2\144\1\0\2\145\6\0\2\146\3\0"+
    "\1\142\50\0\1\54\1\0\1\54\3\0\6\54\21\0"+
    "\2\54\52\0\1\54\3\0\6\54\22\0\1\54\52\0"+
    "\1\54\3\0\5\54\23\0\1\54\56\0\1\54\4\0"+
    "\1\54\75\0\1\162\3\0\1\163\3\164\2\163\22\0"+
    "\1\162\52\0\1\165\3\0\1\166\3\167\2\166\22\0"+
    "\1\165\56\0\1\54\3\0\2\54\75\0\1\170\3\0"+
    "\1\171\3\172\2\171\22\0\1\170\35\0\2\173\122\0"+
    "\1\174\3\0\1\175\3\176\2\175\22\0\1\174\35\0"+
    "\2\177\75\0\2\200\72\0\1\201\7\0\1\201\111\0"+
    "\2\202\125\0\3\203\100\0\2\204\73\0\2\205\113\0"+
    "\2\206\113\0\2\207\112\0\2\210\102\0\3\211\107\0"+
    "\2\212\66\0\2\213\6\0\2\214\111\0\3\215\74\0"+
    "\2\216\134\0\2\217\112\0\2\220\45\0\2\221\55\0"+
    "\2\222\2\223\1\0\1\224\1\225\1\0\1\226\2\0"+
    "\1\222\3\0\1\225\3\0\1\226\2\227\2\230\17\0"+
    "\2\231\1\0\1\232\1\233\1\234\6\0\2\235\2\236"+
    "\1\0\2\237\6\0\2\240\5\0\2\222\2\223\1\0"+
    "\1\224\1\225\1\0\1\226\2\0\1\222\3\0\1\225"+
    "\3\0\1\226\2\227\2\230\17\0\1\241\1\231\1\111"+
    "\1\232\1\233\1\234\6\111\2\235\2\236\1\0\2\237"+
    "\6\0\2\240\2\0\2\111\1\0\2\222\2\223\1\0"+
    "\1\224\1\225\1\0\1\226\2\0\1\222\3\0\1\225"+
    "\3\0\1\226\2\227\2\230\17\0\2\231\1\111\1\232"+
    "\1\233\1\234\6\111\2\235\2\236\1\0\2\237\6\0"+
    "\2\240\3\0\1\111\52\0\1\111\3\0\5\111\23\0"+
    "\1\111\25\0\2\242\6\0\2\243\75\0\2\244\61\0"+
    "\2\222\2\223\1\0\1\224\1\225\1\0\1\226\2\0"+
    "\1\222\3\0\1\225\3\0\1\226\2\227\2\230\17\0"+
    "\2\231\1\0\1\232\1\233\1\234\1\111\4\0\1\111"+
    "\2\235\2\236\1\0\2\237\6\0\2\240\77\0\2\245"+
    "\100\0\2\246\71\0\1\142\3\0\6\142\22\0\1\142"+
    "\33\0\2\247\115\0\2\250\73\0\2\251\124\0\2\252"+
    "\44\0\1\253\10\0\1\253\127\0\2\254\107\0\2\255"+
    "\43\0\4\133\1\256\1\134\1\135\1\0\1\136\2\0"+
    "\1\133\3\0\1\135\3\0\1\136\2\137\2\140\17\0"+
    "\2\141\1\257\3\133\1\260\3\257\1\261\1\262\2\143"+
    "\2\144\1\0\2\145\6\0\2\146\3\0\1\257\7\0"+
    "\1\263\10\0\1\263\136\0\2\264\72\0\2\265\62\0"+
    "\1\266\7\0\1\266\4\0\2\267\113\0\2\270\6\0"+
    "\3\271\102\0\2\272\67\0\2\273\121\0\2\274\111\0"+
    "\3\275\74\0\2\276\51\0\4\277\1\0\1\300\1\135"+
    "\1\0\1\136\2\0\1\277\3\0\1\135\3\0\1\136"+
    "\2\137\2\140\12\0\2\272\3\0\2\141\1\0\3\277"+
    "\6\0\2\143\2\144\1\0\2\145\6\0\2\146\5\0"+
    "\4\277\1\0\1\300\1\135\1\0\1\136\2\0\1\277"+
    "\3\0\1\135\3\0\1\136\2\137\2\140\17\0\2\141"+
    "\1\0\3\277\6\0\2\143\2\144\1\0\2\145\6\0"+
    "\2\146\5\0\4\133\1\0\1\134\1\135\1\0\1\136"+
    "\2\0\1\133\3\0\1\135\3\0\1\136\2\137\2\140"+
    "\17\0\2\141\1\0\3\133\6\0\2\143\2\144\1\0"+
    "\2\145\6\0\2\146\5\0\4\277\1\0\1\300\1\135"+
    "\1\0\1\136\2\0\1\277\3\0\1\135\3\0\1\136"+
    "\2\137\2\140\17\0\2\141\1\0\3\277\1\0\3\123"+
    "\2\0\2\143\2\144\1\0\2\145\6\0\2\146\5\0"+
    "\4\277\1\0\1\300\1\135\1\0\1\136\2\0\1\277"+
    "\3\0\1\135\3\0\1\136\2\137\2\140\17\0\2\141"+
    "\1\123\3\277\6\123\2\143\2\144\1\0\2\145\6\0"+
    "\2\146\3\0\1\123\1\0\4\277\1\0\1\300\1\135"+
    "\1\0\1\136\2\0\1\277\3\0\1\135\3\0\1\136"+
    "\2\137\2\140\17\0\2\141\1\0\3\277\1\123\3\0"+
    "\2\123\2\143\2\144\1\0\2\145\6\0\2\146\33\0"+
    "\2\301\2\302\103\0\2\303\115\0\2\304\56\0\1\305"+
    "\10\0\1\305\66\0\5\306\1\0\1\307\1\310\2\0"+
    "\1\311\1\306\3\0\1\307\1\310\5\0\2\312\2\313"+
    "\2\314\2\315\2\316\2\317\2\320\3\0\2\321\1\0"+
    "\3\306\3\0\1\322\26\0\5\306\1\0\1\307\1\310"+
    "\2\0\1\311\1\306\3\0\1\307\1\310\5\0\2\312"+
    "\2\313\2\314\2\315\2\316\2\317\2\320\3\0\2\321"+
    "\1\0\3\306\3\0\1\322\1\0\1\323\24\0\5\306"+
    "\1\0\1\307\1\310\2\0\1\311\1\306\3\0\1\307"+
    "\1\310\5\0\2\312\2\313\2\314\2\315\2\316\2\317"+
    "\2\320\3\0\2\321\1\0\3\306\1\0\1\322\1\0"+
    "\1\322\26\0\4\324\1\325\5\0\1\326\1\324\36\0"+
    "\3\324\3\0\1\327\26\0\4\324\1\325\5\0\1\326"+
    "\1\324\36\0\3\324\3\0\1\327\1\0\1\330\24\0"+
    "\4\324\1\325\5\0\1\326\1\324\36\0\3\324\1\0"+
    "\1\327\1\0\1\327\26\0\4\331\1\332\5\0\1\333"+
    "\1\331\36\0\3\331\3\0\1\334\26\0\4\331\1\332"+
    "\5\0\1\333\1\331\36\0\3\331\3\0\1\334\1\0"+
    "\1\335\24\0\4\331\1\332\5\0\1\333\1\331\36\0"+
    "\3\331\1\0\1\334\1\0\1\334\34\0\1\336\10\0"+
    "\1\336\67\0\5\331\5\0\1\333\1\331\36\0\3\331"+
    "\3\0\1\337\26\0\5\331\5\0\1\333\1\331\36\0"+
    "\3\331\3\0\1\337\1\0\1\340\24\0\5\331\5\0"+
    "\1\333\1\331\36\0\3\331\1\0\1\337\1\0\1\337"+
    "\35\0\1\341\10\0\1\341\116\0\2\342\105\0\2\343"+
    "\103\0\2\344\117\0\2\345\73\0\2\346\126\0\2\347"+
    "\100\0\2\350\105\0\2\351\75\0\2\352\111\0\2\352"+
    "\111\0\2\353\112\0\2\354\45\0\1\355\10\0\1\355"+
    "\135\0\2\356\46\0\1\357\12\0\1\357\107\0\2\360"+
    "\6\0\2\361\115\0\3\362\3\0\1\363\60\0\2\364"+
    "\61\0\2\222\2\223\1\0\1\224\1\225\1\0\1\226"+
    "\2\0\1\222\3\0\1\225\3\0\1\226\2\227\2\230"+
    "\17\0\2\231\1\365\1\232\1\233\1\234\1\366\4\365"+
    "\1\367\2\235\2\236\1\0\2\237\6\0\2\240\3\0"+
    "\1\365\1\0\2\223\3\0\1\370\1\371\1\0\1\372"+
    "\2\0\1\223\3\0\1\371\3\0\1\372\2\373\2\374"+
    "\17\0\2\375\1\376\3\0\1\377\4\376\1\u0100\2\u0101"+
    "\2\u0102\1\0\2\u0103\6\0\2\u0104\3\0\1\376\7\0"+
    "\1\u0105\10\0\1\u0105\136\0\2\u0106\72\0\2\u0107\62\0"+
    "\1\u0108\7\0\1\u0108\4\0\2\u0109\113\0\2\u010a\6\0"+
    "\3\u010b\102\0\2\u010c\43\0\2\232\3\0\1\u010d\1\u010e"+
    "\1\0\1\u010f\2\0\1\232\3\0\1\u010e\3\0\1\u010f"+
    "\2\u0110\2\u0111\17\0\2\u0112\1\u0113\3\0\1\u0114\4\u0113"+
    "\1\u0115\2\u0116\2\u0117\1\0\2\u0118\6\0\2\u0119\3\0"+
    "\1\u0113\1\0\2\233\3\0\1\u011a\1\u011b\1\0\1\u011c"+
    "\2\0\1\233\3\0\1\u011b\3\0\1\u011c\2\u011d\2\u011e"+
    "\17\0\2\u011f\1\u0120\3\0\1\u0121\4\u0120\1\u0122\2\u0123"+
    "\2\u0124\1\0\2\u0125\6\0\2\u0126\3\0\1\u0120\1\0"+
    "\2\234\3\0\1\u0127\1\u0128\1\0\1\u0129\2\0\1\234"+
    "\3\0\1\u0128\3\0\1\u0129\2\u012a\2\u012b\17\0\2\u012c"+
    "\1\u012d\3\0\1\u012e\4\u012d\1\u012f\2\u0130\2\u0131\1\0"+
    "\2\u0132\6\0\2\u0133\3\0\1\u012d\25\0\2\u0134\121\0"+
    "\2\u0135\111\0\3\u0136\74\0\2\u0137\51\0\2\222\2\223"+
    "\1\0\1\224\1\225\1\0\1\226\2\0\1\222\3\0"+
    "\1\225\3\0\1\226\2\227\2\230\12\0\2\u010c\3\0"+
    "\2\231\1\0\1\232\1\233\1\234\6\0\2\235\2\236"+
    "\1\0\2\237\6\0\2\240\47\0\2\u0138\54\0\1\u0139"+
    "\7\0\1\u0139\65\0\2\u013a\3\0\1\u013b\5\0\1\u013a"+
    "\101\0\1\u013c\10\0\1\u013c\161\0\2\u013d\13\0\4\u013e"+
    "\1\u013f\1\u0140\5\0\1\u013e\20\0\2\u0141\13\0\1\u0142"+
    "\3\u013e\1\u0143\3\u0142\1\u0144\1\u0142\22\0\1\u0142\1\0"+
    "\4\u0145\1\u0146\1\u0147\5\0\1\u0145\26\0\2\u0148\5\0"+
    "\1\u0149\3\u0145\1\u014a\3\u0149\1\u014b\1\u0149\22\0\1\u0149"+
    "\1\0\4\u014c\1\u014d\1\u014e\5\0\1\u014c\30\0\3\u014f"+
    "\2\0\1\u0150\3\u014c\1\u0151\3\u0150\1\u0152\1\u0150\22\0"+
    "\1\u0150\1\0\4\u0153\1\u0154\1\u0155\2\0\1\u0156\2\0"+
    "\1\u0153\7\0\1\u0156\25\0\1\u0157\3\u0153\1\u0158\3\u0157"+
    "\1\u0159\1\u0157\22\0\1\u0157\1\0\4\u015a\1\u015b\1\u015c"+
    "\1\u015d\4\0\1\u015a\3\0\1\u015d\31\0\1\u015e\3\u015a"+
    "\1\u015f\3\u015e\1\u0160\1\u015e\22\0\1\u015e\1\0\4\u0161"+
    "\1\u0162\1\u0163\5\0\1\u0161\12\0\2\u0164\21\0\1\u0165"+
    "\3\u0161\1\u0166\3\u0165\1\u0167\1\u0165\22\0\1\u0165\1\0"+
    "\4\u0168\1\u0169\1\u016a\5\0\1\u0168\33\0\2\u016b\1\u016c"+
    "\3\u0168\1\u016d\3\u016c\1\u016e\1\u016c\22\0\1\u016c\52\0"+
    "\1\u016f\3\0\6\u016f\22\0\1\u016f\1\0\4\u0170\1\0"+
    "\1\u0171\5\0\1\u0170\35\0\1\u0172\3\u0170\6\u0172\22\0"+
    "\1\u0172\1\0\4\u0170\1\0\1\u0171\5\0\1\u0170\35\0"+
    "\1\u0172\3\u0170\1\u0173\1\u0174\1\u0172\1\u0175\2\u0173\22\0"+
    "\1\u0172\1\0\4\u0170\1\0\1\u0171\5\0\1\u0170\35\0"+
    "\1\u0172\3\u0170\5\u0172\1\u0176\22\0\1\u0172\52\0\1\u0173"+
    "\3\0\5\u0173\1\u0172\22\0\1\u0173\10\0\1\u0177\10\0"+
    "\1\u0177\120\0\2\u0178\115\0\2\u0179\73\0\2\u017a\124\0"+
    "\2\u017b\44\0\1\u017c\10\0\1\u017c\127\0\2\u017d\107\0"+
    "\2\u017e\71\0\2\u017f\2\u0180\103\0\2\u0181\115\0\2\u0178"+
    "\56\0\1\u0182\10\0\1\u0182\66\0\4\277\1\0\1\300"+
    "\1\135\1\0\1\136\2\0\1\277\3\0\1\135\3\0"+
    "\1\136\2\137\2\140\17\0\2\141\1\u0183\3\277\1\u0184"+
    "\4\u0183\1\u0185\2\143\2\144\1\0\2\145\6\0\2\146"+
    "\3\0\1\u0183\7\0\1\u0186\10\0\1\u0186\67\0\4\u0187"+
    "\1\u0188\1\u0189\5\0\1\u0187\12\0\2\u018a\21\0\1\u018b"+
    "\3\u0187\1\u018c\3\u018b\1\u018d\1\u018b\22\0\1\u018b\1\0"+
    "\4\u018e\1\u018f\1\u0190\5\0\1\u018e\2\0\1\u0191\3\0"+
    "\1\u0191\26\0\1\u0192\3\u018e\1\u0193\3\u0192\1\u0194\1\u0192"+
    "\22\0\1\u0192\1\0\4\u0195\1\u0196\1\u0197\5\0\1\u0195"+
    "\35\0\1\u0198\3\u0195\1\u0199\3\u0198\1\u019a\1\u0198\2\0"+
    "\2\u019b\16\0\1\u0198\1\0\4\u019c\1\u019d\1\u019e\5\0"+
    "\1\u019c\20\0\2\u019f\13\0\1\u01a0\3\u019c\1\u01a1\3\u01a0"+
    "\1\u01a2\1\u01a0\22\0\1\u01a0\1\0\4\u01a3\1\u01a4\1\u01a5"+
    "\1\0\1\u01a6\3\0\1\u01a3\4\0\1\u01a6\30\0\1\u01a7"+
    "\3\u01a3\1\u01a8\3\u01a7\1\u01a9\1\u01a7\22\0\1\u01a7\1\0"+
    "\4\306\2\0\1\307\1\310\2\0\1\311\1\306\3\0"+
    "\1\307\1\310\5\0\2\312\2\313\2\314\2\315\2\316"+
    "\2\317\2\320\3\0\2\321\1\0\3\306\66\0\2\u01aa"+
    "\105\0\2\u01ab\62\0\1\u01ac\7\0\1\u01ac\111\0\2\u01ad"+
    "\12\0\2\u01ae\56\0\1\u01af\7\0\1\u01af\2\0\2\u01ad"+
    "\130\0\2\u01b0\66\0\2\u01b1\33\0\2\u01b2\64\0\3\u01b3"+
    "\104\0\3\u01aa\74\0\2\u01b4\4\0\2\u01b5\51\0\1\u01b6"+
    "\7\0\1\u01b7\1\u01b6\2\0\1\u01b7\3\0\2\u01af\12\0"+
    "\2\u01b8\3\u01b9\115\0\1\306\112\0\1\306\25\0\4\324"+
    "\2\0\1\u01ba\1\u01bb\2\0\1\326\1\324\3\0\1\u01ba"+
    "\1\u01bb\5\0\2\u01bc\2\u01bd\2\u01be\2\u01bf\2\u01c0\2\u01c1"+
    "\2\u01c2\3\0\2\u01c3\1\u01c4\3\324\1\u01c5\3\u01c4\1\u01c5"+
    "\1\334\22\0\1\u01c4\1\0\4\324\6\0\1\326\1\324"+
    "\36\0\3\324\43\0\1\u01c6\7\0\1\u01c6\142\0\1\325"+
    "\112\0\1\325\25\0\4\331\6\0\1\333\1\331\36\0"+
    "\3\331\43\0\1\u01c7\7\0\1\u01c7\142\0\1\332\112\0"+
    "\1\332\33\0\1\u01c8\10\0\1\u01c8\32\0\1\54\111\0"+
    "\1\331\112\0\1\331\34\0\1\u01c9\10\0\1\u01c9\31\0"+
    "\1\54\52\0\1\u01ca\3\0\1\u01ca\27\0\1\54\100\0"+
    "\3\u01cb\3\0\1\54\62\0\2\u01cc\22\0\1\54\62\0"+
    "\2\u01cd\22\0\1\54\106\0\1\54\12\0\2\u01cc\30\0"+
    "\1\u01ce\12\0\1\u01ce\26\0\1\54\76\0\2\352\6\0"+
    "\1\54\103\0\2\u01cf\1\0\1\54\70\0\2\u01d0\14\0"+
    "\1\54\100\0\3\u01d1\46\0\1\u01d2\10\0\1\u01d2\43\0"+
    "\2\u01d3\31\0\1\u01d4\10\0\1\u01d4\116\0\2\u01d5\101\0"+
    "\1\u01d6\7\0\1\u01d6\10\0\1\u01d6\1\0\1\u01d6\45\0"+
    "\1\u01d7\10\0\1\u01d7\77\0\1\216\12\0\1\216\117\0"+
    "\2\u01d8\51\0\4\363\1\0\1\u01d9\1\102\2\0\1\103"+
    "\4\363\1\0\1\102\1\0\1\103\4\0\2\104\2\105"+
    "\2\0\2\106\2\0\2\107\2\110\5\0\1\111\3\0"+
    "\1\112\3\111\1\113\1\114\5\0\2\115\2\0\1\u01da"+
    "\1\0\2\116\5\0\1\117\11\0\1\u01db\12\0\1\u01db"+
    "\63\0\2\u01dc\3\0\1\u01dd\5\0\1\u01dc\73\0\2\u01dc"+
    "\3\0\1\u01dd\5\0\1\u01dc\41\0\1\365\3\0\2\365"+
    "\75\0\1\365\3\0\5\365\23\0\1\365\7\0\1\u01de"+
    "\10\0\1\u01de\136\0\2\u01df\72\0\2\u01e0\62\0\1\u01e1"+
    "\7\0\1\u01e1\4\0\2\u01e2\113\0\2\u01e3\6\0\3\u01e4"+
    "\102\0\2\u01e5\43\0\2\376\2\u01dc\1\0\1\u01e6\5\0"+
    "\1\376\73\0\2\376\2\u01dc\1\0\1\u01e6\5\0\1\376"+
    "\41\0\1\376\3\0\2\376\75\0\1\376\3\0\5\376"+
    "\23\0\1\376\25\0\2\u01e7\121\0\2\u01e8\111\0\3\u01e9"+
    "\74\0\2\u01ea\60\0\1\u01eb\10\0\1\u01eb\120\0\2\u01ec"+
    "\115\0\2\u01ed\73\0\2\u01ee\124\0\2\u01ef\44\0\1\u01f0"+
    "\10\0\1\u01f0\127\0\2\u01f1\107\0\2\u01f2\51\0\1\u01f3"+
    "\10\0\1\u01f3\136\0\2\u01f4\72\0\2\u01f5\62\0\1\u01f6"+
    "\7\0\1\u01f6\4\0\2\u01f7\113\0\2\u01f8\6\0\3\u01f9"+
    "\102\0\2\u01fa\43\0\2\u0113\3\0\1\u01fb\5\0\1\u0113"+
    "\36\0\1\u01dc\34\0\2\u0113\3\0\1\u01fb\5\0\1\u0113"+
    "\36\0\1\u01dc\2\0\1\u0113\3\0\2\u0113\75\0\1\u0113"+
    "\3\0\5\u0113\23\0\1\u0113\25\0\2\u01fc\121\0\2\u01fd"+
    "\111\0\3\u01fe\74\0\2\u01ff\57\0\1\u0200\10\0\1\u0200"+
    "\136\0\2\u0201\72\0\2\u0202\62\0\1\u0203\7\0\1\u0203"+
    "\4\0\2\u0204\113\0\2\u0205\6\0\3\u0206\102\0\2\u0207"+
    "\43\0\2\u0120\3\0\1\u0208\5\0\1\u0120\37\0\1\u01dc"+
    "\33\0\2\u0120\3\0\1\u0208\5\0\1\u0120\37\0\1\u01dc"+
    "\1\0\1\u0120\3\0\2\u0120\75\0\1\u0120\3\0\5\u0120"+
    "\23\0\1\u0120\25\0\2\u0209\121\0\2\u020a\111\0\3\u020b"+
    "\74\0\2\u020c\57\0\1\u020d\10\0\1\u020d\136\0\2\u020e"+
    "\72\0\2\u020f\62\0\1\u0210\7\0\1\u0210\4\0\2\u0211"+
    "\113\0\2\u0212\6\0\3\u0213\102\0\2\u0214\43\0\2\u012d"+
    "\3\0\1\u0215\5\0\1\u012d\40\0\1\u01dc\32\0\2\u012d"+
    "\3\0\1\u0215\5\0\1\u012d\40\0\1\u01dc\1\u012d\3\0"+
    "\2\u012d\75\0\1\u012d\3\0\5\u012d\23\0\1\u012d\25\0"+
    "\2\u0216\121\0\2\u0217\111\0\3\u0218\74\0\2\u0219\77\0"+
    "\2\u021a\2\u021b\103\0\2\u021c\115\0\2\u01ec\56\0\1\u021d"+
    "\10\0\1\u021d\112\0\2\363\130\0\2\u021e\36\0\2\u013a"+
    "\3\0\1\u013b\3\0\1\u021f\1\0\1\u013a\5\0\1\u021f"+
    "\6\0\2\105\2\0\2\106\57\0\1\u0220\10\0\1\u0220"+
    "\104\0\1\u0221\77\0\1\u0222\10\0\1\u0222\67\0\4\u013e"+
    "\1\u013f\1\u0140\5\0\1\u013e\35\0\1\u0142\3\u013e\1\u0143"+
    "\3\u0142\1\u0144\1\u0142\22\0\1\u0142\52\0\1\u0142\3\0"+
    "\6\u0142\22\0\1\u0142\7\0\1\u0223\10\0\1\u0223\152\0"+
    "\2\u0224\73\0\1\u0225\3\0\6\u0225\22\0\1\u0225\52\0"+
    "\1\u0225\3\0\1\u0225\1\u0226\1\u0225\1\u0227\2\u0225\22\0"+
    "\1\u0225\52\0\1\u0225\3\0\5\u0225\1\u0228\22\0\1\u0225"+
    "\1\0\4\u0145\1\u0146\1\u0147\5\0\1\u0145\35\0\1\u0149"+
    "\3\u0145\1\u014a\3\u0149\1\u014b\1\u0149\22\0\1\u0149\52\0"+
    "\1\u0149\3\0\6\u0149\22\0\1\u0149\7\0\1\u0229\10\0"+
    "\1\u0229\67\0\4\u0145\1\u0146\1\u0147\5\0\1\u0145\20\0"+
    "\2\u022a\13\0\1\u0149\3\u0145\1\u014a\3\u0149\1\u014b\1\u0149"+
    "\22\0\1\u0149\52\0\1\u022b\3\0\6\u022b\22\0\1\u022b"+
    "\52\0\1\u022b\3\0\1\u022b\1\u022c\1\u022b\1\u022d\2\u022b"+
    "\22\0\1\u022b\52\0\1\u022b\3\0\5\u022b\1\u022e\22\0"+
    "\1\u022b\1\0\4\u014c\1\u014d\1\u014e\5\0\1\u014c\35\0"+
    "\1\u0150\3\u014c\1\u0151\3\u0150\1\u0152\1\u0150\22\0\1\u0150"+
    "\52\0\1\u0150\3\0\6\u0150\22\0\1\u0150\7\0\1\u022f"+
    "\10\0\1\u022f\154\0\2\u0230\71\0\1\u0231\3\0\6\u0231"+
    "\22\0\1\u0231\52\0\1\u0231\3\0\1\u0231\1\u0232\1\u0231"+
    "\1\u0233\2\u0231\22\0\1\u0231\52\0\1\u0231\3\0\5\u0231"+
    "\1\u0234\22\0\1\u0231\1\0\4\u0153\1\u0154\1\u0155\5\0"+
    "\1\u0153\35\0\1\u0157\3\u0153\1\u0158\3\u0157\1\u0159\1\u0157"+
    "\22\0\1\u0157\52\0\1\u0157\3\0\6\u0157\22\0\1\u0157"+
    "\7\0\1\u0235\10\0\1\u0235\131\0\2\u0236\114\0\1\u0237"+
    "\3\0\6\u0237\22\0\1\u0237\52\0\1\u0237\3\0\1\u0237"+
    "\1\u0238\1\u0237\1\u0239\2\u0237\22\0\1\u0237\52\0\1\u0237"+
    "\3\0\5\u0237\1\u023a\22\0\1\u0237\1\0\4\u015a\1\u015b"+
    "\1\u015c\5\0\1\u015a\35\0\1\u015e\3\u015a\1\u015f\3\u015e"+
    "\1\u0160\1\u015e\22\0\1\u015e\52\0\1\u015e\3\0\6\u015e"+
    "\22\0\1\u015e\7\0\1\u023b\10\0\1\u023b\113\0\2\u023c"+
    "\132\0\1\u023d\3\0\6\u023d\22\0\1\u023d\52\0\1\u023d"+
    "\3\0\1\u023d\1\u023e\1\u023d\1\u023f\2\u023d\22\0\1\u023d"+
    "\52\0\1\u023d\3\0\5\u023d\1\u0240\22\0\1\u023d\1\0"+
    "\4\u0161\1\u0162\1\u0163\5\0\1\u0161\35\0\1\u0165\3\u0161"+
    "\1\u0166\3\u0165\1\u0167\1\u0165\22\0\1\u0165\52\0\1\u0165"+
    "\3\0\6\u0165\22\0\1\u0165\7\0\1\u0241\10\0\1\u0241"+
    "\75\0\1\u0242\10\0\1\u0242\140\0\1\u0243\3\0\6\u0243"+
    "\22\0\1\u0243\52\0\1\u0243\3\0\1\u0243\1\u0244\1\u0243"+
    "\1\u0245\2\u0243\22\0\1\u0243\52\0\1\u0243\3\0\5\u0243"+
    "\1\u0246\22\0\1\u0243\1\0\4\u0168\1\u0169\1\u016a\5\0"+
    "\1\u0168\35\0\1\u016c\3\u0168\1\u016d\3\u016c\1\u016e\1\u016c"+
    "\22\0\1\u016c\52\0\1\u016c\3\0\6\u016c\22\0\1\u016c"+
    "\7\0\1\u0247\10\0\1\u0247\76\0\1\u0248\10\0\1\u0248"+
    "\137\0\1\u0249\3\0\6\u0249\22\0\1\u0249\52\0\1\u0249"+
    "\3\0\1\u0249\1\u024a\1\u0249\1\u024b\2\u0249\22\0\1\u0249"+
    "\52\0\1\u0249\3\0\5\u0249\1\u024c\22\0\1\u0249\52\0"+
    "\1\u0172\3\0\6\u0172\22\0\1\u0172\1\0\4\u0170\1\u024d"+
    "\1\u0171\5\0\1\u0170\35\0\1\u024e\3\u0170\1\u024f\3\u024e"+
    "\1\u0250\1\u024e\22\0\1\u024e\7\0\1\u0251\10\0\1\u0251"+
    "\67\0\4\u0170\1\0\1\u0171\5\0\1\u0170\36\0\3\u0170"+
    "\110\0\3\u016f\103\0\1\u016f\3\0\2\u016f\34\0\1\u0252"+
    "\12\0\1\u0252\63\0\4\u0253\1\u0254\1\u0255\5\0\1\u0253"+
    "\20\0\2\u0256\13\0\1\u0257\3\u0253\1\u0258\3\u0257\1\u0259"+
    "\1\u0257\22\0\1\u0257\1\0\4\u0253\1\u0254\1\u0255\5\0"+
    "\1\u0253\26\0\2\u0178\5\0\1\u0257\3\u0253\1\u0258\3\u0257"+
    "\1\u0259\1\u0257\22\0\1\u0257\1\0\4\u0253\1\u0254\1\u0255"+
    "\5\0\1\u0253\30\0\3\u025a\2\0\1\u0257\3\u0253\1\u0258"+
    "\3\u0257\1\u0259\1\u0257\22\0\1\u0257\1\0\4\u0253\1\u0254"+
    "\1\u0255\2\0\1\u025b\2\0\1\u0253\7\0\1\u025b\25\0"+
    "\1\u0257\3\u0253\1\u0258\3\u0257\1\u0259\1\u0257\22\0\1\u0257"+
    "\1\0\4\u0253\1\u0254\1\u0255\1\u025c\4\0\1\u0253\3\0"+
    "\1\u025c\31\0\1\u0257\3\u0253\1\u0258\3\u0257\1\u0259\1\u0257"+
    "\22\0\1\u0257\1\0\4\u0253\1\u0254\1\u0255\5\0\1\u0253"+
    "\12\0\2\u025d\21\0\1\u0257\3\u0253\1\u0258\3\u0257\1\u0259"+
    "\1\u0257\22\0\1\u0257\1\0\4\u0253\1\u0254\1\u0255\5\0"+
    "\1\u0253\33\0\2\u025e\1\u0257\3\u0253\1\u0258\3\u0257\1\u0259"+
    "\1\u0257\22\0\1\u0257\1\0\4\u0253\1\u0254\1\u0255\5\0"+
    "\1\u0253\12\0\2\u025f\21\0\1\u0257\3\u0253\1\u0258\3\u0257"+
    "\1\u0259\1\u0257\22\0\1\u0257\1\0\4\u0253\1\u0254\1\u0255"+
    "\5\0\1\u0253\2\0\1\u0260\3\0\1\u0260\26\0\1\u0257"+
    "\3\u0253\1\u0258\3\u0257\1\u0259\1\u0257\22\0\1\u0257\1\0"+
    "\4\u0253\1\u0254\1\u0255\5\0\1\u0253\35\0\1\u0257\3\u0253"+
    "\1\u0258\3\u0257\1\u0259\1\u0257\2\0\2\u025f\16\0\1\u0257"+
    "\1\0\4\u0253\1\u0254\1\u0255\1\0\1\u0261\3\0\1\u0253"+
    "\4\0\1\u0261\30\0\1\u0257\3\u0253\1\u0258\3\u0257\1\u0259"+
    "\1\u0257\22\0\1\u0257\1\0\4\u0170\1\0\1\u0171\5\0"+
    "\1\u0170\36\0\3\u0170\1\u0183\3\0\2\u0183\75\0\1\u0183"+
    "\3\0\5\u0183\23\0\1\u0183\10\0\1\u0262\10\0\1\u0262"+
    "\66\0\4\u0187\1\u0188\1\u0189\5\0\1\u0187\35\0\1\u018b"+
    "\3\u0187\1\u018c\3\u018b\1\u018d\1\u018b\22\0\1\u018b\52\0"+
    "\1\u018b\3\0\6\u018b\22\0\1\u018b\7\0\1\u0263\10\0"+
    "\1\u0263\133\0\3\u0264\111\0\1\u0265\3\0\6\u0265\22\0"+
    "\1\u0265\52\0\1\u0265\3\0\1\u0265\1\u0266\1\u0265\1\u0267"+
    "\2\u0265\22\0\1\u0265\52\0\1\u0265\3\0\5\u0265\1\u0268"+
    "\22\0\1\u0265\1\0\4\u018e\1\u018f\1\u0190\5\0\1\u018e"+
    "\35\0\1\u0192\3\u018e\1\u0193\3\u0192\1\u0194\1\u0192\22\0"+
    "\1\u0192\52\0\1\u0192\3\0\6\u0192\22\0\1\u0192\7\0"+
    "\1\u0269\10\0\1\u0269\136\0\2\u018e\107\0\1\u026a\3\0"+
    "\6\u026a\22\0\1\u026a\52\0\1\u026a\3\0\1\u026a\1\u026b"+
    "\1\u026a\1\u026c\2\u026a\22\0\1\u026a\52\0\1\u026a\3\0"+
    "\5\u026a\1\u026d\22\0\1\u026a\1\0\4\u0195\1\u0196\1\u0197"+
    "\5\0\1\u0195\35\0\1\u0198\3\u0195\1\u0199\3\u0198\1\u019a"+
    "\1\u0198\22\0\1\u0198\52\0\1\u0198\3\0\6\u0198\22\0"+
    "\1\u0198\7\0\1\u026e\10\0\1\u026e\140\0\1\u026f\3\0"+
    "\6\u026f\22\0\1\u026f\52\0\1\u026f\3\0\1\u026f\1\u0270"+
    "\1\u026f\1\u0271\2\u026f\22\0\1\u026f\52\0\1\u026f\3\0"+
    "\5\u026f\1\u0272\22\0\1\u026f\45\0\3\u0273\40\0\4\u019c"+
    "\1\u019d\1\u019e\5\0\1\u019c\35\0\1\u01a0\3\u019c\1\u01a1"+
    "\3\u01a0\1\u01a2\1\u01a0\22\0\1\u01a0\52\0\1\u01a0\3\0"+
    "\6\u01a0\22\0\1\u01a0\7\0\1\u0274\10\0\1\u0274\152\0"+
    "\2\u0275\73\0\1\u0276\3\0\6\u0276\22\0\1\u0276\52\0"+
    "\1\u0276\3\0\1\u0276\1\u0277\1\u0276\1\u0278\2\u0276\22\0"+
    "\1\u0276\52\0\1\u0276\3\0\5\u0276\1\u0279\22\0\1\u0276"+
    "\1\0\4\u01a3\1\u01a4\1\u01a5\5\0\1\u01a3\35\0\1\u01a7"+
    "\3\u01a3\1\u01a8\3\u01a7\1\u01a9\1\u01a7\22\0\1\u01a7\52\0"+
    "\1\u01a7\3\0\6\u01a7\22\0\1\u01a7\7\0\1\u027a\10\0"+
    "\1\u027a\117\0\2\u027b\126\0\1\u027c\3\0\6\u027c\22\0"+
    "\1\u027c\52\0\1\u027c\3\0\1\u027c\1\u027d\1\u027c\1\u027e"+
    "\2\u027c\22\0\1\u027c\52\0\1\u027c\3\0\5\u027c\1\u027f"+
    "\22\0\1\u027c\27\0\2\331\157\0\2\331\15\0\1\u0280"+
    "\12\0\1\u0280\146\0\2\331\107\0\2\331\44\0\2\331"+
    "\67\0\1\331\10\0\1\331\76\0\1\u0281\10\0\1\u0281"+
    "\132\0\3\u0282\130\0\2\331\25\0\1\331\12\0\1\331"+
    "\117\0\2\u01b4\11\0\2\331\64\0\2\u0283\107\0\2\u0284"+
    "\65\0\1\u0285\12\0\1\u0285\107\0\2\u0286\2\u0287\35\0"+
    "\2\u0288\54\0\2\u0289\105\0\2\u028a\75\0\2\u028b\12\0"+
    "\2\u028c\56\0\1\u028d\7\0\1\u028d\2\0\2\u028b\130\0"+
    "\2\u028e\66\0\2\u028f\33\0\2\u0290\64\0\3\u0291\104\0"+
    "\3\u0289\74\0\2\u0292\4\0\2\u0293\51\0\1\u0294\7\0"+
    "\1\u0295\1\u0294\2\0\1\u0295\3\0\2\u028d\12\0\2\u0296"+
    "\3\u0297\40\0\4\331\6\0\1\333\1\331\36\0\3\331"+
    "\5\0\1\332\24\0\4\331\6\0\1\333\1\331\36\0"+
    "\3\331\1\332\4\0\1\332\34\0\1\u0298\12\0\1\u0298"+
    "\73\0\1\u0299\12\0\1\u0299\107\0\2\u01cc\111\0\2\u01c8"+
    "\124\0\2\54\123\0\2\u029a\64\0\3\u01ca\46\0\1\u01ca"+
    "\10\0\1\u01ca\131\0\2\u01ca\52\0\1\u029b\10\0\1\u029b"+
    "\151\0\2\u01cf\122\0\2\u029c\45\0\2\u029d\105\0\2\u029e"+
    "\132\0\2\u029f\26\0\1\u02a0\10\0\1\u02a0\67\0\4\u01d6"+
    "\1\0\1\u02a1\3\0\1\u021f\4\u01d6\3\0\1\u021f\4\0"+
    "\2\u02a2\2\105\2\0\2\106\2\0\2\u02a3\7\0\1\111"+
    "\3\0\1\112\3\111\1\113\1\114\5\0\2\u02a4\2\0"+
    "\1\u02a5\1\0\2\116\5\0\1\117\25\0\2\u02a6\67\0"+
    "\1\u02a7\10\0\1\u02a7\75\0\1\u02a8\10\0\1\u02a8\154\0"+
    "\2\u02a9\103\0\2\u02aa\22\0\2\u01dc\2\0\1\u02ab\1\u01dd"+
    "\5\0\1\u01dc\35\0\1\u02ac\3\0\1\u02ad\3\u02ac\1\u02ae"+
    "\1\u02ac\22\0\1\u02ac\7\0\1\u02af\10\0\1\u02af\76\0"+
    "\1\u02b0\10\0\1\u02b0\120\0\2\u02b1\115\0\2\u02b2\73\0"+
    "\2\u02b3\124\0\2\u02b4\44\0\1\u02b5\10\0\1\u02b5\127\0"+
    "\2\u02b6\107\0\2\u02b7\51\0\1\u02b8\10\0\1\u02b8\115\0"+
    "\2\u02b9\2\u02ba\103\0\2\u02bb\115\0\2\u02b1\56\0\1\u02bc"+
    "\10\0\1\u02bc\76\0\1\u02bd\12\0\1\u02bd\63\0\2\u01dc"+
    "\2\0\1\u02ab\1\u01dd\5\0\1\u01dc\20\0\2\u02be\13\0"+
    "\1\u02ac\1\u01dc\2\0\1\u02ad\3\u02ac\1\u02ae\1\u02ac\22\0"+
    "\1\u02ac\1\0\2\u01dc\2\0\1\u02ab\1\u01dd\5\0\1\u01dc"+
    "\26\0\2\u01ec\5\0\1\u02ac\1\u01dc\2\0\1\u02ad\3\u02ac"+
    "\1\u02ae\1\u02ac\22\0\1\u02ac\1\0\2\u01dc\2\0\1\u02ab"+
    "\1\u01dd\5\0\1\u01dc\30\0\3\u02bf\2\0\1\u02ac\1\u01dc"+
    "\2\0\1\u02ad\3\u02ac\1\u02ae\1\u02ac\22\0\1\u02ac\1\0"+
    "\2\u01dc\2\0\1\u02ab\1\u01dd\2\0\1\u02c0\2\0\1\u01dc"+
    "\7\0\1\u02c0\25\0\1\u02ac\1\u01dc\2\0\1\u02ad\3\u02ac"+
    "\1\u02ae\1\u02ac\22\0\1\u02ac\1\0\2\u01dc\2\0\1\u02ab"+
    "\1\u01dd\1\u02c1\4\0\1\u01dc\3\0\1\u02c1\31\0\1\u02ac"+
    "\1\u01dc\2\0\1\u02ad\3\u02ac\1\u02ae\1\u02ac\22\0\1\u02ac"+
    "\1\0\2\u01dc\2\0\1\u02ab\1\u01dd\5\0\1\u01dc\12\0"+
    "\2\u02c2\21\0\1\u02ac\1\u01dc\2\0\1\u02ad\3\u02ac\1\u02ae"+
    "\1\u02ac\22\0\1\u02ac\1\0\2\u01dc\2\0\1\u02ab\1\u01dd"+
    "\5\0\1\u01dc\33\0\2\u02c3\1\u02ac\1\u01dc\2\0\1\u02ad"+
    "\3\u02ac\1\u02ae\1\u02ac\22\0\1\u02ac\10\0\1\u02c4\10\0"+
    "\1\u02c4\120\0\2\u02c5\115\0\2\u02c6\73\0\2\u02c7\124\0"+
    "\2\u02c8\44\0\1\u02c9\10\0\1\u02c9\127\0\2\u02ca\107\0"+
    "\2\u02cb\51\0\1\u02cc\10\0\1\u02cc\115\0\2\u02cd\2\u02ce"+
    "\103\0\2\u02cf\115\0\2\u02c5\56\0\1\u02d0\10\0\1\u02d0"+
    "\75\0\1\u02d1\10\0\1\u02d1\120\0\2\u02d2\115\0\2\u02d3"+
    "\73\0\2\u02d4\124\0\2\u02d5\44\0\1\u02d6\10\0\1\u02d6"+
    "\127\0\2\u02d7\107\0\2\u02d8\51\0\1\u02d9\10\0\1\u02d9"+
    "\115\0\2\u02da\2\u02db\103\0\2\u02dc\115\0\2\u02d2\56\0"+
    "\1\u02dd\10\0\1\u02dd\75\0\1\u02de\10\0\1\u02de\120\0"+
    "\2\u02df\115\0\2\u02e0\73\0\2\u02e1\124\0\2\u02e2\44\0"+
    "\1\u02e3\10\0\1\u02e3\127\0\2\u02e4\107\0\2\u02e5\51\0"+
    "\1\u02e6\10\0\1\u02e6\115\0\2\u02e7\2\u02e8\103\0\2\u02e9"+
    "\115\0\2\u02df\56\0\1\u02ea\10\0\1\u02ea\66\0\2\u01dc"+
    "\2\0\1\u02ab\1\u01dd\5\0\1\u01dc\12\0\2\u02eb\21\0"+
    "\1\u02ac\1\u01dc\2\0\1\u02ad\3\u02ac\1\u02ae\1\u02ac\22\0"+
    "\1\u02ac\1\0\2\u01dc\2\0\1\u02ab\1\u01dd\5\0\1\u01dc"+
    "\2\0\1\u02ec\3\0\1\u02ec\26\0\1\u02ac\1\u01dc\2\0"+
    "\1\u02ad\3\u02ac\1\u02ae\1\u02ac\22\0\1\u02ac\1\0\2\u01dc"+
    "\2\0\1\u02ab\1\u01dd\5\0\1\u01dc\35\0\1\u02ac\1\u01dc"+
    "\2\0\1\u02ad\3\u02ac\1\u02ae\1\u02ac\2\0\2\u02eb\16\0"+
    "\1\u02ac\1\0\2\u01dc\2\0\1\u02ab\1\u01dd\1\0\1\u02ed"+
    "\3\0\1\u01dc\4\0\1\u02ed\30\0\1\u02ac\1\u01dc\2\0"+
    "\1\u02ad\3\u02ac\1\u02ae\1\u02ac\22\0\1\u02ac\11\0\1\u02ee"+
    "\12\0\1\u02ee\113\0\2\213\64\0\1\u02ef\10\0\1\u02ef"+
    "\71\0\1\u02f0\2\0\2\u02f0\1\0\1\u02f0\10\0\2\u02f0"+
    "\1\0\1\u02f0\1\0\1\u02f0\1\0\1\u02f0\1\0\1\u02f0"+
    "\1\0\1\u02f0\1\0\1\u02f0\1\0\1\u02f0\1\0\1\u02f0"+
    "\2\0\1\u02f0\1\0\1\u02f0\13\0\1\u02f0\1\0\2\u02f0"+
    "\1\0\1\u02f0\1\0\1\u02f0\3\0\1\u02f0\1\0\1\u02f0"+
    "\1\0\1\u02f0\12\0\1\u02f1\10\0\1\u02f1\75\0\1\u02f2"+
    "\10\0\1\u02f2\144\0\3\u0142\103\0\1\u0142\3\0\2\u0142"+
    "\33\0\1\u02f3\10\0\1\u02f3\151\0\2\u02f4\100\0\3\u0149"+
    "\103\0\1\u0149\3\0\2\u0149\33\0\1\u02f5\10\0\1\u02f5"+
    "\122\0\2\u014c\127\0\3\u0150\103\0\1\u0150\3\0\2\u0150"+
    "\33\0\1\u02f6\10\0\1\u02f6\135\0\2\u0153\114\0\3\u0157"+
    "\103\0\1\u0157\3\0\2\u0157\33\0\1\u02f7\10\0\1\u02f7"+
    "\132\0\3\u02f8\116\0\3\u015e\103\0\1\u015e\3\0\2\u015e"+
    "\33\0\1\u02f9\10\0\1\u02f9\135\0\2\u0161\114\0\3\u0165"+
    "\103\0\1\u0165\3\0\2\u0165\33\0\1\u02fa\10\0\1\u02fa"+
    "\116\0\2\u02fb\133\0\3\u016c\103\0\1\u016c\3\0\2\u016c"+
    "\75\0\1\u024e\3\0\6\u024e\22\0\1\u024e\52\0\1\u02fc"+
    "\3\0\6\u02fc\22\0\1\u02fc\52\0\1\u02fc\3\0\1\u02fc"+
    "\1\u02fd\1\u02fc\1\u02fe\2\u02fc\22\0\1\u02fc\52\0\1\u02fc"+
    "\3\0\5\u02fc\1\u02ff\22\0\1\u02fc\10\0\1\u0300\10\0"+
    "\1\u0300\77\0\1\u0301\7\0\1\u0301\65\0\4\u0253\1\u0254"+
    "\1\u0255\5\0\1\u0253\35\0\1\u0257\3\u0253\1\u0258\3\u0257"+
    "\1\u0259\1\u0257\22\0\1\u0257\52\0\1\u0257\3\0\6\u0257"+
    "\22\0\1\u0257\7\0\1\u0302\10\0\1\u0302\152\0\2\u025e"+
    "\73\0\1\u0303\3\0\6\u0303\22\0\1\u0303\52\0\1\u0303"+
    "\3\0\1\u0303\1\u0304\1\u0303\1\u0305\2\u0303\22\0\1\u0303"+
    "\52\0\1\u0303\3\0\5\u0303\1\u0306\22\0\1\u0303\66\0"+
    "\2\u0307\62\0\2\u0260\67\0\2\u025f\67\0\1\u0260\10\0"+
    "\1\u0260\76\0\1\u0308\10\0\1\u0308\132\0\3\u0260\107\0"+
    "\2\u0253\66\0\2\u025c\65\0\1\u0309\12\0\1\u0309\72\0"+
    "\1\u030a\10\0\1\u030a\135\0\2\u0187\114\0\3\u018b\103\0"+
    "\1\u018b\3\0\2\u018b\33\0\1\u030b\10\0\1\u030b\144\0"+
    "\3\u0192\103\0\1\u0192\3\0\2\u0192\33\0\1\u030c\10\0"+
    "\1\u030c\144\0\3\u0198\103\0\1\u0198\3\0\2\u0198\73\0"+
    "\2\u0195\45\0\1\u030d\10\0\1\u030d\75\0\1\u030e\10\0"+
    "\1\u030e\144\0\3\u01a0\103\0\1\u01a0\3\0\2\u01a0\33\0"+
    "\1\u030f\10\0\1\u030f\112\0\2\u0310\137\0\3\u01a7\103\0"+
    "\1\u01a7\3\0\2\u01a7\33\0\1\u0311\10\0\1\u0311\135\0"+
    "\2\u0312\12\0\2\u0313\52\0\2\u0314\115\0\2\317\71\0"+
    "\2\u01ad\130\0\2\u0315\44\0\1\u0316\10\0\1\u0316\10\0"+
    "\2\u0317\103\0\2\u0284\105\0\2\u0318\105\0\2\332\157\0"+
    "\2\332\70\0\2\332\107\0\2\332\44\0\2\332\67\0"+
    "\1\332\10\0\1\332\76\0\1\u0319\10\0\1\u0319\132\0"+
    "\3\u031a\130\0\2\332\25\0\1\332\12\0\1\332\117\0"+
    "\2\u0292\11\0\2\332\64\0\2\u031b\107\0\2\u031c\65\0"+
    "\1\u031d\12\0\1\u031d\107\0\2\u031e\2\u031f\35\0\2\u0320"+
    "\27\0\1\u0321\10\0\1\u0321\75\0\1\u0322\10\0\1\u0322"+
    "\122\0\2\54\101\0\2\u029a\121\0\3\u0323\46\0\1\u0324"+
    "\10\0\1\u0324\154\0\2\u0325\64\0\3\u0326\3\0\1\u0327"+
    "\103\0\2\363\44\0\1\u0328\10\0\1\u0328\133\0\3\u0329"+
    "\130\0\2\u032a\41\0\2\u032b\146\0\2\u032c\62\0\2\357"+
    "\61\0\1\u0138\3\0\1\u0138\73\0\1\u032d\10\0\1\u032d"+
    "\160\0\2\u032e\47\0\2\u032f\122\0\1\u02ac\3\0\6\u02ac"+
    "\22\0\1\u02ac\52\0\1\u0330\3\0\6\u0330\22\0\1\u0330"+
    "\52\0\1\u0330\3\0\1\u0330\1\u0331\1\u0330\1\u0332\2\u0330"+
    "\22\0\1\u0330\52\0\1\u0330\3\0\5\u0330\1\u0333\22\0"+
    "\1\u0330\10\0\1\u0334\10\0\1\u0334\76\0\1\u0335\12\0"+
    "\1\u0335\63\0\2\376\2\u01dc\1\0\1\u01e6\5\0\1\376"+
    "\20\0\2\u0336\14\0\1\376\34\0\2\376\2\u01dc\1\0"+
    "\1\u01e6\5\0\1\376\26\0\2\u02b1\6\0\1\376\34\0"+
    "\2\376\2\u01dc\1\0\1\u01e6\5\0\1\376\30\0\3\u0337"+
    "\3\0\1\376\34\0\2\376\2\u01dc\1\0\1\u01e6\2\0"+
    "\1\u0338\2\0\1\376\7\0\1\u0338\26\0\1\376\34\0"+
    "\2\376\2\u01dc\1\0\1\u01e6\1\u0339\4\0\1\376\3\0"+
    "\1\u0339\32\0\1\376\34\0\2\376\2\u01dc\1\0\1\u01e6"+
    "\5\0\1\376\12\0\2\u033a\22\0\1\376\34\0\2\376"+
    "\2\u01dc\1\0\1\u01e6\5\0\1\376\33\0\2\u033b\1\0"+
    "\1\376\43\0\1\u033c\10\0\1\u033c\66\0\2\376\2\u01dc"+
    "\1\0\1\u01e6\5\0\1\376\12\0\2\u033d\22\0\1\376"+
    "\34\0\2\376\2\u01dc\1\0\1\u01e6\5\0\1\376\2\0"+
    "\1\u033e\3\0\1\u033e\27\0\1\376\34\0\2\376\2\u01dc"+
    "\1\0\1\u01e6\5\0\1\376\36\0\1\376\12\0\2\u033d"+
    "\20\0\2\376\2\u01dc\1\0\1\u01e6\1\0\1\u033f\3\0"+
    "\1\376\4\0\1\u033f\31\0\1\376\45\0\1\u0340\7\0"+
    "\1\u0340\150\0\2\u02c3\107\0\2\u0341\62\0\2\u02ec\67\0"+
    "\2\u02eb\67\0\1\u02ec\10\0\1\u02ec\76\0\1\u0342\10\0"+
    "\1\u0342\76\0\1\u0343\12\0\1\u0343\63\0\2\u0113\3\0"+
    "\1\u01fb\5\0\1\u0113\20\0\2\u0344\14\0\1\u0345\34\0"+
    "\2\u0113\3\0\1\u01fb\5\0\1\u0113\26\0\2\u02c5\6\0"+
    "\1\u0345\34\0\2\u0113\3\0\1\u01fb\5\0\1\u0113\30\0"+
    "\3\u0346\3\0\1\u0345\34\0\2\u0113\3\0\1\u01fb\2\0"+
    "\1\u0347\2\0\1\u0113\7\0\1\u0347\26\0\1\u0345\34\0"+
    "\2\u0113\3\0\1\u01fb\1\u0348\4\0\1\u0113\3\0\1\u0348"+
    "\32\0\1\u0345\34\0\2\u0113\3\0\1\u01fb\5\0\1\u0113"+
    "\12\0\2\u0349\22\0\1\u0345\34\0\2\u0113\3\0\1\u01fb"+
    "\5\0\1\u0113\33\0\2\u034a\1\0\1\u0345\43\0\1\u034b"+
    "\10\0\1\u034b\66\0\2\u0113\3\0\1\u01fb\5\0\1\u0113"+
    "\12\0\2\u034c\22\0\1\u0345\34\0\2\u0113\3\0\1\u01fb"+
    "\5\0\1\u0113\2\0\1\u034d\3\0\1\u034d\27\0\1\u0345"+
    "\34\0\2\u0113\3\0\1\u01fb\5\0\1\u0113\36\0\1\u0345"+
    "\12\0\2\u034c\20\0\2\u0113\3\0\1\u01fb\1\0\1\u034e"+
    "\3\0\1\u0113\4\0\1\u034e\31\0\1\u0345\44\0\1\u034f"+
    "\12\0\1\u034f\63\0\2\u0120\3\0\1\u0208\5\0\1\u0120"+
    "\20\0\2\u0350\14\0\1\u0120\1\u01dc\33\0\2\u0120\3\0"+
    "\1\u0208\5\0\1\u0120\26\0\2\u02d2\6\0\1\u0120\1\u01dc"+
    "\33\0\2\u0120\3\0\1\u0208\5\0\1\u0120\30\0\3\u0351"+
    "\3\0\1\u0120\1\u01dc\33\0\2\u0120\3\0\1\u0208\2\0"+
    "\1\u0352\2\0\1\u0120\7\0\1\u0352\26\0\1\u0120\1\u01dc"+
    "\33\0\2\u0120\3\0\1\u0208\1\u0353\4\0\1\u0120\3\0"+
    "\1\u0353\32\0\1\u0120\1\u01dc\33\0\2\u0120\3\0\1\u0208"+
    "\5\0\1\u0120\12\0\2\u0354\22\0\1\u0120\1\u01dc\33\0"+
    "\2\u0120\3\0\1\u0208\5\0\1\u0120\33\0\2\u0355\1\0"+
    "\1\u0120\1\u01dc\42\0\1\u0356\10\0\1\u0356\66\0\2\u0120"+
    "\3\0\1\u0208\5\0\1\u0120\12\0\2\u0357\22\0\1\u0120"+
    "\1\u01dc\33\0\2\u0120\3\0\1\u0208\5\0\1\u0120\2\0"+
    "\1\u0358\3\0\1\u0358\27\0\1\u0120\1\u01dc\33\0\2\u0120"+
    "\3\0\1\u0208\5\0\1\u0120\36\0\1\u0120\1\u01dc\11\0"+
    "\2\u0357\20\0\2\u0120\3\0\1\u0208\1\0\1\u0359\3\0"+
    "\1\u0120\4\0\1\u0359\31\0\1\u0120\1\u01dc\43\0\1\u035a"+
    "\12\0\1\u035a\63\0\2\u012d\3\0\1\u0215\5\0\1\u012d"+
    "\20\0\2\u035b\14\0\1\u012d\1\0\1\u01dc\32\0\2\u012d"+
    "\3\0\1\u0215\5\0\1\u012d\26\0\2\u02df\6\0\1\u012d"+
    "\1\0\1\u01dc\32\0\2\u012d\3\0\1\u0215\5\0\1\u012d"+
    "\30\0\3\u035c\3\0\1\u012d\1\0\1\u01dc\32\0\2\u012d"+
    "\3\0\1\u0215\2\0\1\u035d\2\0\1\u012d\7\0\1\u035d"+
    "\26\0\1\u012d\1\0\1\u01dc\32\0\2\u012d\3\0\1\u0215"+
    "\1\u035e\4\0\1\u012d\3\0\1\u035e\32\0\1\u012d\1\0"+
    "\1\u01dc\32\0\2\u012d\3\0\1\u0215\5\0\1\u012d\12\0"+
    "\2\u035f\22\0\1\u012d\1\0\1\u01dc\32\0\2\u012d\3\0"+
    "\1\u0215\5\0\1\u012d\33\0\2\u0360\1\0\1\u012d\1\0"+
    "\1\u01dc\41\0\1\u0361\10\0\1\u0361\66\0\2\u012d\3\0"+
    "\1\u0215\5\0\1\u012d\12\0\2\u0362\22\0\1\u012d\1\0"+
    "\1\u01dc\32\0\2\u012d\3\0\1\u0215\5\0\1\u012d\2\0"+
    "\1\u0363\3\0\1\u0363\27\0\1\u012d\1\0\1\u01dc\32\0"+
    "\2\u012d\3\0\1\u0215\5\0\1\u012d\36\0\1\u012d\1\0"+
    "\1\u01dc\10\0\2\u0362\20\0\2\u012d\3\0\1\u0215\1\0"+
    "\1\u0364\3\0\1\u012d\4\0\1\u0364\31\0\1\u012d\1\0"+
    "\1\u01dc\76\0\3\u02ec\107\0\2\u01dc\66\0\2\u02c1\121\0"+
    "\3\u0365\50\0\1\u0366\12\0\1\u0366\66\0\1\u02f0\2\0"+
    "\2\u02f0\1\0\1\u02f0\3\0\1\u0367\4\0\2\u02f0\1\0"+
    "\1\u02f0\1\0\1\u02f0\1\0\1\u02f0\1\0\1\u02f0\1\0"+
    "\1\u02f0\1\0\1\u02f0\1\0\1\u02f0\1\0\1\u02f0\2\0"+
    "\1\u02f0\1\0\1\u02f0\13\0\1\u02f0\1\0\2\u02f0\1\0"+
    "\1\u02f0\1\0\1\u02f0\3\0\1\u02f0\1\0\1\u02f0\1\0"+
    "\1\u02f0\13\0\1\u0368\12\0\1\u0368\113\0\2\u0369\65\0"+
    "\1\u036a\12\0\1\u036a\72\0\1\u036b\10\0\1\u036b\76\0"+
    "\1\u036c\12\0\1\u036c\73\0\1\u036d\12\0\1\u036d\73\0"+
    "\1\u036e\12\0\1\u036e\132\0\2\u015a\46\0\1\u036f\12\0"+
    "\1\u036f\73\0\1\u0370\12\0\1\u0370\117\0\2\u0168\127\0"+
    "\3\u024e\103\0\1\u024e\3\0\2\u024e\34\0\1\u0371\12\0"+
    "\1\u0371\75\0\1\133\103\0\1\u0372\10\0\1\u0372\144\0"+
    "\3\u0257\103\0\1\u0257\3\0\2\u0257\60\0\2\u0253\101\0"+
    "\2\u0307\66\0\1\u0373\7\0\1\u0373\75\0\1\u0374\12\0"+
    "\1\u0374\73\0\1\u0375\12\0\1\u0375\73\0\1\u0376\12\0"+
    "\1\u0376\73\0\1\u0377\12\0\1\u0377\113\0\2\u0378\65\0"+
    "\1\u0379\12\0\1\u0379\127\0\3\u037a\46\0\1\u037b\10\0"+
    "\1\u037b\131\0\2\u037c\77\0\2\u037d\62\0\1\u01af\7\0"+
    "\1\u01af\113\0\2\u01af\65\0\1\307\10\0\1\307\76\0"+
    "\1\u037e\10\0\1\u037e\126\0\2\u01ae\114\0\2\u037f\12\0"+
    "\2\u0380\52\0\2\u0381\115\0\2\u01c1\71\0\2\u028b\130\0"+
    "\2\u0382\44\0\1\u0383\10\0\1\u0383\10\0\2\u0384\103\0"+
    "\2\u031c\105\0\2\u0385\65\0\1\u0386\10\0\1\u0386\75\0"+
    "\1\u0387\10\0\1\u0387\125\0\2\u0388\105\0\2\u0389\75\0"+
    "\2\u01d7\115\0\2\u038a\47\0\4\u0327\1\0\1\u038b\3\0"+
    "\1\u038c\4\u0327\3\0\1\u038c\4\0\2\u038d\10\0\2\u038e"+
    "\7\0\1\u038f\3\0\1\u0390\3\u038f\1\u0391\1\u0392\5\0"+
    "\2\u0393\2\0\1\u0394\10\0\1\u0395\10\0\1\u0396\10\0"+
    "\1\u0396\135\0\2\u0397\102\0\3\u0398\3\0\1\u01d6\76\0"+
    "\2\u0399\135\0\2\u039a\23\0\1\u039b\12\0\1\u039b\71\0"+
    "\1\u039c\10\0\1\u039c\77\0\1\u039d\12\0\1\u039d\62\0"+
    "\1\u039e\1\u039f\50\u039e\1\0\3\u039e\6\0\22\u039e\1\0"+
    "\1\u039e\1\u039f\50\u039e\1\0\3\u039e\1\0\3\u02ac\2\0"+
    "\22\u039e\1\0\1\u039e\1\u039f\50\u039e\1\u02ac\3\u039e\6\u02ac"+
    "\22\u039e\1\u02ac\1\u039e\1\u039f\50\u039e\1\0\3\u039e\1\u02ac"+
    "\3\0\2\u02ac\22\u039e\12\0\1\u03a0\12\0\1\u03a0\74\0"+
    "\1\u03a1\7\0\1\u03a1\150\0\2\u033b\107\0\2\u03a2\62\0"+
    "\2\u033e\67\0\2\u033d\67\0\1\u033e\10\0\1\u033e\76\0"+
    "\1\u03a3\10\0\1\u03a3\76\0\1\u03a4\12\0\1\u03a4\127\0"+
    "\3\u033e\107\0\2\376\66\0\2\u0339\67\0\1\222\130\0"+
    "\2\u01dc\101\0\2\u0341\66\0\1\u03a5\7\0\1\u03a5\150\0"+
    "\2\u034a\22\0\2\u0345\2\0\1\u02ab\1\u03a6\5\0\1\u0345"+
    "\35\0\1\u02ac\1\u01dc\2\0\1\u02ad\3\u02ac\1\u02ae\1\u02ac"+
    "\22\0\1\u02ac\66\0\2\u03a7\62\0\2\u034d\67\0\2\u034c"+
    "\67\0\1\u034d\10\0\1\u034d\76\0\1\u03a8\10\0\1\u03a8"+
    "\76\0\1\u03a9\12\0\1\u03a9\127\0\3\u034d\107\0\2\u0113"+
    "\66\0\2\u0348\66\0\1\u03aa\7\0\1\u03aa\150\0\2\u0355"+
    "\107\0\2\u03ab\62\0\2\u0358\67\0\2\u0357\67\0\1\u0358"+
    "\10\0\1\u0358\76\0\1\u03ac\10\0\1\u03ac\76\0\1\u03ad"+
    "\12\0\1\u03ad\127\0\3\u0358\107\0\2\u0120\66\0\2\u0353"+
    "\66\0\1\u03ae\7\0\1\u03ae\150\0\2\u0360\107\0\2\u03af"+
    "\62\0\2\u0363\67\0\2\u0362\67\0\1\u0363\10\0\1\u0363"+
    "\76\0\1\u03b0\10\0\1\u03b0\76\0\1\u03b1\12\0\1\u03b1"+
    "\127\0\3\u0363\107\0\2\u012d\66\0\2\u035e\117\0\2\u03b2"+
    "\54\0\1\u03b3\7\0\1\u03b3\67\0\2\u0367\2\0\2\u0367"+
    "\1\0\1\u0367\3\0\1\u03b4\4\0\2\u0367\1\0\1\u0367"+
    "\1\0\1\u0367\1\0\1\u0367\1\0\1\u0367\1\0\1\u0367"+
    "\1\0\1\u0367\1\0\1\u0367\1\0\1\u0367\2\0\1\u0367"+
    "\1\0\2\u0367\3\0\6\u0367\1\0\1\u0367\1\0\2\u0367"+
    "\1\0\1\u0367\1\0\1\u0367\3\0\1\u0367\1\0\1\u0367"+
    "\1\0\1\u0367\1\0\1\u0367\12\0\1\u03b5\7\0\1\u03b5"+
    "\121\0\2\u013e\62\0\1\u03b6\7\0\1\u03b6\115\0\2\u03b7"+
    "\66\0\1\u03b8\7\0\1\u03b8\76\0\1\u03b9\7\0\1\u03b9"+
    "\76\0\1\u03ba\7\0\1\u03ba\76\0\1\u03bb\7\0\1\u03bb"+
    "\76\0\1\u03bc\7\0\1\u03bc\76\0\1\u03bd\7\0\1\u03bd"+
    "\75\0\1\u03be\12\0\1\u03be\75\0\1\277\105\0\1\u03bf"+
    "\7\0\1\u03bf\76\0\1\u03c0\7\0\1\u03c0\76\0\1\u03c1"+
    "\7\0\1\u03c1\76\0\1\u03c2\7\0\1\u03c2\121\0\2\u019c"+
    "\62\0\1\u03c3\7\0\1\u03c3\134\0\2\u01a3\43\0\1\306"+
    "\143\0\2\u03c4\75\0\2\314\2\0\2\316\2\0\2\u03c5"+
    "\52\0\1\310\10\0\1\310\130\0\2\u03c6\77\0\2\u03c7"+
    "\62\0\1\u028d\7\0\1\u028d\113\0\2\u028d\65\0\1\u01ba"+
    "\10\0\1\u01ba\76\0\1\u03c8\10\0\1\u03c8\126\0\2\u028c"+
    "\52\0\1\324\106\0\1\331\125\0\2\u03c9\125\0\3\u01d7"+
    "\64\0\2\u03ca\67\0\1\u03cb\10\0\1\u03cb\127\0\2\214"+
    "\111\0\3\u03cc\130\0\2\u03cd\15\0\2\u03ce\2\u03cf\1\0"+
    "\1\u03d0\1\u03d1\1\0\1\u03d2\2\0\1\u03ce\3\0\1\u03d1"+
    "\3\0\1\u03d2\2\u03d3\2\u03d4\17\0\2\u03d5\1\0\1\u03d6"+
    "\1\u03d7\1\u03d8\6\0\2\u03d9\2\u03da\1\0\2\u03db\6\0"+
    "\2\u03dc\5\0\2\u03ce\2\u03cf\1\0\1\u03d0\1\u03d1\1\0"+
    "\1\u03d2\2\0\1\u03ce\3\0\1\u03d1\3\0\1\u03d2\2\u03d3"+
    "\2\u03d4\17\0\1\u03dd\1\u03d5\1\u038f\1\u03d6\1\u03d7\1\u03d8"+
    "\6\u038f\2\u03d9\2\u03da\1\0\2\u03db\6\0\2\u03dc\2\0"+
    "\2\u038f\1\0\2\u03ce\2\u03cf\1\0\1\u03d0\1\u03d1\1\0"+
    "\1\u03d2\2\0\1\u03ce\3\0\1\u03d1\3\0\1\u03d2\2\u03d3"+
    "\2\u03d4\17\0\2\u03d5\1\u038f\1\u03d6\1\u03d7\1\u03d8\6\u038f"+
    "\2\u03d9\2\u03da\1\0\2\u03db\6\0\2\u03dc\3\0\1\u038f"+
    "\52\0\1\u038f\3\0\5\u038f\23\0\1\u038f\25\0\2\u03de"+
    "\146\0\2\u03df\20\0\2\u03ce\2\u03cf\1\0\1\u03d0\1\u03d1"+
    "\1\0\1\u03d2\2\0\1\u03ce\3\0\1\u03d1\3\0\1\u03d2"+
    "\2\u03d3\2\u03d4\17\0\2\u03d5\1\0\1\u03d6\1\u03d7\1\u03d8"+
    "\1\u038f\4\0\1\u038f\2\u03d9\2\u03da\1\0\2\u03db\6\0"+
    "\2\u03dc\15\0\1\u03e0\12\0\1\u03e0\113\0\2\u03e1\111\0"+
    "\2\u03e2\75\0\2\u01d6\67\0\1\u03e3\10\0\1\u03e3\100\0"+
    "\1\u03e4\7\0\1\u03e4\102\0\1\u03e5\101\0\1\u03e6\12\0"+
    "\1\u03e6\64\0\1\u039e\116\0\1\u03e7\7\0\1\u03e7\77\0"+
    "\1\223\130\0\2\376\101\0\2\u03a2\66\0\1\u03e8\7\0"+
    "\1\u03e8\77\0\1\232\102\0\1\u03e9\10\0\1\u03e9\123\0"+
    "\2\u0113\101\0\2\u03a7\66\0\1\u03ea\7\0\1\u03ea\77\0"+
    "\1\233\130\0\2\u0120\101\0\2\u03ab\66\0\1\u03eb\7\0"+
    "\1\u03eb\77\0\1\234\130\0\2\u012d\101\0\2\u03af\66\0"+
    "\1\u03ec\7\0\1\u03ec\111\0\2\u03ed\73\0\1\u013a\145\0"+
    "\1\u03ee\3\0\6\u03ee\22\0\1\u03ee\13\0\1\u013e\106\0"+
    "\1\u0145\130\0\2\u0145\63\0\1\u014c\106\0\1\u0153\106\0"+
    "\1\u015a\106\0\1\u0161\106\0\1\u0168\106\0\1\u0170\105\0"+
    "\1\u03ef\7\0\1\u03ef\77\0\1\u0187\106\0\1\u018e\106\0"+
    "\1\u0195\106\0\1\u019c\106\0\1\u01a3\143\0\2\331\100\0"+
    "\2\u03f0\105\0\2\u03f1\75\0\2\u01be\2\0\2\u01c0\2\0"+
    "\2\u03f2\52\0\1\u01bb\10\0\1\u01bb\130\0\2\u03f3\105\0"+
    "\2\u03f4\52\0\1\u03f5\10\0\1\u03f5\135\0\2\u03f6\102\0"+
    "\3\u03f7\3\0\1\u0327\34\0\2\u03ce\2\u03cf\1\0\1\u03d0"+
    "\1\u03d1\1\0\1\u03d2\2\0\1\u03ce\3\0\1\u03d1\3\0"+
    "\1\u03d2\2\u03d3\2\u03d4\17\0\2\u03d5\1\u03f8\1\u03d6\1\u03d7"+
    "\1\u03d8\1\u03f9\4\u03f8\1\u03fa\2\u03d9\2\u03da\1\0\2\u03db"+
    "\6\0\2\u03dc\3\0\1\u03f8\1\0\2\u03cf\3\0\1\u03fb"+
    "\1\u03fc\1\0\1\u03fd\2\0\1\u03cf\3\0\1\u03fc\3\0"+
    "\1\u03fd\2\u03fe\2\u03ff\17\0\2\u0400\1\u0401\3\0\1\u0402"+
    "\4\u0401\1\u0403\2\u0404\2\u0405\1\0\2\u0406\6\0\2\u0407"+
    "\3\0\1\u0401\7\0\1\u0408\10\0\1\u0408\136\0\2\u0409"+
    "\72\0\2\u040a\62\0\1\u040b\7\0\1\u040b\4\0\2\u040c"+
    "\113\0\2\u040d\6\0\3\u040e\102\0\2\u040f\43\0\2\u03d6"+
    "\3\0\1\u0410\1\u0411\1\0\1\u0412\2\0\1\u03d6\3\0"+
    "\1\u0411\3\0\1\u0412\2\u0413\2\u0414\17\0\2\u0415\1\u0416"+
    "\3\0\1\u0417\4\u0416\1\u0418\2\u0419\2\u041a\1\0\2\u041b"+
    "\6\0\2\u041c\3\0\1\u0416\1\0\2\u03d7\3\0\1\u041d"+
    "\1\u041e\1\0\1\u041f\2\0\1\u03d7\3\0\1\u041e\3\0"+
    "\1\u041f\2\u0420\2\u0421\17\0\2\u0422\1\u0423\3\0\1\u0424"+
    "\4\u0423\1\u0425\2\u0426\2\u0427\1\0\2\u0428\6\0\2\u0429"+
    "\3\0\1\u0423\1\0\2\u03d8\3\0\1\u042a\1\u042b\1\0"+
    "\1\u042c\2\0\1\u03d8\3\0\1\u042b\3\0\1\u042c\2\u042d"+
    "\2\u042e\17\0\2\u042f\1\u0430\3\0\1\u0431\4\u0430\1\u0432"+
    "\2\u0433\2\u0434\1\0\2\u0435\6\0\2\u0436\3\0\1\u0430"+
    "\25\0\2\u0437\121\0\2\u0438\111\0\3\u0439\74\0\2\u043a"+
    "\51\0\2\u03ce\2\u03cf\1\0\1\u03d0\1\u03d1\1\0\1\u03d2"+
    "\2\0\1\u03ce\3\0\1\u03d1\3\0\1\u03d2\2\u03d3\2\u03d4"+
    "\12\0\2\u040f\3\0\2\u03d5\1\0\1\u03d6\1\u03d7\1\u03d8"+
    "\6\0\2\u03d9\2\u03da\1\0\2\u03db\6\0\2\u03dc\47\0"+
    "\2\u043b\135\0\2\u043c\24\0\1\u043d\7\0\1\u043d\73\0"+
    "\1\u043e\10\0\1\u043e\75\0\1\u043f\10\0\1\u043f\104\0"+
    "\1\u0440\103\0\1\363\104\0\1\u0441\12\0\1\u0441\107\0"+
    "\1\u0442\7\0\1\u0442\10\0\1\u0442\1\0\1\u0442\51\0"+
    "\1\u01dc\106\0\1\376\103\0\1\u0443\10\0\1\u0443\100\0"+
    "\1\u0113\106\0\1\u0120\106\0\1\u012d\136\0\2\u03e6\114\0"+
    "\1\u03ee\3\0\6\u03ee\12\0\1\u0444\7\0\1\u03ee\13\0"+
    "\1\u0253\130\0\2\u01b4\120\0\2\332\100\0\2\u0445\67\0"+
    "\1\u0446\7\0\1\u0446\10\0\1\u0446\1\0\1\u0446\63\0"+
    "\1\u0327\7\0\1\u0327\10\0\1\u0327\1\0\1\u0327\47\0"+
    "\1\u0447\12\0\1\u0447\113\0\2\u0448\111\0\2\u0449\51\0"+
    "\2\u044a\3\0\1\u044b\5\0\1\u044a\73\0\2\u044a\3\0"+
    "\1\u044b\5\0\1\u044a\41\0\1\u03f8\3\0\2\u03f8\75\0"+
    "\1\u03f8\3\0\5\u03f8\23\0\1\u03f8\7\0\1\u044c\10\0"+
    "\1\u044c\136\0\2\u044d\72\0\2\u044e\62\0\1\u044f\7\0"+
    "\1\u044f\4\0\2\u0450\113\0\2\u0451\6\0\3\u0452\102\0"+
    "\2\u0453\43\0\2\u0401\2\u044a\1\0\1\u0454\5\0\1\u0401"+
    "\73\0\2\u0401\2\u044a\1\0\1\u0454\5\0\1\u0401\41\0"+
    "\1\u0401\3\0\2\u0401\75\0\1\u0401\3\0\5\u0401\23\0"+
    "\1\u0401\25\0\2\u0455\121\0\2\u0456\111\0\3\u0457\74\0"+
    "\2\u0458\60\0\1\u0459\10\0\1\u0459\120\0\2\u045a\115\0"+
    "\2\u045b\73\0\2\u045c\124\0\2\u045d\44\0\1\u045e\10\0"+
    "\1\u045e\127\0\2\u045f\107\0\2\u0460\51\0\1\u0461\10\0"+
    "\1\u0461\136\0\2\u0462\72\0\2\u0463\62\0\1\u0464\7\0"+
    "\1\u0464\4\0\2\u0465\113\0\2\u0466\6\0\3\u0467\102\0"+
    "\2\u0468\43\0\2\u0416\3\0\1\u0469\5\0\1\u0416\36\0"+
    "\1\u044a\34\0\2\u0416\3\0\1\u0469\5\0\1\u0416\36\0"+
    "\1\u044a\2\0\1\u0416\3\0\2\u0416\75\0\1\u0416\3\0"+
    "\5\u0416\23\0\1\u0416\25\0\2\u046a\121\0\2\u046b\111\0"+
    "\3\u046c\74\0\2\u046d\57\0\1\u046e\10\0\1\u046e\136\0"+
    "\2\u046f\72\0\2\u0470\62\0\1\u0471\7\0\1\u0471\4\0"+
    "\2\u0472\113\0\2\u0473\6\0\3\u0474\102\0\2\u0475\43\0"+
    "\2\u0423\3\0\1\u0476\5\0\1\u0423\37\0\1\u044a\33\0"+
    "\2\u0423\3\0\1\u0476\5\0\1\u0423\37\0\1\u044a\1\0"+
    "\1\u0423\3\0\2\u0423\75\0\1\u0423\3\0\5\u0423\23\0"+
    "\1\u0423\25\0\2\u0477\121\0\2\u0478\111\0\3\u0479\74\0"+
    "\2\u047a\57\0\1\u047b\10\0\1\u047b\136\0\2\u047c\72\0"+
    "\2\u047d\62\0\1\u047e\7\0\1\u047e\4\0\2\u047f\113\0"+
    "\2\u0480\6\0\3\u0481\102\0\2\u0482\43\0\2\u0430\3\0"+
    "\1\u0483\5\0\1\u0430\40\0\1\u044a\32\0\2\u0430\3\0"+
    "\1\u0483\5\0\1\u0430\40\0\1\u044a\1\u0430\3\0\2\u0430"+
    "\75\0\1\u0430\3\0\5\u0430\23\0\1\u0430\25\0\2\u0484"+
    "\121\0\2\u0485\111\0\3\u0486\74\0\2\u0487\77\0\2\u0488"+
    "\2\u0489\103\0\2\u048a\115\0\2\u045a\56\0\1\u048b\10\0"+
    "\1\u048b\112\0\2\u0327\67\0\1\u048c\10\0\1\u048c\101\0"+
    "\1\u01d6\143\0\2\u01d6\54\0\1\u0399\3\0\1\u0399\74\0"+
    "\1\u048d\12\0\1\u048d\125\0\2\u048e\43\0\4\u048f\1\0"+
    "\1\u0490\4\0\4\u048f\10\0\2\u0491\10\0\2\u0492\2\110"+
    "\5\0\1\u0493\3\0\1\u0494\3\u0493\1\u0495\1\u0496\5\0"+
    "\2\u0497\2\0\1\u0498\10\0\1\u0499\11\0\1\u049a\12\0"+
    "\1\u049a\117\0\2\u0292\51\0\4\u0446\1\0\1\u049b\1\102"+
    "\3\0\4\u0446\1\0\1\102\6\0\2\u049c\10\0\2\u049d"+
    "\7\0\1\u049e\3\0\1\u049f\3\u049e\1\u04a0\1\u04a1\5\0"+
    "\2\u04a2\2\0\1\u04a3\10\0\1\u04a4\12\0\1\u04a5\7\0"+
    "\1\u04a5\73\0\1\u04a6\10\0\1\u04a6\75\0\1\u04a7\10\0"+
    "\1\u04a7\67\0\2\u044a\2\0\1\u04a8\1\u044b\5\0\1\u044a"+
    "\35\0\1\u04a9\3\0\1\u04aa\3\u04a9\1\u04ab\1\u04a9\22\0"+
    "\1\u04a9\7\0\1\u04ac\10\0\1\u04ac\76\0\1\u04ad\10\0"+
    "\1\u04ad\120\0\2\u04ae\115\0\2\u04af\73\0\2\u04b0\124\0"+
    "\2\u04b1\44\0\1\u04b2\10\0\1\u04b2\127\0\2\u04b3\107\0"+
    "\2\u04b4\51\0\1\u04b5\10\0\1\u04b5\115\0\2\u04b6\2\u04b7"+
    "\103\0\2\u04b8\115\0\2\u04ae\56\0\1\u04b9\10\0\1\u04b9"+
    "\76\0\1\u04ba\12\0\1\u04ba\63\0\2\u044a\2\0\1\u04a8"+
    "\1\u044b\5\0\1\u044a\20\0\2\u04bb\13\0\1\u04a9\1\u044a"+
    "\2\0\1\u04aa\3\u04a9\1\u04ab\1\u04a9\22\0\1\u04a9\1\0"+
    "\2\u044a\2\0\1\u04a8\1\u044b\5\0\1\u044a\26\0\2\u045a"+
    "\5\0\1\u04a9\1\u044a\2\0\1\u04aa\3\u04a9\1\u04ab\1\u04a9"+
    "\22\0\1\u04a9\1\0\2\u044a\2\0\1\u04a8\1\u044b\5\0"+
    "\1\u044a\30\0\3\u04bc\2\0\1\u04a9\1\u044a\2\0\1\u04aa"+
    "\3\u04a9\1\u04ab\1\u04a9\22\0\1\u04a9\1\0\2\u044a\2\0"+
    "\1\u04a8\1\u044b\2\0\1\u04bd\2\0\1\u044a\7\0\1\u04bd"+
    "\25\0\1\u04a9\1\u044a\2\0\1\u04aa\3\u04a9\1\u04ab\1\u04a9"+
    "\22\0\1\u04a9\1\0\2\u044a\2\0\1\u04a8\1\u044b\1\u04be"+
    "\4\0\1\u044a\3\0\1\u04be\31\0\1\u04a9\1\u044a\2\0"+
    "\1\u04aa\3\u04a9\1\u04ab\1\u04a9\22\0\1\u04a9\1\0\2\u044a"+
    "\2\0\1\u04a8\1\u044b\5\0\1\u044a\12\0\2\u04bf\21\0"+
    "\1\u04a9\1\u044a\2\0\1\u04aa\3\u04a9\1\u04ab\1\u04a9\22\0"+
    "\1\u04a9\1\0\2\u044a\2\0\1\u04a8\1\u044b\5\0\1\u044a"+
    "\33\0\2\u04c0\1\u04a9\1\u044a\2\0\1\u04aa\3\u04a9\1\u04ab"+
    "\1\u04a9\22\0\1\u04a9\10\0\1\u04c1\10\0\1\u04c1\120\0"+
    "\2\u04c2\115\0\2\u04c3\73\0\2\u04c4\124\0\2\u04c5\44\0"+
    "\1\u04c6\10\0\1\u04c6\127\0\2\u04c7\107\0\2\u04c8\51\0"+
    "\1\u04c9\10\0\1\u04c9\115\0\2\u04ca\2\u04cb\103\0\2\u04cc"+
    "\115\0\2\u04c2\56\0\1\u04cd\10\0\1\u04cd\75\0\1\u04ce"+
    "\10\0\1\u04ce\120\0\2\u04cf\115\0\2\u04d0\73\0\2\u04d1"+
    "\124\0\2\u04d2\44\0\1\u04d3\10\0\1\u04d3\127\0\2\u04d4"+
    "\107\0\2\u04d5\51\0\1\u04d6\10\0\1\u04d6\115\0\2\u04d7"+
    "\2\u04d8\103\0\2\u04d9\115\0\2\u04cf\56\0\1\u04da\10\0"+
    "\1\u04da\75\0\1\u04db\10\0\1\u04db\120\0\2\u04dc\115\0"+
    "\2\u04dd\73\0\2\u04de\124\0\2\u04df\44\0\1\u04e0\10\0"+
    "\1\u04e0\127\0\2\u04e1\107\0\2\u04e2\51\0\1\u04e3\10\0"+
    "\1\u04e3\115\0\2\u04e4\2\u04e5\103\0\2\u04e6\115\0\2\u04dc"+
    "\56\0\1\u04e7\10\0\1\u04e7\66\0\2\u044a\2\0\1\u04a8"+
    "\1\u044b\5\0\1\u044a\12\0\2\u04e8\21\0\1\u04a9\1\u044a"+
    "\2\0\1\u04aa\3\u04a9\1\u04ab\1\u04a9\22\0\1\u04a9\1\0"+
    "\2\u044a\2\0\1\u04a8\1\u044b\5\0\1\u044a\2\0\1\u04e9"+
    "\3\0\1\u04e9\26\0\1\u04a9\1\u044a\2\0\1\u04aa\3\u04a9"+
    "\1\u04ab\1\u04a9\22\0\1\u04a9\1\0\2\u044a\2\0\1\u04a8"+
    "\1\u044b\5\0\1\u044a\35\0\1\u04a9\1\u044a\2\0\1\u04aa"+
    "\3\u04a9\1\u04ab\1\u04a9\2\0\2\u04e8\16\0\1\u04a9\1\0"+
    "\2\u044a\2\0\1\u04a8\1\u044b\1\0\1\u04ea\3\0\1\u044a"+
    "\4\0\1\u04ea\30\0\1\u04a9\1\u044a\2\0\1\u04aa\3\u04a9"+
    "\1\u04ab\1\u04a9\22\0\1\u04a9\16\0\1\u04eb\133\0\2\u04ec"+
    "\54\0\1\u04ed\7\0\1\u04ed\65\0\4\u048f\1\0\1\u0490"+
    "\4\0\4\u048f\10\0\2\u0491\6\0\2\u04ee\2\u0492\2\110"+
    "\5\0\1\u0493\3\0\1\u0494\3\u0493\1\u0495\1\u0496\5\0"+
    "\2\u0497\2\0\1\u0498\10\0\1\u0499\7\0\1\u04ef\10\0"+
    "\1\u04ef\133\0\3\u04f0\130\0\2\u04f1\15\0\2\u04f2\2\u04f3"+
    "\1\0\1\u04f4\1\u04f5\1\0\1\u04f6\2\0\1\u04f2\3\0"+
    "\1\u04f5\3\0\1\u04f6\2\u04f7\2\u04f8\17\0\2\u04f9\1\0"+
    "\1\u04fa\1\u04fb\1\u04fc\6\0\2\u04fd\2\u04fe\1\0\2\u04ff"+
    "\6\0\2\u0500\5\0\2\u04f2\2\u04f3\1\0\1\u04f4\1\u04f5"+
    "\1\0\1\u04f6\2\0\1\u04f2\3\0\1\u04f5\3\0\1\u04f6"+
    "\2\u04f7\2\u04f8\17\0\1\u0501\1\u04f9\1\u0493\1\u04fa\1\u04fb"+
    "\1\u04fc\6\u0493\2\u04fd\2\u04fe\1\0\2\u04ff\6\0\2\u0500"+
    "\2\0\2\u0493\1\0\2\u04f2\2\u04f3\1\0\1\u04f4\1\u04f5"+
    "\1\0\1\u04f6\2\0\1\u04f2\3\0\1\u04f5\3\0\1\u04f6"+
    "\2\u04f7\2\u04f8\17\0\2\u04f9\1\u0493\1\u04fa\1\u04fb\1\u04fc"+
    "\6\u0493\2\u04fd\2\u04fe\1\0\2\u04ff\6\0\2\u0500\3\0"+
    "\1\u0493\52\0\1\u0493\3\0\5\u0493\23\0\1\u0493\25\0"+
    "\2\u0502\6\0\2\243\136\0\2\u0503\20\0\2\u04f2\2\u04f3"+
    "\1\0\1\u04f4\1\u04f5\1\0\1\u04f6\2\0\1\u04f2\3\0"+
    "\1\u04f5\3\0\1\u04f6\2\u04f7\2\u04f8\17\0\2\u04f9\1\0"+
    "\1\u04fa\1\u04fb\1\u04fc\1\u0493\4\0\1\u0493\2\u04fd\2\u04fe"+
    "\1\0\2\u04ff\6\0\2\u0500\16\0\1\u0504\7\0\1\u0504"+
    "\73\0\1\u0505\10\0\1\u0505\133\0\3\u0506\130\0\2\u0507"+
    "\15\0\2\u0508\2\u0509\1\0\1\u050a\1\u050b\1\0\1\u050c"+
    "\2\0\1\u0508\3\0\1\u050b\3\0\1\u050c\2\u050d\2\u050e"+
    "\17\0\2\u050f\1\0\1\u0510\1\u0511\1\u0512\6\0\2\u0513"+
    "\2\u0514\1\0\2\u0515\6\0\2\u0516\5\0\2\u0508\2\u0509"+
    "\1\0\1\u050a\1\u050b\1\0\1\u050c\2\0\1\u0508\3\0"+
    "\1\u050b\3\0\1\u050c\2\u050d\2\u050e\17\0\1\u0517\1\u050f"+
    "\1\u049e\1\u0510\1\u0511\1\u0512\6\u049e\2\u0513\2\u0514\1\0"+
    "\2\u0515\6\0\2\u0516\2\0\2\u049e\1\0\2\u0508\2\u0509"+
    "\1\0\1\u050a\1\u050b\1\0\1\u050c\2\0\1\u0508\3\0"+
    "\1\u050b\3\0\1\u050c\2\u050d\2\u050e\17\0\2\u050f\1\u049e"+
    "\1\u0510\1\u0511\1\u0512\6\u049e\2\u0513\2\u0514\1\0\2\u0515"+
    "\6\0\2\u0516\3\0\1\u049e\52\0\1\u049e\3\0\5\u049e"+
    "\23\0\1\u049e\25\0\2\u0518\146\0\2\u0519\20\0\2\u0508"+
    "\2\u0509\1\0\1\u050a\1\u050b\1\0\1\u050c\2\0\1\u0508"+
    "\3\0\1\u050b\3\0\1\u050c\2\u050d\2\u050e\17\0\2\u050f"+
    "\1\0\1\u0510\1\u0511\1\u0512\1\u049e\4\0\1\u049e\2\u0513"+
    "\2\u0514\1\0\2\u0515\6\0\2\u0516\17\0\1\u0327\143\0"+
    "\2\u0327\54\0\1\u043b\3\0\1\u043b\135\0\1\u04a9\3\0"+
    "\6\u04a9\22\0\1\u04a9\52\0\1\u051a\3\0\6\u051a\22\0"+
    "\1\u051a\52\0\1\u051a\3\0\1\u051a\1\u051b\1\u051a\1\u051c"+
    "\2\u051a\22\0\1\u051a\52\0\1\u051a\3\0\5\u051a\1\u051d"+
    "\22\0\1\u051a\10\0\1\u051e\10\0\1\u051e\76\0\1\u051f"+
    "\12\0\1\u051f\63\0\2\u0401\2\u044a\1\0\1\u0454\5\0"+
    "\1\u0401\20\0\2\u0520\14\0\1\u0401\34\0\2\u0401\2\u044a"+
    "\1\0\1\u0454\5\0\1\u0401\26\0\2\u04ae\6\0\1\u0401"+
    "\34\0\2\u0401\2\u044a\1\0\1\u0454\5\0\1\u0401\30\0"+
    "\3\u0521\3\0\1\u0401\34\0\2\u0401\2\u044a\1\0\1\u0454"+
    "\2\0\1\u0522\2\0\1\u0401\7\0\1\u0522\26\0\1\u0401"+
    "\34\0\2\u0401\2\u044a\1\0\1\u0454\1\u0523\4\0\1\u0401"+
    "\3\0\1\u0523\32\0\1\u0401\34\0\2\u0401\2\u044a\1\0"+
    "\1\u0454\5\0\1\u0401\12\0\2\u0524\22\0\1\u0401\34\0"+
    "\2\u0401\2\u044a\1\0\1\u0454\5\0\1\u0401\33\0\2\u0525"+
    "\1\0\1\u0401\43\0\1\u0526\10\0\1\u0526\66\0\2\u0401"+
    "\2\u044a\1\0\1\u0454\5\0\1\u0401\12\0\2\u0527\22\0"+
    "\1\u0401\34\0\2\u0401\2\u044a\1\0\1\u0454\5\0\1\u0401"+
    "\2\0\1\u0528\3\0\1\u0528\27\0\1\u0401\34\0\2\u0401"+
    "\2\u044a\1\0\1\u0454\5\0\1\u0401\36\0\1\u0401\12\0"+
    "\2\u0527\20\0\2\u0401\2\u044a\1\0\1\u0454\1\0\1\u0529"+
    "\3\0\1\u0401\4\0\1\u0529\31\0\1\u0401\45\0\1\u052a"+
    "\7\0\1\u052a\150\0\2\u04c0\107\0\2\u052b\62\0\2\u04e9"+
    "\67\0\2\u04e8\67\0\1\u04e9\10\0\1\u04e9\76\0\1\u052c"+
    "\10\0\1\u052c\76\0\1\u052d\12\0\1\u052d\63\0\2\u0416"+
    "\3\0\1\u0469\5\0\1\u0416\20\0\2\u052e\14\0\1\u052f"+
    "\34\0\2\u0416\3\0\1\u0469\5\0\1\u0416\26\0\2\u04c2"+
    "\6\0\1\u052f\34\0\2\u0416\3\0\1\u0469\5\0\1\u0416"+
    "\30\0\3\u0530\3\0\1\u052f\34\0\2\u0416\3\0\1\u0469"+
    "\2\0\1\u0531\2\0\1\u0416\7\0\1\u0531\26\0\1\u052f"+
    "\34\0\2\u0416\3\0\1\u0469\1\u0532\4\0\1\u0416\3\0"+
    "\1\u0532\32\0\1\u052f\34\0\2\u0416\3\0\1\u0469\5\0"+
    "\1\u0416\12\0\2\u0533\22\0\1\u052f\34\0\2\u0416\3\0"+
    "\1\u0469\5\0\1\u0416\33\0\2\u0534\1\0\1\u052f\43\0"+
    "\1\u0535\10\0\1\u0535\66\0\2\u0416\3\0\1\u0469\5\0"+
    "\1\u0416\12\0\2\u0536\22\0\1\u052f\34\0\2\u0416\3\0"+
    "\1\u0469\5\0\1\u0416\2\0\1\u0537\3\0\1\u0537\27\0"+
    "\1\u052f\34\0\2\u0416\3\0\1\u0469\5\0\1\u0416\36\0"+
    "\1\u052f\12\0\2\u0536\20\0\2\u0416\3\0\1\u0469\1\0"+
    "\1\u0538\3\0\1\u0416\4\0\1\u0538\31\0\1\u052f\44\0"+
    "\1\u0539\12\0\1\u0539\63\0\2\u0423\3\0\1\u0476\5\0"+
    "\1\u0423\20\0\2\u053a\14\0\1\u0423\1\u044a\33\0\2\u0423"+
    "\3\0\1\u0476\5\0\1\u0423\26\0\2\u04cf\6\0\1\u0423"+
    "\1\u044a\33\0\2\u0423\3\0\1\u0476\5\0\1\u0423\30\0"+
    "\3\u053b\3\0\1\u0423\1\u044a\33\0\2\u0423\3\0\1\u0476"+
    "\2\0\1\u053c\2\0\1\u0423\7\0\1\u053c\26\0\1\u0423"+
    "\1\u044a\33\0\2\u0423\3\0\1\u0476\1\u053d\4\0\1\u0423"+
    "\3\0\1\u053d\32\0\1\u0423\1\u044a\33\0\2\u0423\3\0"+
    "\1\u0476\5\0\1\u0423\12\0\2\u053e\22\0\1\u0423\1\u044a"+
    "\33\0\2\u0423\3\0\1\u0476\5\0\1\u0423\33\0\2\u053f"+
    "\1\0\1\u0423\1\u044a\42\0\1\u0540\10\0\1\u0540\66\0"+
    "\2\u0423\3\0\1\u0476\5\0\1\u0423\12\0\2\u0541\22\0"+
    "\1\u0423\1\u044a\33\0\2\u0423\3\0\1\u0476\5\0\1\u0423"+
    "\2\0\1\u0542\3\0\1\u0542\27\0\1\u0423\1\u044a\33\0"+
    "\2\u0423\3\0\1\u0476\5\0\1\u0423\36\0\1\u0423\1\u044a"+
    "\11\0\2\u0541\20\0\2\u0423\3\0\1\u0476\1\0\1\u0543"+
    "\3\0\1\u0423\4\0\1\u0543\31\0\1\u0423\1\u044a\43\0"+
    "\1\u0544\12\0\1\u0544\63\0\2\u0430\3\0\1\u0483\5\0"+
    "\1\u0430\20\0\2\u0545\14\0\1\u0430\1\0\1\u044a\32\0"+
    "\2\u0430\3\0\1\u0483\5\0\1\u0430\26\0\2\u04dc\6\0"+
    "\1\u0430\1\0\1\u044a\32\0\2\u0430\3\0\1\u0483\5\0"+
    "\1\u0430\30\0\3\u0546\3\0\1\u0430\1\0\1\u044a\32\0"+
    "\2\u0430\3\0\1\u0483\2\0\1\u0547\2\0\1\u0430\7\0"+
    "\1\u0547\26\0\1\u0430\1\0\1\u044a\32\0\2\u0430\3\0"+
    "\1\u0483\1\u0548\4\0\1\u0430\3\0\1\u0548\32\0\1\u0430"+
    "\1\0\1\u044a\32\0\2\u0430\3\0\1\u0483\5\0\1\u0430"+
    "\12\0\2\u0549\22\0\1\u0430\1\0\1\u044a\32\0\2\u0430"+
    "\3\0\1\u0483\5\0\1\u0430\33\0\2\u054a\1\0\1\u0430"+
    "\1\0\1\u044a\41\0\1\u054b\10\0\1\u054b\66\0\2\u0430"+
    "\3\0\1\u0483\5\0\1\u0430\12\0\2\u054c\22\0\1\u0430"+
    "\1\0\1\u044a\32\0\2\u0430\3\0\1\u0483\5\0\1\u0430"+
    "\2\0\1\u054d\3\0\1\u054d\27\0\1\u0430\1\0\1\u044a"+
    "\32\0\2\u0430\3\0\1\u0483\5\0\1\u0430\36\0\1\u0430"+
    "\1\0\1\u044a\10\0\2\u054c\20\0\2\u0430\3\0\1\u0483"+
    "\1\0\1\u054e\3\0\1\u0430\4\0\1\u054e\31\0\1\u0430"+
    "\1\0\1\u044a\76\0\3\u04e9\107\0\2\u044a\66\0\2\u04be"+
    "\65\0\1\u054f\12\0\1\u054f\74\0\1\u0550\7\0\1\u0550"+
    "\167\0\2\u0551\27\0\2\u0552\70\0\1\u0553\10\0\1\u0553"+
    "\135\0\2\u0554\102\0\3\u0555\3\0\1\u0556\34\0\2\u04f2"+
    "\2\u04f3\1\0\1\u04f4\1\u04f5\1\0\1\u04f6\2\0\1\u04f2"+
    "\3\0\1\u04f5\3\0\1\u04f6\2\u04f7\2\u04f8\17\0\2\u04f9"+
    "\1\u0557\1\u04fa\1\u04fb\1\u04fc\1\u0558\4\u0557\1\u0559\2\u04fd"+
    "\2\u04fe\1\0\2\u04ff\6\0\2\u0500\3\0\1\u0557\1\0"+
    "\2\u04f3\3\0\1\u055a\1\u055b\1\0\1\u055c\2\0\1\u04f3"+
    "\3\0\1\u055b\3\0\1\u055c\2\u055d\2\u055e\17\0\2\u055f"+
    "\1\u0560\3\0\1\u0561\4\u0560\1\u0562\2\u0563\2\u0564\1\0"+
    "\2\u0565\6\0\2\u0566\3\0\1\u0560\7\0\1\u0567\10\0"+
    "\1\u0567\136\0\2\u0568\72\0\2\u0569\62\0\1\u056a\7\0"+
    "\1\u056a\4\0\2\u056b\113\0\2\u056c\6\0\3\u056d\102\0"+
    "\2\u056e\43\0\2\u04fa\3\0\1\u056f\1\u0570\1\0\1\u0571"+
    "\2\0\1\u04fa\3\0\1\u0570\3\0\1\u0571\2\u0572\2\u0573"+
    "\17\0\2\u0574\1\u0575\3\0\1\u0576\4\u0575\1\u0577\2\u0578"+
    "\2\u0579\1\0\2\u057a\6\0\2\u057b\3\0\1\u0575\1\0"+
    "\2\u04fb\3\0\1\u057c\1\u057d\1\0\1\u057e\2\0\1\u04fb"+
    "\3\0\1\u057d\3\0\1\u057e\2\u057f\2\u0580\17\0\2\u0581"+
    "\1\u0582\3\0\1\u0583\4\u0582\1\u0584\2\u0585\2\u0586\1\0"+
    "\2\u0587\6\0\2\u0588\3\0\1\u0582\1\0\2\u04fc\3\0"+
    "\1\u0589\1\u058a\1\0\1\u058b\2\0\1\u04fc\3\0\1\u058a"+
    "\3\0\1\u058b\2\u058c\2\u058d\17\0\2\u058e\1\u058f\3\0"+
    "\1\u0590\4\u058f\1\u0591\2\u0592\2\u0593\1\0\2\u0594\6\0"+
    "\2\u0595\3\0\1\u058f\25\0\2\u0596\121\0\2\u0597\111\0"+
    "\3\u0598\74\0\2\u0599\51\0\2\u04f2\2\u04f3\1\0\1\u04f4"+
    "\1\u04f5\1\0\1\u04f6\2\0\1\u04f2\3\0\1\u04f5\3\0"+
    "\1\u04f6\2\u04f7\2\u04f8\12\0\2\u056e\3\0\2\u04f9\1\0"+
    "\1\u04fa\1\u04fb\1\u04fc\6\0\2\u04fd\2\u04fe\1\0\2\u04ff"+
    "\6\0\2\u0500\47\0\2\u059a\135\0\2\u059b\25\0\1\u0345"+
    "\103\0\1\u059c\10\0\1\u059c\135\0\2\u059d\102\0\3\u059e"+
    "\3\0\1\u0446\34\0\2\u0508\2\u0509\1\0\1\u050a\1\u050b"+
    "\1\0\1\u050c\2\0\1\u0508\3\0\1\u050b\3\0\1\u050c"+
    "\2\u050d\2\u050e\17\0\2\u050f\1\u059f\1\u0510\1\u0511\1\u0512"+
    "\1\u05a0\4\u059f\1\u05a1\2\u0513\2\u0514\1\0\2\u0515\6\0"+
    "\2\u0516\3\0\1\u059f\1\0\2\u0509\3\0\1\u05a2\1\u05a3"+
    "\1\0\1\u05a4\2\0\1\u0509\3\0\1\u05a3\3\0\1\u05a4"+
    "\2\u05a5\2\u05a6\17\0\2\u05a7\1\u05a8\3\0\1\u05a9\4\u05a8"+
    "\1\u05aa\2\u05ab\2\u05ac\1\0\2\u05ad\6\0\2\u05ae\3\0"+
    "\1\u05a8\7\0\1\u05af\10\0\1\u05af\136\0\2\u05b0\72\0"+
    "\2\u05b1\62\0\1\u05b2\7\0\1\u05b2\4\0\2\u05b3\113\0"+
    "\2\u05b4\6\0\3\u05b5\102\0\2\u05b6\43\0\2\u0510\3\0"+
    "\1\u05b7\1\u05b8\1\0\1\u05b9\2\0\1\u0510\3\0\1\u05b8"+
    "\3\0\1\u05b9\2\u05ba\2\u05bb\17\0\2\u05bc\1\u05bd\3\0"+
    "\1\u05be\4\u05bd\1\u05bf\2\u05c0\2\u05c1\1\0\2\u05c2\6\0"+
    "\2\u05c3\3\0\1\u05bd\1\0\2\u0511\3\0\1\u05c4\1\u05c5"+
    "\1\0\1\u05c6\2\0\1\u0511\3\0\1\u05c5\3\0\1\u05c6"+
    "\2\u05c7\2\u05c8\17\0\2\u05c9\1\u05ca\3\0\1\u05cb\4\u05ca"+
    "\1\u05cc\2\u05cd\2\u05ce\1\0\2\u05cf\6\0\2\u05d0\3\0"+
    "\1\u05ca\1\0\2\u0512\3\0\1\u05d1\1\u05d2\1\0\1\u05d3"+
    "\2\0\1\u0512\3\0\1\u05d2\3\0\1\u05d3\2\u05d4\2\u05d5"+
    "\17\0\2\u05d6\1\u05d7\3\0\1\u05d8\4\u05d7\1\u05d9\2\u05da"+
    "\2\u05db\1\0\2\u05dc\6\0\2\u05dd\3\0\1\u05d7\25\0"+
    "\2\u05de\121\0\2\u05df\111\0\3\u05e0\74\0\2\u05e1\51\0"+
    "\2\u0508\2\u0509\1\0\1\u050a\1\u050b\1\0\1\u050c\2\0"+
    "\1\u0508\3\0\1\u050b\3\0\1\u050c\2\u050d\2\u050e\12\0"+
    "\2\u05b6\3\0\2\u050f\1\0\1\u0510\1\u0511\1\u0512\6\0"+
    "\2\u0513\2\u0514\1\0\2\u0515\6\0\2\u0516\47\0\2\u05e2"+
    "\135\0\2\u05e3\12\0\1\u05e4\1\u05e5\50\u05e4\1\0\3\u05e4"+
    "\6\0\22\u05e4\1\0\1\u05e4\1\u05e5\50\u05e4\1\0\3\u05e4"+
    "\1\0\3\u04a9\2\0\22\u05e4\1\0\1\u05e4\1\u05e5\50\u05e4"+
    "\1\u04a9\3\u05e4\6\u04a9\22\u05e4\1\u04a9\1\u05e4\1\u05e5\50\u05e4"+
    "\1\0\3\u05e4\1\u04a9\3\0\2\u04a9\22\u05e4\12\0\1\u05e6"+
    "\12\0\1\u05e6\74\0\1\u05e7\7\0\1\u05e7\150\0\2\u0525"+
    "\107\0\2\u05e8\62\0\2\u0528\67\0\2\u0527\67\0\1\u0528"+
    "\10\0\1\u0528\76\0\1\u05e9\10\0\1\u05e9\76\0\1\u05ea"+
    "\12\0\1\u05ea\127\0\3\u0528\107\0\2\u0401\66\0\2\u0523"+
    "\67\0\1\u03ce\130\0\2\u044a\101\0\2\u052b\66\0\1\u05eb"+
    "\7\0\1\u05eb\150\0\2\u0534\22\0\2\u052f\2\0\1\u04a8"+
    "\1\u05ec\5\0\1\u052f\35\0\1\u04a9\1\u044a\2\0\1\u04aa"+
    "\3\u04a9\1\u04ab\1\u04a9\22\0\1\u04a9\66\0\2\u05ed\62\0"+
    "\2\u0537\67\0\2\u0536\67\0\1\u0537\10\0\1\u0537\76\0"+
    "\1\u05ee\10\0\1\u05ee\76\0\1\u05ef\12\0\1\u05ef\127\0"+
    "\3\u0537\107\0\2\u0416\66\0\2\u0532\66\0\1\u05f0\7\0"+
    "\1\u05f0\150\0\2\u053f\107\0\2\u05f1\62\0\2\u0542\67\0"+
    "\2\u0541\67\0\1\u0542\10\0\1\u0542\76\0\1\u05f2\10\0"+
    "\1\u05f2\76\0\1\u05f3\12\0\1\u05f3\127\0\3\u0542\107\0"+
    "\2\u0423\66\0\2\u053d\66\0\1\u05f4\7\0\1\u05f4\150\0"+
    "\2\u054a\107\0\2\u05f5\62\0\2\u054d\67\0\2\u054c\67\0"+
    "\1\u054d\10\0\1\u054d\76\0\1\u05f6\10\0\1\u05f6\76\0"+
    "\1\u05f7\12\0\1\u05f7\127\0\3\u054d\107\0\2\u0430\66\0"+
    "\2\u0548\117\0\2\u05f8\145\0\2\u05f9\20\0\1\u05fa\77\0"+
    "\1\u05fb\10\0\1\u05fb\77\0\1\u05fc\12\0\1\u05fc\113\0"+
    "\2\u05fd\111\0\2\u05fe\51\0\4\u0556\1\0\1\u05ff\4\0"+
    "\4\u0556\10\0\2\u0491\10\0\2\u0492\2\110\5\0\1\u0493"+
    "\3\0\1\u0494\3\u0493\1\u0495\1\u0496\5\0\2\u0497\2\0"+
    "\1\u0600\10\0\1\u0499\1\0\2\u0601\3\0\1\u0602\5\0"+
    "\1\u0601\73\0\2\u0601\3\0\1\u0602\5\0\1\u0601\41\0"+
    "\1\u0557\3\0\2\u0557\75\0\1\u0557\3\0\5\u0557\23\0"+
    "\1\u0557\7\0\1\u0603\10\0\1\u0603\136\0\2\u0604\72\0"+
    "\2\u0605\62\0\1\u0606\7\0\1\u0606\4\0\2\u0607\113\0"+
    "\2\u0608\6\0\3\u0609\102\0\2\u060a\43\0\2\u0560\2\u0601"+
    "\1\0\1\u060b\5\0\1\u0560\73\0\2\u0560\2\u0601\1\0"+
    "\1\u060b\5\0\1\u0560\41\0\1\u0560\3\0\2\u0560\75\0"+
    "\1\u0560\3\0\5\u0560\23\0\1\u0560\25\0\2\u060c\121\0"+
    "\2\u060d\111\0\3\u060e\74\0\2\u060f\60\0\1\u0610\10\0"+
    "\1\u0610\120\0\2\u0611\115\0\2\u0612\73\0\2\u0613\124\0"+
    "\2\u0614\44\0\1\u0615\10\0\1\u0615\127\0\2\u0616\107\0"+
    "\2\u0617\51\0\1\u0618\10\0\1\u0618\136\0\2\u0619\72\0"+
    "\2\u061a\62\0\1\u061b\7\0\1\u061b\4\0\2\u061c\113\0"+
    "\2\u061d\6\0\3\u061e\102\0\2\u061f\43\0\2\u0575\3\0"+
    "\1\u0620\5\0\1\u0575\36\0\1\u0601\34\0\2\u0575\3\0"+
    "\1\u0620\5\0\1\u0575\36\0\1\u0601\2\0\1\u0575\3\0"+
    "\2\u0575\75\0\1\u0575\3\0\5\u0575\23\0\1\u0575\25\0"+
    "\2\u0621\121\0\2\u0622\111\0\3\u0623\74\0\2\u0624\57\0"+
    "\1\u0625\10\0\1\u0625\136\0\2\u0626\72\0\2\u0627\62\0"+
    "\1\u0628\7\0\1\u0628\4\0\2\u0629\113\0\2\u062a\6\0"+
    "\3\u062b\102\0\2\u062c\43\0\2\u0582\3\0\1\u062d\5\0"+
    "\1\u0582\37\0\1\u0601\33\0\2\u0582\3\0\1\u062d\5\0"+
    "\1\u0582\37\0\1\u0601\1\0\1\u0582\3\0\2\u0582\75\0"+
    "\1\u0582\3\0\5\u0582\23\0\1\u0582\25\0\2\u062e\121\0"+
    "\2\u062f\111\0\3\u0630\74\0\2\u0631\57\0\1\u0632\10\0"+
    "\1\u0632\136\0\2\u0633\72\0\2\u0634\62\0\1\u0635\7\0"+
    "\1\u0635\4\0\2\u0636\113\0\2\u0637\6\0\3\u0638\102\0"+
    "\2\u0639\43\0\2\u058f\3\0\1\u063a\5\0\1\u058f\40\0"+
    "\1\u0601\32\0\2\u058f\3\0\1\u063a\5\0\1\u058f\40\0"+
    "\1\u0601\1\u058f\3\0\2\u058f\75\0\1\u058f\3\0\5\u058f"+
    "\23\0\1\u058f\25\0\2\u063b\121\0\2\u063c\111\0\3\u063d"+
    "\74\0\2\u063e\77\0\2\u063f\2\u0640\103\0\2\u0641\115\0"+
    "\2\u0611\56\0\1\u0642\10\0\1\u0642\112\0\2\u0556\67\0"+
    "\1\u0643\10\0\1\u0643\77\0\1\u0644\12\0\1\u0644\113\0"+
    "\2\u0645\111\0\2\u0646\51\0\2\u0647\3\0\1\u0648\5\0"+
    "\1\u0647\73\0\2\u0647\3\0\1\u0648\5\0\1\u0647\41\0"+
    "\1\u059f\3\0\2\u059f\75\0\1\u059f\3\0\5\u059f\23\0"+
    "\1\u059f\7\0\1\u0649\10\0\1\u0649\136\0\2\u064a\72\0"+
    "\2\u064b\62\0\1\u064c\7\0\1\u064c\4\0\2\u064d\113\0"+
    "\2\u064e\6\0\3\u064f\102\0\2\u0650\43\0\2\u05a8\2\u0647"+
    "\1\0\1\u0651\5\0\1\u05a8\73\0\2\u05a8\2\u0647\1\0"+
    "\1\u0651\5\0\1\u05a8\41\0\1\u05a8\3\0\2\u05a8\75\0"+
    "\1\u05a8\3\0\5\u05a8\23\0\1\u05a8\25\0\2\u0652\121\0"+
    "\2\u0653\111\0\3\u0654\74\0\2\u0655\60\0\1\u0656\10\0"+
    "\1\u0656\120\0\2\u0657\115\0\2\u0658\73\0\2\u0659\124\0"+
    "\2\u065a\44\0\1\u065b\10\0\1\u065b\127\0\2\u065c\107\0"+
    "\2\u065d\51\0\1\u065e\10\0\1\u065e\136\0\2\u065f\72\0"+
    "\2\u0660\62\0\1\u0661\7\0\1\u0661\4\0\2\u0662\113\0"+
    "\2\u0663\6\0\3\u0664\102\0\2\u0665\43\0\2\u05bd\3\0"+
    "\1\u0666\5\0\1\u05bd\36\0\1\u0647\34\0\2\u05bd\3\0"+
    "\1\u0666\5\0\1\u05bd\36\0\1\u0647\2\0\1\u05bd\3\0"+
    "\2\u05bd\75\0\1\u05bd\3\0\5\u05bd\23\0\1\u05bd\25\0"+
    "\2\u0667\121\0\2\u0668\111\0\3\u0669\74\0\2\u066a\57\0"+
    "\1\u066b\10\0\1\u066b\136\0\2\u066c\72\0\2\u066d\62\0"+
    "\1\u066e\7\0\1\u066e\4\0\2\u066f\113\0\2\u0670\6\0"+
    "\3\u0671\102\0\2\u0672\43\0\2\u05ca\3\0\1\u0673\5\0"+
    "\1\u05ca\37\0\1\u0647\33\0\2\u05ca\3\0\1\u0673\5\0"+
    "\1\u05ca\37\0\1\u0647\1\0\1\u05ca\3\0\2\u05ca\75\0"+
    "\1\u05ca\3\0\5\u05ca\23\0\1\u05ca\25\0\2\u0674\121\0"+
    "\2\u0675\111\0\3\u0676\74\0\2\u0677\57\0\1\u0678\10\0"+
    "\1\u0678\136\0\2\u0679\72\0\2\u067a\62\0\1\u067b\7\0"+
    "\1\u067b\4\0\2\u067c\113\0\2\u067d\6\0\3\u067e\102\0"+
    "\2\u067f\43\0\2\u05d7\3\0\1\u0680\5\0\1\u05d7\40\0"+
    "\1\u0647\32\0\2\u05d7\3\0\1\u0680\5\0\1\u05d7\40\0"+
    "\1\u0647\1\u05d7\3\0\2\u05d7\75\0\1\u05d7\3\0\5\u05d7"+
    "\23\0\1\u05d7\25\0\2\u0681\121\0\2\u0682\111\0\3\u0683"+
    "\74\0\2\u0684\77\0\2\u0685\2\u0686\103\0\2\u0687\115\0"+
    "\2\u0657\56\0\1\u0688\10\0\1\u0688\112\0\2\u0446\67\0"+
    "\1\u0689\10\0\1\u0689\70\0\1\u05e4\116\0\1\u068a\7\0"+
    "\1\u068a\77\0\1\u03cf\130\0\2\u0401\101\0\2\u05e8\66\0"+
    "\1\u068b\7\0\1\u068b\77\0\1\u03d6\102\0\1\u068c\10\0"+
    "\1\u068c\123\0\2\u0416\101\0\2\u05ed\66\0\1\u068d\7\0"+
    "\1\u068d\77\0\1\u03d7\130\0\2\u0423\101\0\2\u05f1\66\0"+
    "\1\u068e\7\0\1\u068e\77\0\1\u03d8\130\0\2\u0430\101\0"+
    "\2\u05f5\66\0\1\u068f\7\0\1\u068f\76\0\1\u0690\7\0"+
    "\1\u0690\102\0\1\u0691\73\0\2\u05fa\2\0\2\u05fa\1\0"+
    "\1\u05fa\3\0\1\u0692\4\0\2\u05fa\1\0\1\u05fa\1\0"+
    "\1\u05fa\1\0\1\u05fa\1\0\1\u05fa\1\0\1\u05fa\1\0"+
    "\1\u05fa\1\0\1\u05fa\1\0\1\u05fa\2\0\1\u05fa\1\0"+
    "\2\u05fa\3\0\6\u05fa\1\0\1\u05fa\1\0\2\u05fa\1\0"+
    "\1\u05fa\1\0\1\u05fa\3\0\1\u05fa\1\0\1\u05fa\1\0"+
    "\1\u05fa\1\0\1\u05fa\37\0\2\u0693\60\0\1\u0694\7\0"+
    "\1\u0694\73\0\1\u0695\10\0\1\u0695\75\0\1\u0696\10\0"+
    "\1\u0696\75\0\1\u0697\10\0\1\u0697\154\0\2\u0698\20\0"+
    "\2\u0601\2\0\1\u0699\1\u0602\5\0\1\u0601\35\0\1\u069a"+
    "\3\0\1\u069b\3\u069a\1\u069c\1\u069a\22\0\1\u069a\7\0"+
    "\1\u069d\10\0\1\u069d\76\0\1\u069e\10\0\1\u069e\120\0"+
    "\2\u069f\115\0\2\u06a0\73\0\2\u06a1\124\0\2\u06a2\44\0"+
    "\1\u06a3\10\0\1\u06a3\127\0\2\u06a4\107\0\2\u06a5\51\0"+
    "\1\u06a6\10\0\1\u06a6\115\0\2\u06a7\2\u06a8\103\0\2\u06a9"+
    "\115\0\2\u069f\56\0\1\u06aa\10\0\1\u06aa\76\0\1\u06ab"+
    "\12\0\1\u06ab\63\0\2\u0601\2\0\1\u0699\1\u0602\5\0"+
    "\1\u0601\20\0\2\u06ac\13\0\1\u069a\1\u0601\2\0\1\u069b"+
    "\3\u069a\1\u069c\1\u069a\22\0\1\u069a\1\0\2\u0601\2\0"+
    "\1\u0699\1\u0602\5\0\1\u0601\26\0\2\u0611\5\0\1\u069a"+
    "\1\u0601\2\0\1\u069b\3\u069a\1\u069c\1\u069a\22\0\1\u069a"+
    "\1\0\2\u0601\2\0\1\u0699\1\u0602\5\0\1\u0601\30\0"+
    "\3\u06ad\2\0\1\u069a\1\u0601\2\0\1\u069b\3\u069a\1\u069c"+
    "\1\u069a\22\0\1\u069a\1\0\2\u0601\2\0\1\u0699\1\u0602"+
    "\2\0\1\u06ae\2\0\1\u0601\7\0\1\u06ae\25\0\1\u069a"+
    "\1\u0601\2\0\1\u069b\3\u069a\1\u069c\1\u069a\22\0\1\u069a"+
    "\1\0\2\u0601\2\0\1\u0699\1\u0602\1\u06af\4\0\1\u0601"+
    "\3\0\1\u06af\31\0\1\u069a\1\u0601\2\0\1\u069b\3\u069a"+
    "\1\u069c\1\u069a\22\0\1\u069a\1\0\2\u0601\2\0\1\u0699"+
    "\1\u0602\5\0\1\u0601\12\0\2\u06b0\21\0\1\u069a\1\u0601"+
    "\2\0\1\u069b\3\u069a\1\u069c\1\u069a\22\0\1\u069a\1\0"+
    "\2\u0601\2\0\1\u0699\1\u0602\5\0\1\u0601\33\0\2\u06b1"+
    "\1\u069a\1\u0601\2\0\1\u069b\3\u069a\1\u069c\1\u069a\22\0"+
    "\1\u069a\10\0\1\u06b2\10\0\1\u06b2\120\0\2\u06b3\115\0"+
    "\2\u06b4\73\0\2\u06b5\124\0\2\u06b6\44\0\1\u06b7\10\0"+
    "\1\u06b7\127\0\2\u06b8\107\0\2\u06b9\51\0\1\u06ba\10\0"+
    "\1\u06ba\115\0\2\u06bb\2\u06bc\103\0\2\u06bd\115\0\2\u06b3"+
    "\56\0\1\u06be\10\0\1\u06be\75\0\1\u06bf\10\0\1\u06bf"+
    "\120\0\2\u06c0\115\0\2\u06c1\73\0\2\u06c2\124\0\2\u06c3"+
    "\44\0\1\u06c4\10\0\1\u06c4\127\0\2\u06c5\107\0\2\u06c6"+
    "\51\0\1\u06c7\10\0\1\u06c7\115\0\2\u06c8\2\u06c9\103\0"+
    "\2\u06ca\115\0\2\u06c0\56\0\1\u06cb\10\0\1\u06cb\75\0"+
    "\1\u06cc\10\0\1\u06cc\120\0\2\u06cd\115\0\2\u06ce\73\0"+
    "\2\u06cf\124\0\2\u06d0\44\0\1\u06d1\10\0\1\u06d1\127\0"+
    "\2\u06d2\107\0\2\u06d3\51\0\1\u06d4\10\0\1\u06d4\115\0"+
    "\2\u06d5\2\u06d6\103\0\2\u06d7\115\0\2\u06cd\56\0\1\u06d8"+
    "\10\0\1\u06d8\66\0\2\u0601\2\0\1\u0699\1\u0602\5\0"+
    "\1\u0601\12\0\2\u06d9\21\0\1\u069a\1\u0601\2\0\1\u069b"+
    "\3\u069a\1\u069c\1\u069a\22\0\1\u069a\1\0\2\u0601\2\0"+
    "\1\u0699\1\u0602\5\0\1\u0601\2\0\1\u06da\3\0\1\u06da"+
    "\26\0\1\u069a\1\u0601\2\0\1\u069b\3\u069a\1\u069c\1\u069a"+
    "\22\0\1\u069a\1\0\2\u0601\2\0\1\u0699\1\u0602\5\0"+
    "\1\u0601\35\0\1\u069a\1\u0601\2\0\1\u069b\3\u069a\1\u069c"+
    "\1\u069a\2\0\2\u06d9\16\0\1\u069a\1\0\2\u0601\2\0"+
    "\1\u0699\1\u0602\1\0\1\u06db\3\0\1\u0601\4\0\1\u06db"+
    "\30\0\1\u069a\1\u0601\2\0\1\u069b\3\u069a\1\u069c\1\u069a"+
    "\22\0\1\u069a\16\0\1\u06dc\102\0\1\u06dd\7\0\1\u06dd"+
    "\73\0\1\u06de\10\0\1\u06de\75\0\1\u06df\10\0\1\u06df"+
    "\67\0\2\u0647\2\0\1\u06e0\1\u0648\5\0\1\u0647\35\0"+
    "\1\u06e1\3\0\1\u06e2\3\u06e1\1\u06e3\1\u06e1\22\0\1\u06e1"+
    "\7\0\1\u06e4\10\0\1\u06e4\76\0\1\u06e5\10\0\1\u06e5"+
    "\120\0\2\u06e6\115\0\2\u06e7\73\0\2\u06e8\124\0\2\u06e9"+
    "\44\0\1\u06ea\10\0\1\u06ea\127\0\2\u06eb\107\0\2\u06ec"+
    "\51\0\1\u06ed\10\0\1\u06ed\115\0\2\u06ee\2\u06ef\103\0"+
    "\2\u06f0\115\0\2\u06e6\56\0\1\u06f1\10\0\1\u06f1\76\0"+
    "\1\u06f2\12\0\1\u06f2\63\0\2\u0647\2\0\1\u06e0\1\u0648"+
    "\5\0\1\u0647\20\0\2\u06f3\13\0\1\u06e1\1\u0647\2\0"+
    "\1\u06e2\3\u06e1\1\u06e3\1\u06e1\22\0\1\u06e1\1\0\2\u0647"+
    "\2\0\1\u06e0\1\u0648\5\0\1\u0647\26\0\2\u0657\5\0"+
    "\1\u06e1\1\u0647\2\0\1\u06e2\3\u06e1\1\u06e3\1\u06e1\22\0"+
    "\1\u06e1\1\0\2\u0647\2\0\1\u06e0\1\u0648\5\0\1\u0647"+
    "\30\0\3\u06f4\2\0\1\u06e1\1\u0647\2\0\1\u06e2\3\u06e1"+
    "\1\u06e3\1\u06e1\22\0\1\u06e1\1\0\2\u0647\2\0\1\u06e0"+
    "\1\u0648\2\0\1\u06f5\2\0\1\u0647\7\0\1\u06f5\25\0"+
    "\1\u06e1\1\u0647\2\0\1\u06e2\3\u06e1\1\u06e3\1\u06e1\22\0"+
    "\1\u06e1\1\0\2\u0647\2\0\1\u06e0\1\u0648\1\u06f6\4\0"+
    "\1\u0647\3\0\1\u06f6\31\0\1\u06e1\1\u0647\2\0\1\u06e2"+
    "\3\u06e1\1\u06e3\1\u06e1\22\0\1\u06e1\1\0\2\u0647\2\0"+
    "\1\u06e0\1\u0648\5\0\1\u0647\12\0\2\u06f7\21\0\1\u06e1"+
    "\1\u0647\2\0\1\u06e2\3\u06e1\1\u06e3\1\u06e1\22\0\1\u06e1"+
    "\1\0\2\u0647\2\0\1\u06e0\1\u0648\5\0\1\u0647\33\0"+
    "\2\u06f8\1\u06e1\1\u0647\2\0\1\u06e2\3\u06e1\1\u06e3\1\u06e1"+
    "\22\0\1\u06e1\10\0\1\u06f9\10\0\1\u06f9\120\0\2\u06fa"+
    "\115\0\2\u06fb\73\0\2\u06fc\124\0\2\u06fd\44\0\1\u06fe"+
    "\10\0\1\u06fe\127\0\2\u06ff\107\0\2\u0700\51\0\1\u0701"+
    "\10\0\1\u0701\115\0\2\u0702\2\u0703\103\0\2\u0704\115\0"+
    "\2\u06fa\56\0\1\u0705\10\0\1\u0705\75\0\1\u0706\10\0"+
    "\1\u0706\120\0\2\u0707\115\0\2\u0708\73\0\2\u0709\124\0"+
    "\2\u070a\44\0\1\u070b\10\0\1\u070b\127\0\2\u070c\107\0"+
    "\2\u070d\51\0\1\u070e\10\0\1\u070e\115\0\2\u070f\2\u0710"+
    "\103\0\2\u0711\115\0\2\u0707\56\0\1\u0712\10\0\1\u0712"+
    "\75\0\1\u0713\10\0\1\u0713\120\0\2\u0714\115\0\2\u0715"+
    "\73\0\2\u0716\124\0\2\u0717\44\0\1\u0718\10\0\1\u0718"+
    "\127\0\2\u0719\107\0\2\u071a\51\0\1\u071b\10\0\1\u071b"+
    "\115\0\2\u071c\2\u071d\103\0\2\u071e\115\0\2\u0714\56\0"+
    "\1\u071f\10\0\1\u071f\66\0\2\u0647\2\0\1\u06e0\1\u0648"+
    "\5\0\1\u0647\12\0\2\u0720\21\0\1\u06e1\1\u0647\2\0"+
    "\1\u06e2\3\u06e1\1\u06e3\1\u06e1\22\0\1\u06e1\1\0\2\u0647"+
    "\2\0\1\u06e0\1\u0648\5\0\1\u0647\2\0\1\u0721\3\0"+
    "\1\u0721\26\0\1\u06e1\1\u0647\2\0\1\u06e2\3\u06e1\1\u06e3"+
    "\1\u06e1\22\0\1\u06e1\1\0\2\u0647\2\0\1\u06e0\1\u0648"+
    "\5\0\1\u0647\35\0\1\u06e1\1\u0647\2\0\1\u06e2\3\u06e1"+
    "\1\u06e3\1\u06e1\2\0\2\u0720\16\0\1\u06e1\1\0\2\u0647"+
    "\2\0\1\u06e0\1\u0648\1\0\1\u0722\3\0\1\u0647\4\0"+
    "\1\u0722\30\0\1\u06e1\1\u0647\2\0\1\u06e2\3\u06e1\1\u06e3"+
    "\1\u06e1\22\0\1\u06e1\16\0\1\u0723\103\0\1\u044a\106\0"+
    "\1\u0401\103\0\1\u0724\10\0\1\u0724\100\0\1\u0416\106\0"+
    "\1\u0423\106\0\1\u0430\176\0\2\u0725\5\0\2\u0691\2\0"+
    "\2\u0691\1\0\1\u0691\3\0\1\u0726\4\0\2\u0691\1\0"+
    "\1\u0691\1\0\1\u0691\1\0\1\u0691\1\0\1\u0691\1\0"+
    "\1\u0691\1\0\1\u0691\1\0\1\u0691\1\0\1\u0691\2\0"+
    "\1\u0691\1\0\2\u0691\3\0\6\u0691\1\0\1\u0691\1\0"+
    "\2\u0691\1\0\1\u0691\1\0\1\u0691\3\0\1\u0691\1\0"+
    "\1\u0691\1\0\1\u0691\1\0\1\u0691\52\0\1\u0727\3\0"+
    "\6\u0727\22\0\1\u0727\35\0\2\u0728\14\0\1\u0556\46\0"+
    "\1\u048f\143\0\2\u0556\54\0\1\u059a\3\0\1\u059a\73\0"+
    "\1\u0729\10\0\1\u0729\160\0\2\u072a\64\0\1\u069a\3\0"+
    "\6\u069a\22\0\1\u069a\52\0\1\u072b\3\0\6\u072b\22\0"+
    "\1\u072b\52\0\1\u072b\3\0\1\u072b\1\u072c\1\u072b\1\u072d"+
    "\2\u072b\22\0\1\u072b\52\0\1\u072b\3\0\5\u072b\1\u072e"+
    "\22\0\1\u072b\10\0\1\u072f\10\0\1\u072f\76\0\1\u0730"+
    "\12\0\1\u0730\63\0\2\u0560\2\u0601\1\0\1\u060b\5\0"+
    "\1\u0560\20\0\2\u0731\14\0\1\u0560\34\0\2\u0560\2\u0601"+
    "\1\0\1\u060b\5\0\1\u0560\26\0\2\u069f\6\0\1\u0560"+
    "\34\0\2\u0560\2\u0601\1\0\1\u060b\5\0\1\u0560\30\0"+
    "\3\u0732\3\0\1\u0560\34\0\2\u0560\2\u0601\1\0\1\u060b"+
    "\2\0\1\u0733\2\0\1\u0560\7\0\1\u0733\26\0\1\u0560"+
    "\34\0\2\u0560\2\u0601\1\0\1\u060b\1\u0734\4\0\1\u0560"+
    "\3\0\1\u0734\32\0\1\u0560\34\0\2\u0560\2\u0601\1\0"+
    "\1\u060b\5\0\1\u0560\12\0\2\u0735\22\0\1\u0560\34\0"+
    "\2\u0560\2\u0601\1\0\1\u060b\5\0\1\u0560\33\0\2\u0736"+
    "\1\0\1\u0560\43\0\1\u0737\10\0\1\u0737\66\0\2\u0560"+
    "\2\u0601\1\0\1\u060b\5\0\1\u0560\12\0\2\u0738\22\0"+
    "\1\u0560\34\0\2\u0560\2\u0601\1\0\1\u060b\5\0\1\u0560"+
    "\2\0\1\u0739\3\0\1\u0739\27\0\1\u0560\34\0\2\u0560"+
    "\2\u0601\1\0\1\u060b\5\0\1\u0560\36\0\1\u0560\12\0"+
    "\2\u0738\20\0\2\u0560\2\u0601\1\0\1\u060b\1\0\1\u073a"+
    "\3\0\1\u0560\4\0\1\u073a\31\0\1\u0560\45\0\1\u073b"+
    "\7\0\1\u073b\150\0\2\u06b1\107\0\2\u073c\62\0\2\u06da"+
    "\67\0\2\u06d9\67\0\1\u06da\10\0\1\u06da\76\0\1\u073d"+
    "\10\0\1\u073d\76\0\1\u073e\12\0\1\u073e\63\0\2\u0575"+
    "\3\0\1\u0620\5\0\1\u0575\20\0\2\u073f\14\0\1\u0740"+
    "\34\0\2\u0575\3\0\1\u0620\5\0\1\u0575\26\0\2\u06b3"+
    "\6\0\1\u0740\34\0\2\u0575\3\0\1\u0620\5\0\1\u0575"+
    "\30\0\3\u0741\3\0\1\u0740\34\0\2\u0575\3\0\1\u0620"+
    "\2\0\1\u0742\2\0\1\u0575\7\0\1\u0742\26\0\1\u0740"+
    "\34\0\2\u0575\3\0\1\u0620\1\u0743\4\0\1\u0575\3\0"+
    "\1\u0743\32\0\1\u0740\34\0\2\u0575\3\0\1\u0620\5\0"+
    "\1\u0575\12\0\2\u0744\22\0\1\u0740\34\0\2\u0575\3\0"+
    "\1\u0620\5\0\1\u0575\33\0\2\u0745\1\0\1\u0740\43\0"+
    "\1\u0746\10\0\1\u0746\66\0\2\u0575\3\0\1\u0620\5\0"+
    "\1\u0575\12\0\2\u0747\22\0\1\u0740\34\0\2\u0575\3\0"+
    "\1\u0620\5\0\1\u0575\2\0\1\u0748\3\0\1\u0748\27\0"+
    "\1\u0740\34\0\2\u0575\3\0\1\u0620\5\0\1\u0575\36\0"+
    "\1\u0740\12\0\2\u0747\20\0\2\u0575\3\0\1\u0620\1\0"+
    "\1\u0749\3\0\1\u0575\4\0\1\u0749\31\0\1\u0740\44\0"+
    "\1\u074a\12\0\1\u074a\63\0\2\u0582\3\0\1\u062d\5\0"+
    "\1\u0582\20\0\2\u074b\14\0\1\u0582\1\u0601\33\0\2\u0582"+
    "\3\0\1\u062d\5\0\1\u0582\26\0\2\u06c0\6\0\1\u0582"+
    "\1\u0601\33\0\2\u0582\3\0\1\u062d\5\0\1\u0582\30\0"+
    "\3\u074c\3\0\1\u0582\1\u0601\33\0\2\u0582\3\0\1\u062d"+
    "\2\0\1\u074d\2\0\1\u0582\7\0\1\u074d\26\0\1\u0582"+
    "\1\u0601\33\0\2\u0582\3\0\1\u062d\1\u074e\4\0\1\u0582"+
    "\3\0\1\u074e\32\0\1\u0582\1\u0601\33\0\2\u0582\3\0"+
    "\1\u062d\5\0\1\u0582\12\0\2\u074f\22\0\1\u0582\1\u0601"+
    "\33\0\2\u0582\3\0\1\u062d\5\0\1\u0582\33\0\2\u0750"+
    "\1\0\1\u0582\1\u0601\42\0\1\u0751\10\0\1\u0751\66\0"+
    "\2\u0582\3\0\1\u062d\5\0\1\u0582\12\0\2\u0752\22\0"+
    "\1\u0582\1\u0601\33\0\2\u0582\3\0\1\u062d\5\0\1\u0582"+
    "\2\0\1\u0753\3\0\1\u0753\27\0\1\u0582\1\u0601\33\0"+
    "\2\u0582\3\0\1\u062d\5\0\1\u0582\36\0\1\u0582\1\u0601"+
    "\11\0\2\u0752\20\0\2\u0582\3\0\1\u062d\1\0\1\u0754"+
    "\3\0\1\u0582\4\0\1\u0754\31\0\1\u0582\1\u0601\43\0"+
    "\1\u0755\12\0\1\u0755\63\0\2\u058f\3\0\1\u063a\5\0"+
    "\1\u058f\20\0\2\u0756\14\0\1\u058f\1\0\1\u0601\32\0"+
    "\2\u058f\3\0\1\u063a\5\0\1\u058f\26\0\2\u06cd\6\0"+
    "\1\u058f\1\0\1\u0601\32\0\2\u058f\3\0\1\u063a\5\0"+
    "\1\u058f\30\0\3\u0757\3\0\1\u058f\1\0\1\u0601\32\0"+
    "\2\u058f\3\0\1\u063a\2\0\1\u0758\2\0\1\u058f\7\0"+
    "\1\u0758\26\0\1\u058f\1\0\1\u0601\32\0\2\u058f\3\0"+
    "\1\u063a\1\u0759\4\0\1\u058f\3\0\1\u0759\32\0\1\u058f"+
    "\1\0\1\u0601\32\0\2\u058f\3\0\1\u063a\5\0\1\u058f"+
    "\12\0\2\u075a\22\0\1\u058f\1\0\1\u0601\32\0\2\u058f"+
    "\3\0\1\u063a\5\0\1\u058f\33\0\2\u075b\1\0\1\u058f"+
    "\1\0\1\u0601\41\0\1\u075c\10\0\1\u075c\66\0\2\u058f"+
    "\3\0\1\u063a\5\0\1\u058f\12\0\2\u075d\22\0\1\u058f"+
    "\1\0\1\u0601\32\0\2\u058f\3\0\1\u063a\5\0\1\u058f"+
    "\2\0\1\u075e\3\0\1\u075e\27\0\1\u058f\1\0\1\u0601"+
    "\32\0\2\u058f\3\0\1\u063a\5\0\1\u058f\36\0\1\u058f"+
    "\1\0\1\u0601\10\0\2\u075d\20\0\2\u058f\3\0\1\u063a"+
    "\1\0\1\u075f\3\0\1\u058f\4\0\1\u075f\31\0\1\u058f"+
    "\1\0\1\u0601\76\0\3\u06da\107\0\2\u0601\66\0\2\u06af"+
    "\65\0\1\u0760\12\0\1\u0760\75\0\1\u0446\143\0\2\u0446"+
    "\54\0\1\u05e2\3\0\1\u05e2\135\0\1\u06e1\3\0\6\u06e1"+
    "\22\0\1\u06e1\52\0\1\u0761\3\0\6\u0761\22\0\1\u0761"+
    "\52\0\1\u0761\3\0\1\u0761\1\u0762\1\u0761\1\u0763\2\u0761"+
    "\22\0\1\u0761\52\0\1\u0761\3\0\5\u0761\1\u0764\22\0"+
    "\1\u0761\10\0\1\u0765\10\0\1\u0765\76\0\1\u0766\12\0"+
    "\1\u0766\63\0\2\u05a8\2\u0647\1\0\1\u0651\5\0\1\u05a8"+
    "\20\0\2\u0767\14\0\1\u05a8\34\0\2\u05a8\2\u0647\1\0"+
    "\1\u0651\5\0\1\u05a8\26\0\2\u06e6\6\0\1\u05a8\34\0"+
    "\2\u05a8\2\u0647\1\0\1\u0651\5\0\1\u05a8\30\0\3\u0768"+
    "\3\0\1\u05a8\34\0\2\u05a8\2\u0647\1\0\1\u0651\2\0"+
    "\1\u0769\2\0\1\u05a8\7\0\1\u0769\26\0\1\u05a8\34\0"+
    "\2\u05a8\2\u0647\1\0\1\u0651\1\u076a\4\0\1\u05a8\3\0"+
    "\1\u076a\32\0\1\u05a8\34\0\2\u05a8\2\u0647\1\0\1\u0651"+
    "\5\0\1\u05a8\12\0\2\u076b\22\0\1\u05a8\34\0\2\u05a8"+
    "\2\u0647\1\0\1\u0651\5\0\1\u05a8\33\0\2\u076c\1\0"+
    "\1\u05a8\43\0\1\u076d\10\0\1\u076d\66\0\2\u05a8\2\u0647"+
    "\1\0\1\u0651\5\0\1\u05a8\12\0\2\u076e\22\0\1\u05a8"+
    "\34\0\2\u05a8\2\u0647\1\0\1\u0651\5\0\1\u05a8\2\0"+
    "\1\u076f\3\0\1\u076f\27\0\1\u05a8\34\0\2\u05a8\2\u0647"+
    "\1\0\1\u0651\5\0\1\u05a8\36\0\1\u05a8\12\0\2\u076e"+
    "\20\0\2\u05a8\2\u0647\1\0\1\u0651\1\0\1\u0770\3\0"+
    "\1\u05a8\4\0\1\u0770\31\0\1\u05a8\45\0\1\u0771\7\0"+
    "\1\u0771\150\0\2\u06f8\107\0\2\u0772\62\0\2\u0721\67\0"+
    "\2\u0720\67\0\1\u0721\10\0\1\u0721\76\0\1\u0773\10\0"+
    "\1\u0773\76\0\1\u0774\12\0\1\u0774\63\0\2\u05bd\3\0"+
    "\1\u0666\5\0\1\u05bd\20\0\2\u0775\14\0\1\u0776\34\0"+
    "\2\u05bd\3\0\1\u0666\5\0\1\u05bd\26\0\2\u06fa\6\0"+
    "\1\u0776\34\0\2\u05bd\3\0\1\u0666\5\0\1\u05bd\30\0"+
    "\3\u0777\3\0\1\u0776\34\0\2\u05bd\3\0\1\u0666\2\0"+
    "\1\u0778\2\0\1\u05bd\7\0\1\u0778\26\0\1\u0776\34\0"+
    "\2\u05bd\3\0\1\u0666\1\u0779\4\0\1\u05bd\3\0\1\u0779"+
    "\32\0\1\u0776\34\0\2\u05bd\3\0\1\u0666\5\0\1\u05bd"+
    "\12\0\2\u077a\22\0\1\u0776\34\0\2\u05bd\3\0\1\u0666"+
    "\5\0\1\u05bd\33\0\2\u077b\1\0\1\u0776\43\0\1\u077c"+
    "\10\0\1\u077c\66\0\2\u05bd\3\0\1\u0666\5\0\1\u05bd"+
    "\12\0\2\u077d\22\0\1\u0776\34\0\2\u05bd\3\0\1\u0666"+
    "\5\0\1\u05bd\2\0\1\u077e\3\0\1\u077e\27\0\1\u0776"+
    "\34\0\2\u05bd\3\0\1\u0666\5\0\1\u05bd\36\0\1\u0776"+
    "\12\0\2\u077d\20\0\2\u05bd\3\0\1\u0666\1\0\1\u077f"+
    "\3\0\1\u05bd\4\0\1\u077f\31\0\1\u0776\44\0\1\u0780"+
    "\12\0\1\u0780\63\0\2\u05ca\3\0\1\u0673\5\0\1\u05ca"+
    "\20\0\2\u0781\14\0\1\u05ca\1\u0647\33\0\2\u05ca\3\0"+
    "\1\u0673\5\0\1\u05ca\26\0\2\u0707\6\0\1\u05ca\1\u0647"+
    "\33\0\2\u05ca\3\0\1\u0673\5\0\1\u05ca\30\0\3\u0782"+
    "\3\0\1\u05ca\1\u0647\33\0\2\u05ca\3\0\1\u0673\2\0"+
    "\1\u0783\2\0\1\u05ca\7\0\1\u0783\26\0\1\u05ca\1\u0647"+
    "\33\0\2\u05ca\3\0\1\u0673\1\u0784\4\0\1\u05ca\3\0"+
    "\1\u0784\32\0\1\u05ca\1\u0647\33\0\2\u05ca\3\0\1\u0673"+
    "\5\0\1\u05ca\12\0\2\u0785\22\0\1\u05ca\1\u0647\33\0"+
    "\2\u05ca\3\0\1\u0673\5\0\1\u05ca\33\0\2\u0786\1\0"+
    "\1\u05ca\1\u0647\42\0\1\u0787\10\0\1\u0787\66\0\2\u05ca"+
    "\3\0\1\u0673\5\0\1\u05ca\12\0\2\u0788\22\0\1\u05ca"+
    "\1\u0647\33\0\2\u05ca\3\0\1\u0673\5\0\1\u05ca\2\0"+
    "\1\u0789\3\0\1\u0789\27\0\1\u05ca\1\u0647\33\0\2\u05ca"+
    "\3\0\1\u0673\5\0\1\u05ca\36\0\1\u05ca\1\u0647\11\0"+
    "\2\u0788\20\0\2\u05ca\3\0\1\u0673\1\0\1\u078a\3\0"+
    "\1\u05ca\4\0\1\u078a\31\0\1\u05ca\1\u0647\43\0\1\u078b"+
    "\12\0\1\u078b\63\0\2\u05d7\3\0\1\u0680\5\0\1\u05d7"+
    "\20\0\2\u078c\14\0\1\u05d7\1\0\1\u0647\32\0\2\u05d7"+
    "\3\0\1\u0680\5\0\1\u05d7\26\0\2\u0714\6\0\1\u05d7"+
    "\1\0\1\u0647\32\0\2\u05d7\3\0\1\u0680\5\0\1\u05d7"+
    "\30\0\3\u078d\3\0\1\u05d7\1\0\1\u0647\32\0\2\u05d7"+
    "\3\0\1\u0680\2\0\1\u078e\2\0\1\u05d7\7\0\1\u078e"+
    "\26\0\1\u05d7\1\0\1\u0647\32\0\2\u05d7\3\0\1\u0680"+
    "\1\u078f\4\0\1\u05d7\3\0\1\u078f\32\0\1\u05d7\1\0"+
    "\1\u0647\32\0\2\u05d7\3\0\1\u0680\5\0\1\u05d7\12\0"+
    "\2\u0790\22\0\1\u05d7\1\0\1\u0647\32\0\2\u05d7\3\0"+
    "\1\u0680\5\0\1\u05d7\33\0\2\u0791\1\0\1\u05d7\1\0"+
    "\1\u0647\41\0\1\u0792\10\0\1\u0792\66\0\2\u05d7\3\0"+
    "\1\u0680\5\0\1\u05d7\12\0\2\u0793\22\0\1\u05d7\1\0"+
    "\1\u0647\32\0\2\u05d7\3\0\1\u0680\5\0\1\u05d7\2\0"+
    "\1\u0794\3\0\1\u0794\27\0\1\u05d7\1\0\1\u0647\32\0"+
    "\2\u05d7\3\0\1\u0680\5\0\1\u05d7\36\0\1\u05d7\1\0"+
    "\1\u0647\10\0\2\u0793\20\0\2\u05d7\3\0\1\u0680\1\0"+
    "\1\u0795\3\0\1\u05d7\4\0\1\u0795\31\0\1\u05d7\1\0"+
    "\1\u0647\76\0\3\u0721\107\0\2\u0647\66\0\2\u06f6\65\0"+
    "\1\u0796\12\0\1\u0796\73\0\1\u0797\12\0\1\u0797\100\0"+
    "\1\u0798\142\0\1\u0799\3\0\6\u0799\22\0\1\u0799\52\0"+
    "\1\u0727\3\0\6\u0727\12\0\1\u079a\7\0\1\u0727\66\0"+
    "\2\u079b\30\0\1\u079c\12\0\1\u079c\71\0\1\u079d\10\0"+
    "\1\u079d\66\0\1\u079e\1\u079f\50\u079e\1\0\3\u079e\6\0"+
    "\22\u079e\1\0\1\u079e\1\u079f\50\u079e\1\0\3\u079e\1\0"+
    "\3\u069a\2\0\22\u079e\1\0\1\u079e\1\u079f\50\u079e\1\u069a"+
    "\3\u079e\6\u069a\22\u079e\1\u069a\1\u079e\1\u079f\50\u079e\1\0"+
    "\3\u079e\1\u069a\3\0\2\u069a\22\u079e\12\0\1\u07a0\12\0"+
    "\1\u07a0\74\0\1\u07a1\7\0\1\u07a1\150\0\2\u0736\107\0"+
    "\2\u07a2\62\0\2\u0739\67\0\2\u0738\67\0\1\u0739\10\0"+
    "\1\u0739\76\0\1\u07a3\10\0\1\u07a3\76\0\1\u07a4\12\0"+
    "\1\u07a4\127\0\3\u0739\107\0\2\u0560\66\0\2\u0734\67\0"+
    "\1\u04f2\130\0\2\u0601\101\0\2\u073c\66\0\1\u07a5\7\0"+
    "\1\u07a5\150\0\2\u0745\22\0\2\u0740\2\0\1\u0699\1\u07a6"+
    "\5\0\1\u0740\35\0\1\u069a\1\u0601\2\0\1\u069b\3\u069a"+
    "\1\u069c\1\u069a\22\0\1\u069a\66\0\2\u07a7\62\0\2\u0748"+
    "\67\0\2\u0747\67\0\1\u0748\10\0\1\u0748\76\0\1\u07a8"+
    "\10\0\1\u07a8\76\0\1\u07a9\12\0\1\u07a9\127\0\3\u0748"+
    "\107\0\2\u0575\66\0\2\u0743\66\0\1\u07aa\7\0\1\u07aa"+
    "\150\0\2\u0750\107\0\2\u07ab\62\0\2\u0753\67\0\2\u0752"+
    "\67\0\1\u0753\10\0\1\u0753\76\0\1\u07ac\10\0\1\u07ac"+
    "\76\0\1\u07ad\12\0\1\u07ad\127\0\3\u0753\107\0\2\u0582"+
    "\66\0\2\u074e\66\0\1\u07ae\7\0\1\u07ae\150\0\2\u075b"+
    "\107\0\2\u07af\62\0\2\u075e\67\0\2\u075d\67\0\1\u075e"+
    "\10\0\1\u075e\76\0\1\u07b0\10\0\1\u07b0\76\0\1\u07b1"+
    "\12\0\1\u07b1\127\0\3\u075e\107\0\2\u058f\66\0\2\u0759"+
    "\117\0\2\u07b2\42\0\1\u07b3\1\u07b4\50\u07b3\1\0\3\u07b3"+
    "\6\0\22\u07b3\1\0\1\u07b3\1\u07b4\50\u07b3\1\0\3\u07b3"+
    "\1\0\3\u06e1\2\0\22\u07b3\1\0\1\u07b3\1\u07b4\50\u07b3"+
    "\1\u06e1\3\u07b3\6\u06e1\22\u07b3\1\u06e1\1\u07b3\1\u07b4\50\u07b3"+
    "\1\0\3\u07b3\1\u06e1\3\0\2\u06e1\22\u07b3\12\0\1\u07b5"+
    "\12\0\1\u07b5\74\0\1\u07b6\7\0\1\u07b6\150\0\2\u076c"+
    "\107\0\2\u07b7\62\0\2\u076f\67\0\2\u076e\67\0\1\u076f"+
    "\10\0\1\u076f\76\0\1\u07b8\10\0\1\u07b8\76\0\1\u07b9"+
    "\12\0\1\u07b9\127\0\3\u076f\107\0\2\u05a8\66\0\2\u076a"+
    "\67\0\1\u0508\130\0\2\u0647\101\0\2\u0772\66\0\1\u07ba"+
    "\7\0\1\u07ba\150\0\2\u077b\22\0\2\u0776\2\0\1\u06e0"+
    "\1\u07bb\5\0\1\u0776\35\0\1\u06e1\1\u0647\2\0\1\u06e2"+
    "\3\u06e1\1\u06e3\1\u06e1\22\0\1\u06e1\66\0\2\u07bc\62\0"+
    "\2\u077e\67\0\2\u077d\67\0\1\u077e\10\0\1\u077e\76\0"+
    "\1\u07bd\10\0\1\u07bd\76\0\1\u07be\12\0\1\u07be\127\0"+
    "\3\u077e\107\0\2\u05bd\66\0\2\u0779\66\0\1\u07bf\7\0"+
    "\1\u07bf\150\0\2\u0786\107\0\2\u07c0\62\0\2\u0789\67\0"+
    "\2\u0788\67\0\1\u0789\10\0\1\u0789\76\0\1\u07c1\10\0"+
    "\1\u07c1\76\0\1\u07c2\12\0\1\u07c2\127\0\3\u0789\107\0"+
    "\2\u05ca\66\0\2\u0784\66\0\1\u07c3\7\0\1\u07c3\150\0"+
    "\2\u0791\107\0\2\u07c4\62\0\2\u0794\67\0\2\u0793\67\0"+
    "\1\u0794\10\0\1\u0794\76\0\1\u07c5\10\0\1\u07c5\76\0"+
    "\1\u07c6\12\0\1\u07c6\127\0\3\u0794\107\0\2\u05d7\66\0"+
    "\2\u078f\117\0\2\u07c7\54\0\1\u07c8\7\0\1\u07c8\67\0"+
    "\2\u0798\2\0\2\u0798\1\0\1\u0798\3\0\1\u07c9\4\0"+
    "\2\u0798\1\0\1\u0798\1\0\1\u0798\1\0\1\u0798\1\0"+
    "\1\u0798\1\0\1\u0798\1\0\1\u0798\1\0\1\u0798\1\0"+
    "\1\u0798\2\0\1\u0798\1\0\2\u0798\3\0\6\u0798\1\0"+
    "\1\u0798\1\0\2\u0798\1\0\1\u0798\1\0\1\u0798\3\0"+
    "\1\u0798\1\0\1\u0798\1\0\1\u0798\1\0\1\u0798\52\0"+
    "\1\u0799\3\0\6\u0799\12\0\1\u07ca\7\0\1\u0799\75\u07cb"+
    "\1\0\11\u07cb\66\0\2\u07cc\31\0\1\u07cd\7\0\1\u07cd"+
    "\102\0\1\u07ce\72\0\1\u079e\116\0\1\u07cf\7\0\1\u07cf"+
    "\77\0\1\u04f3\130\0\2\u0560\101\0\2\u07a2\66\0\1\u07d0"+
    "\7\0\1\u07d0\77\0\1\u04fa\102\0\1\u07d1\10\0\1\u07d1"+
    "\123\0\2\u0575\101\0\2\u07a7\66\0\1\u07d2\7\0\1\u07d2"+
    "\77\0\1\u04fb\130\0\2\u0582\101\0\2\u07ab\66\0\1\u07d3"+
    "\7\0\1\u07d3\77\0\1\u04fc\130\0\2\u058f\101\0\2\u07af"+
    "\66\0\1\u07d4\7\0\1\u07d4\76\0\1\u07d5\7\0\1\u07d5"+
    "\66\0\1\u07b3\116\0\1\u07d6\7\0\1\u07d6\77\0\1\u0509"+
    "\130\0\2\u05a8\101\0\2\u07b7\66\0\1\u07d7\7\0\1\u07d7"+
    "\77\0\1\u0510\102\0\1\u07d8\10\0\1\u07d8\123\0\2\u05bd"+
    "\101\0\2\u07bc\66\0\1\u07d9\7\0\1\u07d9\77\0\1\u0511"+
    "\130\0\2\u05ca\101\0\2\u07c0\66\0\1\u07da\7\0\1\u07da"+
    "\77\0\1\u0512\130\0\2\u05d7\101\0\2\u07c4\66\0\1\u07db"+
    "\7\0\1\u07db\76\0\1\u07dc\7\0\1\u07dc\77\0\1\u052f"+
    "\145\0\1\u07dd\3\0\6\u07dd\22\0\1\u07dd\75\u07de\1\0"+
    "\11\u07de\75\u07cb\1\u07df\11\u07cb\35\0\2\u07e0\63\0\1\u0556"+
    "\104\0\1\u07e1\12\0\1\u07e1\75\0\1\u0601\106\0\1\u0560"+
    "\103\0\1\u07e2\10\0\1\u07e2\100\0\1\u0575\106\0\1\u0582"+
    "\106\0\1\u058f\176\0\2\u07e3\15\0\1\u0647\106\0\1\u05a8"+
    "\103\0\1\u07e4\10\0\1\u07e4\100\0\1\u05bd\106\0\1\u05ca"+
    "\106\0\1\u05d7\176\0\2\u07e5\54\0\1\u07dd\3\0\6\u07dd"+
    "\12\0\1\u07e6\7\0\1\u07dd\75\u07de\1\u07e7\11\u07de\54\0"+
    "\1\u07e8\63\0\2\u07e9\117\0\2\u07ea\53\0\1\u07eb\12\0"+
    "\1\u07eb\100\0\1\u07ec\101\0\1\u07ed\12\0\1\u07ed\100\0"+
    "\1\u07ee\70\0\75\u07ef\1\0\11\u07ef\54\0\1\u07f0\120\0"+
    "\2\u07f1\64\0\3\u059a\51\0\1\u07f2\7\0\1\u07f2\76\0"+
    "\1\u07f3\7\0\1\u07f3\67\0\2\u07ec\2\0\2\u07ec\1\0"+
    "\1\u07ec\3\0\1\u07f4\4\0\2\u07ec\1\0\1\u07ec\1\0"+
    "\1\u07ec\1\0\1\u07ec\1\0\1\u07ec\1\0\1\u07ec\1\0"+
    "\1\u07ec\1\0\1\u07ec\1\0\1\u07ec\2\0\1\u07ec\1\0"+
    "\2\u07ec\3\0\6\u07ec\1\0\1\u07ec\1\0\2\u07ec\1\0"+
    "\1\u07ec\1\0\1\u07ec\3\0\1\u07ec\1\0\1\u07ec\1\0"+
    "\1\u07ec\1\0\1\u07ec\12\0\1\u07f5\7\0\1\u07f5\67\0"+
    "\2\u07ee\2\0\2\u07ee\1\0\1\u07ee\3\0\1\u07f6\4\0"+
    "\2\u07ee\1\0\1\u07ee\1\0\1\u07ee\1\0\1\u07ee\1\0"+
    "\1\u07ee\1\0\1\u07ee\1\0\1\u07ee\1\0\1\u07ee\1\0"+
    "\1\u07ee\2\0\1\u07ee\1\0\2\u07ee\3\0\6\u07ee\1\0"+
    "\1\u07ee\1\0\2\u07ee\1\0\1\u07ee\1\0\1\u07ee\3\0"+
    "\1\u07ee\1\0\1\u07ee\1\0\1\u07ee\1\0\1\u07ee\75\u07ef"+
    "\1\u07f7\11\u07ef\66\0\2\u07f8\112\0\2\u07f9\115\0\2\u07fa"+
    "\15\0\1\u0740\145\0\1\u07fb\3\0\6\u07fb\22\0\1\u07fb"+
    "\13\0\1\u0776\145\0\1\u07fc\3\0\6\u07fc\22\0\1\u07fc"+
    "\54\0\1\u07fd\125\0\2\u07fe\21\0\1\u07ff\10\0\1\u07ff"+
    "\104\0\1\u0800\142\0\1\u07fb\3\0\6\u07fb\12\0\1\u0801"+
    "\7\0\1\u07fb\52\0\1\u07fc\3\0\6\u07fc\12\0\1\u0802"+
    "\7\0\1\u07fc\66\0\2\u0803\26\0\1\u0804\10\0\1\u0804"+
    "\164\0\1\363\13\0\2\u0800\2\0\2\u0800\1\0\1\u0800"+
    "\3\0\1\u0805\4\0\2\u0800\1\0\1\u0800\1\0\1\u0800"+
    "\1\0\1\u0800\1\0\1\u0800\1\0\1\u0800\1\0\1\u0800"+
    "\1\0\1\u0800\1\0\1\u0800\2\0\1\u0800\1\0\2\u0800"+
    "\3\0\6\u0800\1\0\1\u0800\1\0\2\u0800\1\0\1\u0800"+
    "\1\0\1\u0800\3\0\1\u0800\1\0\1\u0800\1\0\1\u0800"+
    "\1\0\1\u0800\75\u0806\1\0\11\u0806\75\u0807\1\0\11\u0807"+
    "\73\0\2\u0808\110\0\1\u01d6\62\0\1\u0809\3\0\6\u0809"+
    "\22\0\1\u0809\75\u0806\1\u080a\11\u0806\75\u0807\1\u080b\11\u0807"+
    "\7\0\1\u080c\10\0\1\u080c\140\0\1\u0809\3\0\6\u0809"+
    "\12\0\1\u080d\7\0\1\u0809\54\0\1\u080e\106\0\1\u080f"+
    "\130\0\1\u0327\10\0\75\u0810\1\0\11\u0810\66\0\2\u0811"+
    "\105\0\2\u0812\17\0\75\u0810\1\u0813\11\u0810\73\0\2\u0814"+
    "\105\0\2\u0815\66\0\1\u0816\41\0\1\u0817\10\0\1\u0817"+
    "\75\0\1\u0818\10\0\1\u0818\154\0\2\u0819\115\0\1\u048f"+
    "\106\0\1\u0446\103\0\2\u081a\21\0\1\u081b\10\0\1\u081b"+
    "\164\0\1\u0556\10\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[144201];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\25\0\2\1\1\11\1\1\1\11\1\1\1\11\17\1"+
    "\1\11\2\1\1\0\1\1\2\0\1\1\56\0\1\11"+
    "\5\0\4\1\1\0\1\1\16\0\3\1\132\0\1\1"+
    "\4\0\1\1\2\0\12\1\207\0\1\11\4\1\253\0"+
    "\1\11\2\0\1\11\3\1\2\0\1\11\3\1\2\0"+
    "\1\11\3\1\2\0\1\11\3\1\2\0\1\11\3\1"+
    "\2\0\1\11\3\1\2\0\1\11\3\1\30\0\1\11"+
    "\3\1\1\0\1\11\3\1\1\0\1\11\3\1\3\0"+
    "\1\11\3\1\2\0\1\11\3\1\174\0\1\11\3\1"+
    "\3\0\1\11\3\1\227\0\1\11\1\1\244\0\1\11"+
    "\u019f\0\1\11\1\1\u01b8\0\1\11\1\1\23\0\1\11"+
    "\1\1\147\0";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[2075];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true iff the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true iff the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /** For the backwards DFA of general lookahead statements */
  private boolean [] zzFin = new boolean [ZZ_BUFFERSIZE+1];

  /* user code: */
	
	/* Custom java code */

    @Override
	public String language() { return "IT"; }

	@Override
	public String version() { return "1.1"; }


	/* An empty default constructor is required to comply with LinkolnService */
	
	public Dates() { }
	
	@Override
	public final boolean run() {
		
		try {
			
			yyreset(new StringReader(getInput()));
			yylex();
			
		} catch (IOException e) {

			e.printStackTrace();
			return false;
		}
		
		return true;
	}
	
	@Override
	protected void addValue() {

		//TODO check for NULL values?
			
		String norm = annotationEntity.getRelatedEntity("YEAR").getValue() + "-" + 
					annotationEntity.getRelatedEntity("MONTH").getValue() + "-" + 
					annotationEntity.getRelatedEntity("DAY").getValue();
		
		annotationEntity.setValue(norm);
	} 
	


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public Dates(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 382) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public int yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      yychar+= zzMarkedPosL-zzStartRead;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':  // fall through
        case '\u000C':  // fall through
        case '\u0085':  // fall through
        case '\u2028':  // fall through
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn += zzCharCount;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return YYEOF;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { addText(yytext());
	position++;
            } 
            // fall through
          case 26: break;
          case 2: 
            { addText(yytext());
		position++;
            } 
            // fall through
          case 27: break;
          case 3: 
            { checkEnd();
            } 
            // fall through
          case 28: break;
          case 4: 
            { save(new Year(), Util.readFirstNumber(yytext()), false);
            } 
            // fall through
          case 29: break;
          case 5: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 6;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 7;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), Util.readFirstNumber(yytext()), false);
            } 
            // fall through
          case 30: break;
          case 6: 
            { addText(yytext());
		position--; //account for the following {LKN_C} character
		yybegin(YYINITIAL);
            } 
            // fall through
          case 31: break;
          case 7: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 19;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 9;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), "11", false);
            } 
            // fall through
          case 32: break;
          case 8: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 17;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 9;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), "09", false);
            } 
            // fall through
          case 33: break;
          case 9: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 12;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 9;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), "04", false);
            } 
            // fall through
          case 34: break;
          case 10: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 16;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 9;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), "08", false);
            } 
            // fall through
          case 35: break;
          case 11: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 8;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 9;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), "01", false);
            } 
            // fall through
          case 36: break;
          case 12: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 14;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 9;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), "06", false);
            } 
            // fall through
          case 37: break;
          case 13: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 18;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 9;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), "10", false);
            } 
            // fall through
          case 38: break;
          case 14: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 13;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 9;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), "05", false);
            } 
            // fall through
          case 39: break;
          case 15: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 11;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 9;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), "03", false);
            } 
            // fall through
          case 40: break;
          case 16: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 15;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 9;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), "07", false);
            } 
            // fall through
          case 41: break;
          case 17: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 20;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 9;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), "12", false);
            } 
            // fall through
          case 42: break;
          case 18: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 10;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 9;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Month(), "02", false);
            } 
            // fall through
          case 43: break;
          case 19: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 3;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 5;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Day(), Util.readFirstNumber(yytext()), false);
            } 
            // fall through
          case 44: break;
          case 20: 
            // general lookahead, find correct zzMarkedPos
            { int zzFState = 3;
              int zzFPos = zzStartRead;
              if (zzFin.length <= zzBufferL.length) { zzFin = new boolean[zzBufferL.length+1]; }
              boolean zzFinL[] = zzFin;
              while (zzFState != -1 && zzFPos < zzMarkedPos) {
                zzFinL[zzFPos] = ((zzAttrL[zzFState] & 1) == 1);
                zzInput = Character.codePointAt(zzBufferL, zzFPos, zzMarkedPos);
                zzFPos += Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              }
              if (zzFState != -1) { zzFinL[zzFPos++] = ((zzAttrL[zzFState] & 1) == 1); } 
              while (zzFPos <= zzMarkedPos) {
                zzFinL[zzFPos++] = false;
              }

              zzFState = 4;
              zzFPos = zzMarkedPos;
              while (!zzFinL[zzFPos] || (zzAttrL[zzFState] & 1) != 1) {
                zzInput = Character.codePointBefore(zzBufferL, zzFPos, zzStartRead);
                zzFPos -= Character.charCount(zzInput);
                zzFState = zzTransL[ zzRowMapL[zzFState] + zzCMapL[zzInput] ];
              };
              zzMarkedPos = zzFPos;
            }
            { save(new Day(), Util.readFirstNumber(yytext()), false);
            } 
            // fall through
          case 45: break;
          case 21: 
            { start(new DocumentDate(), completeDateState, true, true);
            } 
            // fall through
          case 46: break;
          case 22: 
            { addText(yytext()); 
	yybegin(lkn);
            } 
            // fall through
          case 47: break;
          case 23: 
            { start(new PublicationDate(), completeDateState, true, true);
            } 
            // fall through
          case 48: break;
          case 24: 
            { start(new FilingDate(), completeDateState, true, true);
            } 
            // fall through
          case 49: break;
          case 25: 
            { start(new NotificationDate(), completeDateState, true, true);
            } 
            // fall through
          case 50: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }

  /**
   * Runs the scanner on input files.
   *
   * This is a standalone scanner, it will print any unmatched
   * text to System.out unchanged.
   *
   * @param argv   the command line, contains the filenames to run
   *               the scanner on.
   */
  public static void main(String argv[]) {
    if (argv.length == 0) {
      System.out.println("Usage : java Dates [ --encoding <name> ] <inputfile(s)>");
    }
    else {
      int firstFilePos = 0;
      String encodingName = "UTF-8";
      if (argv[0].equals("--encoding")) {
        firstFilePos = 2;
        encodingName = argv[1];
        try {
          java.nio.charset.Charset.forName(encodingName); // Side-effect: is encodingName valid? 
        } catch (Exception e) {
          System.out.println("Invalid encoding '" + encodingName + "'");
          return;
        }
      }
      for (int i = firstFilePos; i < argv.length; i++) {
        Dates scanner = null;
        try {
          java.io.FileInputStream stream = new java.io.FileInputStream(argv[i]);
          java.io.Reader reader = new java.io.InputStreamReader(stream, encodingName);
          scanner = new Dates(reader);
          while ( !scanner.zzAtEOF ) scanner.yylex();
        }
        catch (java.io.FileNotFoundException e) {
          System.out.println("File not found : \""+argv[i]+"\"");
        }
        catch (java.io.IOException e) {
          System.out.println("IO error scanning file \""+argv[i]+"\"");
          System.out.println(e);
        }
        catch (Exception e) {
          System.out.println("Unexpected exception:");
          e.printStackTrace();
        }
      }
    }
  }


}
